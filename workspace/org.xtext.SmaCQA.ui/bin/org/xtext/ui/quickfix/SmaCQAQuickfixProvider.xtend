/*
 * generated by Xtext 2.12.0
 */
package org.xtext.ui.quickfix

import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.validation.Issue
import org.xtext.validation.SmaCQAValidator
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
class SmaCQAQuickfixProvider extends DefaultQuickfixProvider {
	//SmaCQA+ quickfix methods
	
	@Fix(SmaCQAValidator.INVALID_RATE)
	def changeRate(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Establish a minimum number unit', 'Establish a minimum number unit.', 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, 1, "1")
		]
	}
	@Fix(SmaCQAValidator.INVALID_TRACKING_NUMBER)
	def changeTrackingNumber(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Establish a 7 digits tracking number.', 'Establish a 7 digits tracking number.', 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			val newText="5436793"
			xtextDocument.replace(issue.offset, 1, newText)
		]
	}
	@Fix(SmaCQAValidator.INVALID_AGE)
	def changeAge(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Establish a valid age between 16 and 110.', 'Establish a valid age between 16 and 110.', 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, 1, "18")
		]
	}

	@Fix(SmaCQAValidator.INVALID_NAME)
	def capitalizeName(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Capitalize name', 'Capitalize the name.', 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			val firstLetter = xtextDocument.get(issue.offset, 1)
			xtextDocument.replace(issue.offset, 1, firstLetter.toUpperCase)
		]
	}
		
	@Fix(SmaCQAValidator.INVALID_NUMBER)
	def changeUnit(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Establish a minimum number unit', 'Establish a minimum number unit.', 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, 1, "1")
		]
	}
	
	@Fix(SmaCQAValidator.TOKEN_SYMBOL_QUESTION)
	def changeSymbol(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Change decimals specification token', "Capitalize the token's decimal property.", 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			val firstLetter = xtextDocument.get(issue.offset, 2)
			xtextDocument.replace(issue.offset, 1, "18")
		]
	}
	
	@Fix(SmaCQAValidator.TOKEN_NAME_QUESTION)
	def changeName(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Change name specification token', "Capitalize the token's name property.", 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset,  issue.offset, "Token_" + xtextDocument)
		]
	}
	
	@Fix(SmaCQAValidator.TOKEN_SUPPLY_QUESTION)
	def changeSupply(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Change supply specification token', "Capitalize the token's supply property.", 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, issue.offset, "100")
		]
	}
	
	@Fix(SmaCQAValidator.TOKEN_DECIMALS_QUESTION)
	def changeDecimals(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Change decimals specification token', "Capitalize the token's decimal property.", 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset,  issue.offset, "18")
		]
	}
	
	
	
}
