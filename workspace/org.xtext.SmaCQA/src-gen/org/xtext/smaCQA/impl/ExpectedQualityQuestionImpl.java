/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.smaCQA.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.smaCQA.ExpectedQualityQuestion;
import org.xtext.smaCQA.SmaCQAPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expected Quality Question</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.smaCQA.impl.ExpectedQualityQuestionImpl#getQ1 <em>Q1</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ExpectedQualityQuestionImpl#getAnswer1 <em>Answer1</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ExpectedQualityQuestionImpl#getQ2 <em>Q2</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ExpectedQualityQuestionImpl#getAnswer2 <em>Answer2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExpectedQualityQuestionImpl extends MinimalEObjectImpl.Container implements ExpectedQualityQuestion
{
  /**
	 * The default value of the '{@link #getQ1() <em>Q1</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getQ1()
	 * @generated
	 * @ordered
	 */
  protected static final String Q1_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getQ1() <em>Q1</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getQ1()
	 * @generated
	 * @ordered
	 */
  protected String q1 = Q1_EDEFAULT;

  /**
	 * The default value of the '{@link #getAnswer1() <em>Answer1</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAnswer1()
	 * @generated
	 * @ordered
	 */
  protected static final String ANSWER1_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getAnswer1() <em>Answer1</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAnswer1()
	 * @generated
	 * @ordered
	 */
  protected String answer1 = ANSWER1_EDEFAULT;

  /**
	 * The default value of the '{@link #getQ2() <em>Q2</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getQ2()
	 * @generated
	 * @ordered
	 */
  protected static final String Q2_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getQ2() <em>Q2</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getQ2()
	 * @generated
	 * @ordered
	 */
  protected String q2 = Q2_EDEFAULT;

  /**
	 * The default value of the '{@link #getAnswer2() <em>Answer2</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAnswer2()
	 * @generated
	 * @ordered
	 */
  protected static final String ANSWER2_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getAnswer2() <em>Answer2</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAnswer2()
	 * @generated
	 * @ordered
	 */
  protected String answer2 = ANSWER2_EDEFAULT;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ExpectedQualityQuestionImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return SmaCQAPackage.Literals.EXPECTED_QUALITY_QUESTION;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getQ1()
  {
		return q1;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setQ1(String newQ1)
  {
		String oldQ1 = q1;
		q1 = newQ1;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q1, oldQ1, q1));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getAnswer1()
  {
		return answer1;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setAnswer1(String newAnswer1)
  {
		String oldAnswer1 = answer1;
		answer1 = newAnswer1;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER1, oldAnswer1, answer1));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getQ2()
  {
		return q2;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setQ2(String newQ2)
  {
		String oldQ2 = q2;
		q2 = newQ2;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q2, oldQ2, q2));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getAnswer2()
  {
		return answer2;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setAnswer2(String newAnswer2)
  {
		String oldAnswer2 = answer2;
		answer2 = newAnswer2;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER2, oldAnswer2, answer2));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q1:
				return getQ1();
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER1:
				return getAnswer1();
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q2:
				return getQ2();
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER2:
				return getAnswer2();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q1:
				setQ1((String)newValue);
				return;
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER1:
				setAnswer1((String)newValue);
				return;
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q2:
				setQ2((String)newValue);
				return;
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER2:
				setAnswer2((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q1:
				setQ1(Q1_EDEFAULT);
				return;
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER1:
				setAnswer1(ANSWER1_EDEFAULT);
				return;
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q2:
				setQ2(Q2_EDEFAULT);
				return;
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER2:
				setAnswer2(ANSWER2_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q1:
				return Q1_EDEFAULT == null ? q1 != null : !Q1_EDEFAULT.equals(q1);
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER1:
				return ANSWER1_EDEFAULT == null ? answer1 != null : !ANSWER1_EDEFAULT.equals(answer1);
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__Q2:
				return Q2_EDEFAULT == null ? q2 != null : !Q2_EDEFAULT.equals(q2);
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION__ANSWER2:
				return ANSWER2_EDEFAULT == null ? answer2 != null : !ANSWER2_EDEFAULT.equals(answer2);
		}
		return super.eIsSet(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (q1: ");
		result.append(q1);
		result.append(", answer1: ");
		result.append(answer1);
		result.append(", q2: ");
		result.append(q2);
		result.append(", answer2: ");
		result.append(answer2);
		result.append(')');
		return result.toString();
	}

} //ExpectedQualityQuestionImpl
