/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.smaCQA.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.smaCQA.AdditionalLegalDocumentQuestion;
import org.xtext.smaCQA.AgeQuestion;
import org.xtext.smaCQA.LegalQuestion;
import org.xtext.smaCQA.RegulatoryComplianceQuestion;
import org.xtext.smaCQA.SmaCQAPackage;
import org.xtext.smaCQA.TaxQuestion;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Legal Question</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.smaCQA.impl.LegalQuestionImpl#getAgeQuestion <em>Age Question</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.LegalQuestionImpl#getTaxQuestion <em>Tax Question</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.LegalQuestionImpl#getAdditionalLegalDocument <em>Additional Legal Document</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.LegalQuestionImpl#getRegulatoryCompliance <em>Regulatory Compliance</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LegalQuestionImpl extends MinimalEObjectImpl.Container implements LegalQuestion
{
  /**
	 * The cached value of the '{@link #getAgeQuestion() <em>Age Question</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAgeQuestion()
	 * @generated
	 * @ordered
	 */
  protected AgeQuestion ageQuestion;

  /**
	 * The cached value of the '{@link #getTaxQuestion() <em>Tax Question</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getTaxQuestion()
	 * @generated
	 * @ordered
	 */
  protected TaxQuestion taxQuestion;

  /**
	 * The cached value of the '{@link #getAdditionalLegalDocument() <em>Additional Legal Document</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAdditionalLegalDocument()
	 * @generated
	 * @ordered
	 */
  protected AdditionalLegalDocumentQuestion additionalLegalDocument;

  /**
	 * The cached value of the '{@link #getRegulatoryCompliance() <em>Regulatory Compliance</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getRegulatoryCompliance()
	 * @generated
	 * @ordered
	 */
  protected RegulatoryComplianceQuestion regulatoryCompliance;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected LegalQuestionImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return SmaCQAPackage.Literals.LEGAL_QUESTION;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public AgeQuestion getAgeQuestion()
  {
		return ageQuestion;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetAgeQuestion(AgeQuestion newAgeQuestion, NotificationChain msgs)
  {
		AgeQuestion oldAgeQuestion = ageQuestion;
		ageQuestion = newAgeQuestion;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.LEGAL_QUESTION__AGE_QUESTION, oldAgeQuestion, newAgeQuestion);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setAgeQuestion(AgeQuestion newAgeQuestion)
  {
		if (newAgeQuestion != ageQuestion) {
			NotificationChain msgs = null;
			if (ageQuestion != null)
				msgs = ((InternalEObject)ageQuestion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.LEGAL_QUESTION__AGE_QUESTION, null, msgs);
			if (newAgeQuestion != null)
				msgs = ((InternalEObject)newAgeQuestion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.LEGAL_QUESTION__AGE_QUESTION, null, msgs);
			msgs = basicSetAgeQuestion(newAgeQuestion, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.LEGAL_QUESTION__AGE_QUESTION, newAgeQuestion, newAgeQuestion));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public TaxQuestion getTaxQuestion()
  {
		return taxQuestion;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetTaxQuestion(TaxQuestion newTaxQuestion, NotificationChain msgs)
  {
		TaxQuestion oldTaxQuestion = taxQuestion;
		taxQuestion = newTaxQuestion;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.LEGAL_QUESTION__TAX_QUESTION, oldTaxQuestion, newTaxQuestion);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setTaxQuestion(TaxQuestion newTaxQuestion)
  {
		if (newTaxQuestion != taxQuestion) {
			NotificationChain msgs = null;
			if (taxQuestion != null)
				msgs = ((InternalEObject)taxQuestion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.LEGAL_QUESTION__TAX_QUESTION, null, msgs);
			if (newTaxQuestion != null)
				msgs = ((InternalEObject)newTaxQuestion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.LEGAL_QUESTION__TAX_QUESTION, null, msgs);
			msgs = basicSetTaxQuestion(newTaxQuestion, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.LEGAL_QUESTION__TAX_QUESTION, newTaxQuestion, newTaxQuestion));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public AdditionalLegalDocumentQuestion getAdditionalLegalDocument()
  {
		return additionalLegalDocument;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetAdditionalLegalDocument(AdditionalLegalDocumentQuestion newAdditionalLegalDocument, NotificationChain msgs)
  {
		AdditionalLegalDocumentQuestion oldAdditionalLegalDocument = additionalLegalDocument;
		additionalLegalDocument = newAdditionalLegalDocument;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.LEGAL_QUESTION__ADDITIONAL_LEGAL_DOCUMENT, oldAdditionalLegalDocument, newAdditionalLegalDocument);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setAdditionalLegalDocument(AdditionalLegalDocumentQuestion newAdditionalLegalDocument)
  {
		if (newAdditionalLegalDocument != additionalLegalDocument) {
			NotificationChain msgs = null;
			if (additionalLegalDocument != null)
				msgs = ((InternalEObject)additionalLegalDocument).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.LEGAL_QUESTION__ADDITIONAL_LEGAL_DOCUMENT, null, msgs);
			if (newAdditionalLegalDocument != null)
				msgs = ((InternalEObject)newAdditionalLegalDocument).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.LEGAL_QUESTION__ADDITIONAL_LEGAL_DOCUMENT, null, msgs);
			msgs = basicSetAdditionalLegalDocument(newAdditionalLegalDocument, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.LEGAL_QUESTION__ADDITIONAL_LEGAL_DOCUMENT, newAdditionalLegalDocument, newAdditionalLegalDocument));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public RegulatoryComplianceQuestion getRegulatoryCompliance()
  {
		return regulatoryCompliance;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetRegulatoryCompliance(RegulatoryComplianceQuestion newRegulatoryCompliance, NotificationChain msgs)
  {
		RegulatoryComplianceQuestion oldRegulatoryCompliance = regulatoryCompliance;
		regulatoryCompliance = newRegulatoryCompliance;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.LEGAL_QUESTION__REGULATORY_COMPLIANCE, oldRegulatoryCompliance, newRegulatoryCompliance);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setRegulatoryCompliance(RegulatoryComplianceQuestion newRegulatoryCompliance)
  {
		if (newRegulatoryCompliance != regulatoryCompliance) {
			NotificationChain msgs = null;
			if (regulatoryCompliance != null)
				msgs = ((InternalEObject)regulatoryCompliance).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.LEGAL_QUESTION__REGULATORY_COMPLIANCE, null, msgs);
			if (newRegulatoryCompliance != null)
				msgs = ((InternalEObject)newRegulatoryCompliance).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.LEGAL_QUESTION__REGULATORY_COMPLIANCE, null, msgs);
			msgs = basicSetRegulatoryCompliance(newRegulatoryCompliance, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.LEGAL_QUESTION__REGULATORY_COMPLIANCE, newRegulatoryCompliance, newRegulatoryCompliance));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case SmaCQAPackage.LEGAL_QUESTION__AGE_QUESTION:
				return basicSetAgeQuestion(null, msgs);
			case SmaCQAPackage.LEGAL_QUESTION__TAX_QUESTION:
				return basicSetTaxQuestion(null, msgs);
			case SmaCQAPackage.LEGAL_QUESTION__ADDITIONAL_LEGAL_DOCUMENT:
				return basicSetAdditionalLegalDocument(null, msgs);
			case SmaCQAPackage.LEGAL_QUESTION__REGULATORY_COMPLIANCE:
				return basicSetRegulatoryCompliance(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case SmaCQAPackage.LEGAL_QUESTION__AGE_QUESTION:
				return getAgeQuestion();
			case SmaCQAPackage.LEGAL_QUESTION__TAX_QUESTION:
				return getTaxQuestion();
			case SmaCQAPackage.LEGAL_QUESTION__ADDITIONAL_LEGAL_DOCUMENT:
				return getAdditionalLegalDocument();
			case SmaCQAPackage.LEGAL_QUESTION__REGULATORY_COMPLIANCE:
				return getRegulatoryCompliance();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case SmaCQAPackage.LEGAL_QUESTION__AGE_QUESTION:
				setAgeQuestion((AgeQuestion)newValue);
				return;
			case SmaCQAPackage.LEGAL_QUESTION__TAX_QUESTION:
				setTaxQuestion((TaxQuestion)newValue);
				return;
			case SmaCQAPackage.LEGAL_QUESTION__ADDITIONAL_LEGAL_DOCUMENT:
				setAdditionalLegalDocument((AdditionalLegalDocumentQuestion)newValue);
				return;
			case SmaCQAPackage.LEGAL_QUESTION__REGULATORY_COMPLIANCE:
				setRegulatoryCompliance((RegulatoryComplianceQuestion)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.LEGAL_QUESTION__AGE_QUESTION:
				setAgeQuestion((AgeQuestion)null);
				return;
			case SmaCQAPackage.LEGAL_QUESTION__TAX_QUESTION:
				setTaxQuestion((TaxQuestion)null);
				return;
			case SmaCQAPackage.LEGAL_QUESTION__ADDITIONAL_LEGAL_DOCUMENT:
				setAdditionalLegalDocument((AdditionalLegalDocumentQuestion)null);
				return;
			case SmaCQAPackage.LEGAL_QUESTION__REGULATORY_COMPLIANCE:
				setRegulatoryCompliance((RegulatoryComplianceQuestion)null);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.LEGAL_QUESTION__AGE_QUESTION:
				return ageQuestion != null;
			case SmaCQAPackage.LEGAL_QUESTION__TAX_QUESTION:
				return taxQuestion != null;
			case SmaCQAPackage.LEGAL_QUESTION__ADDITIONAL_LEGAL_DOCUMENT:
				return additionalLegalDocument != null;
			case SmaCQAPackage.LEGAL_QUESTION__REGULATORY_COMPLIANCE:
				return regulatoryCompliance != null;
		}
		return super.eIsSet(featureID);
	}

} //LegalQuestionImpl
