/*
 * generated by Xtext 2.12.0
 */
package org.xtext.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.smaCQA.Model
import org.xtext.smaCQA.ValueExchange
import java.util.Date
import java.sql.Timestamp
import org.xtext.smaCQA.impl.ValueObjectTokenQuestionImpl
import org.xtext.smaCQA.Token
import org.xtext.smaCQA.impl.ValueObjectQuestionImpl
import org.xtext.smaCQA.ValueObjectTokenQuestion
import org.xtext.smaCQA.ValueObjectQuestion
import org.xtext.smaCQA.ValueObjectTangibleQuestion
import org.xtext.smaCQA.impl.TokenERC223Impl
import org.xtext.smaCQA.impl.TokenERC20Impl
import org.xtext.smaCQA.TokenERC20
import org.xtext.smaCQA.TokenERC223
import org.xtext.smaCQA.TokenERC721
import org.xtext.smaCQA.*
/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
 
class HTMLGenerator extends AbstractGenerator {
		
		Date date = new Date();
  		Timestamp timestamp = new Timestamp(date.getTime());
  		
  		/*
  		 * Parámetros de entrada obligatorios: Input es el modelo, fsa es un manejador del sistema de ficheros con lo que se puede hacer varias operaciones sobre estos, context es el contexto de ejecución (no se usa)
  		 * Descripción:Generación del archivo HTML mediante el esqueleto de la plantilla junto con la información del modelo SmaCQA
  		 * 
  		 */
  		override doGenerate(Resource input, IFileSystemAccess2 fsa, IGeneratorContext context) {
			val root = input.allContents.head as Model;//Hacemos un casting para obtener la raiz del modelo SmaCQA que nos permita disponer de la información sobre la que cuelga esta
			val nameFile = input.URI.toString.substring(input.URI.toString.lastIndexOf('/')+1,input.URI.toString.lastIndexOf('.'));//Modificamos la ruta donde guardaremos el archivo
			val pathBlockly = input.URI.path.toString.replace(".qa",".html");//Sustituimos la extensión del modelo a generar (En este caso, .qa por .html)
			fsa.generateFile(pathBlockly,this.toHTML(root,nameFile));//Esto genera un archivo HTML a partir de la raiz del modelo SmaCQA y la ruta establecida
		}
  		
  		/*
  		 * Parámetro de entrada: La raíz del modelo SmaCQA sobre el que se quiere generar una tabla HTML para visualizar los datos recogidos mediante la inserción por parte del usuario en el editor textual 
  		 * Descripción: Define una plantilla para generar en base a la información recogida del modelo una tabla HTML
  		 * Parámetro de salida: Ninguno
  		 */
  		 @SuppressWarnings("all")
		def toHTML(Model file,String nameFile){
		'''	
		<html>	
			<head>
				<style>
				
					h1 {
					    background-color: rgba(5, 5, 100, 0.99);
   					    border-radius: 4px;
   					    width: 75%;
					    margin: 0 auto;
					    margin-top: 2%;
					    border-collapse: collapse;
					    text-align: center;
   					    color: white;
					}
					
				
					table {
					  background: white;
					  width: 65%;
					  margin: 0 auto;
					  margin-top: 2%;
					  border-collapse: collapse;
					  text-align: center;
					}
					
					
					.subtable {
					  background: white;
					  width: 55%;
					  margin: 0 auto;
					  margin-top: 2%;
					  border-collapse: collapse;
					  text-align: center;
					}
										
					
					th {
					  background-color: rgba(5, 5, 100, 95);
					  height: 35px;
					  border-bottom: 1px solid rgb(210, 220, 250);
					  color: rgb(120, 120, 120);
					}
					
					.subth {
					  background-color: rgba(5, 5, 100, 95);
					  height: 15px;
					  border-bottom: 1px solid rgb(210, 220, 250);
					  color: rgb(120, 120, 120);
					}
					
					
					td {
					  color: rgba(100, 100, 100, 60);
					  height: 30px;
					  border: 1px solid rgba(240, 240, 240, 10);
					}
					
					.subtd {
					  color: rgba(100, 100, 100, 60);
					  height: 15px;
					  border: 1px solid rgba(240, 240, 240, 10);
					}
					
			
					th{
					  background-color: rgba(5, 5, 100, 0.99);
					  border-radius: 4px;
					  height: 30px;
					  padding: 1em;
					  margin: 0 25%;
					  text-align: center;
					  color: white;
					}
					
					.subth{
					  background-color: rgba(5, 5, 100, 0.99);
					  border-radius: 4px;
					  height: 15px;
					  padding: 1em;
					  margin: 0 25%;
					  text-align: center;
					  color: white;
					}
					
					footer{
					  background-color: rgba(5, 5, 100, 0.99);
					  border-radius: 4px;
					  height: 20px;
					  width: 75%;
					  padding: 1em;
					  margin: 5%;
					  margin-left: 11.5%;
					  text-align: center;
					  color: white;
					}
					
				</style>
			</head>
			<body>
				<h1>REPORT</h1>
				«FOR valueExchange:file.valueExchanges»				
				<table>
					<tr>
						<th colspan="3"  height="20px">VALUE EXCHANGE: «valueExchange.actorSend» --> «valueExchange.actorReceipt»</th>
					</tr>
					<tr>
						<th>QUESTION</th>
						<th>ASPECT</th>
						<th>ANSWER</th>
					</tr>		
					«dataQuestion(valueExchange)»
					«legalQuestion(valueExchange)»	
					«economyQuestion(valueExchange)»
					«shipmentQuestion(valueExchange)»
					«insuranceQuestion(valueExchange)»	
					«alimentaryQuestion(valueExchange)»
					
				</table>
				«ENDFOR»
				<footer>DATE: «timestamp.toLocalDateTime»</footer>
			</body>
		</html>
		'''
		}
	
	
		
		def dataQuestion(ValueExchange valueExchange){
		'''				
			«IF valueExchange.dataQuestion !== null»
					«IF valueExchange.dataQuestion.valueObjectTypeValueExchange !== null»
						«IF valueExchange.dataQuestion.valueObjectTypeValueExchange.eClass.name.toString.equals("ValueObjectTokenQuestion")»
							<tr>
								<td>«valueExchange.dataQuestion.valueObjectTypeValueExchange.name»</td>
								<td>"Data"</td>
								<td>«tokenQuestion(valueExchange.dataQuestion.valueObjectTypeValueExchange)»</td>
							</tr>
						«ELSEIF valueExchange.dataQuestion.valueObjectTypeValueExchange.eClass.name.toString.equals("ValueObjectPhysicalQuestion")»
							<tr>
								<td>«valueExchange.dataQuestion.valueObjectTypeValueExchange.name»</td>
								<td>"Data"</td>
								<td>«structQuestion(valueExchange.dataQuestion.valueObjectTypeValueExchange)»</td>
							</tr>
						«ELSE»
							<tr>
								<td>«valueExchange.dataQuestion.valueObjectTypeValueExchange.name»</td>
								<td>"Data"</td>
								<td>YES</td>
							</tr>
						«ENDIF»
					«ENDIF»			
					«IF valueExchange.dataQuestion.repeatValueExchange != null»		
						<tr>
							<td>«valueExchange.dataQuestion.repeatValueExchange.name»</td>
							<td>"Data"</td>
							<td>«valueExchange.dataQuestion.repeatValueExchange.answer.toFirstUpper»</td>
						</tr>
					«ENDIF»	
					«IF valueExchange.dataQuestion.timeDurationValueExchange != null»		
						<tr>
							<td>«valueExchange.dataQuestion.timeDurationValueExchange.name»</td>
							<td>"Data"</td>
							<td>«valueExchange.dataQuestion.timeDurationValueExchange.answer» «valueExchange.dataQuestion.timeDurationValueExchange.answerUnitTime.literal»</td>
						</tr>
					«ENDIF»	
					«IF valueExchange.dataQuestion.timeStartValueExchange != null»		
						<tr>
							<td>«valueExchange.dataQuestion.timeStartValueExchange.name»</td>
							<td>"Data"</td>
							<td>«valueExchange.dataQuestion.timeStartValueExchange.answer» «valueExchange.dataQuestion.timeStartValueExchange.answerUnitTime.literal»</td>
						</tr>
					«ENDIF»	
					«IF valueExchange.dataQuestion.conditionValueExchange != null»		
						<tr>
							<td>«valueExchange.dataQuestion.conditionValueExchange.name»</td>
							<td>"Data"</td>
							<td>«valueExchange.dataQuestion.conditionValueExchange.answer.toFirstUpper»</td>
						</tr>
					«ENDIF»	
			«ENDIF»
		'''	
		}
		
		
		def legalQuestion(ValueExchange valueExchange){
		'''				
			«IF valueExchange.legalQuestion != null»
					«IF valueExchange.legalQuestion.ageQuestion != null»
						<tr>
							<td>«valueExchange.legalQuestion.ageQuestion.name»</td>
							<td>"Legal"</td>
							<td>«valueExchange.legalQuestion.ageQuestion.answer»</td>
						</tr>
					«ENDIF»
					«IF valueExchange.legalQuestion.taxQuestion != null»
						<tr>
							<td>«valueExchange.legalQuestion.taxQuestion.name»</td>
							<td>"Legal"</td>
							<td>«valueExchange.legalQuestion.taxQuestion.answer»</td>
						</tr>
						<tr>
							<td>«valueExchange.legalQuestion.taxQuestion.subSentence»</td>
							<td>"Legal"</td>
							<td>«valueExchange.legalQuestion.taxQuestion.answerSubSentence»</td>
						</tr>
					«ENDIF»
					«IF valueExchange.legalQuestion.additionalLegalDocument != null»
						<tr>
							<td>«valueExchange.legalQuestion.additionalLegalDocument.name»</td>
							<td>"Legal"</td>
							<td>«valueExchange.legalQuestion.additionalLegalDocument.answer»</td>
						</tr>
					«ENDIF»
					«IF valueExchange.legalQuestion.regulatoryCompliance != null»
						<tr>
							<td>«valueExchange.legalQuestion.regulatoryCompliance.name»</td>
							<td>"Legal"</td>
							<td>«valueExchange.legalQuestion.regulatoryCompliance.answer»</td>
						</tr>
					«ENDIF»
			«ENDIF»
		'''	
		}
		
		def economyQuestion(ValueExchange valueExchange){
		'''				
			«IF valueExchange.economyQuestion != null»
					«IF valueExchange.economyQuestion.minimumAmountQuestion != null»
						<tr>
							<td>«valueExchange.economyQuestion.minimumAmountQuestion.name»</td>
							<td>"Economy"</td>
							<td>«valueExchange.economyQuestion.minimumAmountQuestion.answer»</td>
						</tr>
					«ENDIF»
					«IF valueExchange.economyQuestion.shipmentCostResponsibility != null»
						«IF valueExchange.economyQuestion.shipmentCostResponsibility.q1 != null»	
						  	<tr>
								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.q1»</td>
								<td>  "Economy"</td>
								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.answer1»</td>
							 </tr>		
					 	 «ENDIF»
						«IF valueExchange.economyQuestion.shipmentCostResponsibility.q2 != null»	
						  	<tr>
								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.q2»</td>
								<td>  "Economy"</td>
								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.answer2» «valueExchange.economyQuestion.shipmentCostResponsibility.answerUnitCoinFreightRate»</td>
							 </tr>		
					 	 «ENDIF»
					 	 «IF valueExchange.economyQuestion.shipmentCostResponsibility.q3 != null»	
 						  	<tr>
 								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.q3»</td>
 								<td>  "Economy"</td>
 								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.answer3» «valueExchange.economyQuestion.shipmentCostResponsibility.loadingFeeAnswerUnitCoin»</td>
 							 </tr>		
 					 	 «ENDIF»
 					 	  «IF valueExchange.economyQuestion.shipmentCostResponsibility.q4 != null»	
  						  	<tr>
  								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.q4»</td>
  								<td>  "Economy"</td>
  								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.answer4» «valueExchange.economyQuestion.shipmentCostResponsibility.unloadingFeeAnswerUnitCoin»</td>
  							 </tr>		
  					 	 «ENDIF»
  					 	  «IF valueExchange.economyQuestion.shipmentCostResponsibility.q5 != null»	
   						  	<tr>
   								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.q5»</td>
   								<td>  "Economy"</td>
   								<td>  «valueExchange.economyQuestion.shipmentCostResponsibility.answer5» «valueExchange.economyQuestion.shipmentCostResponsibility.transportRateAnswerUnitCoin»</td>
   							 </tr>		
   					 	 «ENDIF»
					«ENDIF»								
			«ENDIF»
		'''	
		}
		@SuppressWarnings("Inconsistent indentation")
		def shipmentQuestion(ValueExchange valueExchange){
		'''
		    «IF valueExchange.shipmentQuestion != null»
		        «IF valueExchange.shipmentQuestion.shipmentDetails != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.shipmentDetails.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.shipmentDetails.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.sanitaryControl != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.sanitaryControl.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.sanitaryControl.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.customs != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.customs.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.customs.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.importTax != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.importTax.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.importTax.answer»</td>
		            </tr>
		            «IF valueExchange.shipmentQuestion.importTax.subSentence != null»										
		            <tr>
							<td>  «valueExchange.shipmentQuestion.importTax.subSentence.name»</td>
							<td>  "Shipment"</td>
							<td>  «valueExchange.shipmentQuestion.importTax.subSentence.answer»«valueExchange.shipmentQuestion.importTax.subSentence.answerUnitCoin»</td>
						 </tr>
					«ENDIF»
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.geographicalQuestion != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.geographicalQuestion.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.geographicalQuestion.answer»</td>
		            </tr>
		               «IF valueExchange.shipmentQuestion.geographicalQuestion.subSentenceRestriction != null»										
		            	<tr>
							<td>  «valueExchange.shipmentQuestion.geographicalQuestion.subSentenceRestriction.name»</td>
							<td>  "Shipment"</td>
							<td>  «valueExchange.shipmentQuestion.geographicalQuestion.subSentenceRestriction.answer»</td>
						 </tr>
    					«ENDIF»
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.addressPickup != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.addressPickup.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.addressPickup.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.addressDelivery != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.addressDelivery.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.addressDelivery.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.shipmentTrackingNumber != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.shipmentTrackingNumber.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.shipmentTrackingNumber.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.dangerousLoad != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.dangerousLoad.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.dangerousLoad.answer»</td>
		            </tr>
		            «IF valueExchange.shipmentQuestion.dangerousLoad.subSentenceSpecialMeasures != null»										
		            	<tr>
							<td>  «valueExchange.shipmentQuestion.dangerousLoad.subSentenceSpecialMeasures.name»</td>
							<td>  "Shipment"</td>
							<td>  «valueExchange.shipmentQuestion.dangerousLoad.subSentenceSpecialMeasures.answer»</td>
						 </tr>
					«ENDIF»
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.perishable != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.perishable.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.perishable.answer»</td>
		            </tr>
		             «IF valueExchange.shipmentQuestion.perishable.subSentencePerishable != null»										
		            	<tr>
							<td>  «valueExchange.shipmentQuestion.perishable.subSentencePerishable.name»</td>
							<td>  "Shipment"</td>
							<td>  «valueExchange.shipmentQuestion.perishable.subSentencePerishable.answer»</td>
						 </tr>
					«ENDIF»
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.cargoType != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.cargoType.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.cargoType.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.cargoWeight != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.cargoWeight.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.cargoWeight.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.cargoDimensions != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.cargoDimensions.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.cargoDimensions.length» cm x«valueExchange.shipmentQuestion.cargoDimensions.width» cm x«valueExchange.shipmentQuestion.cargoDimensions.depth» cm x</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.seaShipment != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.seaShipment.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.seaShipment.answer»</td>
		            </tr>
		            «IF valueExchange.shipmentQuestion.seaShipment.maritime != null»										
							<tr>
							<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.q1»</td>
							<td>  "Shipment"</td>
							<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.answer1»</td>
							</tr>
							<tr>
							<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.q2»</td>
							<td>  "Shipment"</td>
							<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.answer2»</td>
							</tr>
						  «IF valueExchange.shipmentQuestion.seaShipment.maritime.q3 != null»	
								<tr>	
								<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.q3»</td>
								<td>  "Shipment"</td>
								<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.answer3»</td>
								</tr>		
						  «ENDIF»
							<tr>
							<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.q4»</td>
							<td	>  "Shipment"</td>
							<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.answer4»</td>
							</tr>
   						  «IF valueExchange.shipmentQuestion.seaShipment.maritime.subSentence != null»										
	 							<tr>
	 							<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.subSentence.name»</td>
	 							<td>  "Shipment"</td>
	 							<td>  «valueExchange.shipmentQuestion.seaShipment.maritime.subSentence.answerSubSentence»«valueExchange.shipmentQuestion.seaShipment.maritime.subSentence.answerUnitTime»</td>
	 							</tr>
		 				  «ENDIF»
					«ENDIF»
		        «ENDIF»	
		        «IF valueExchange.shipmentQuestion.means != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.means.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.means.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.company != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.company.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.company.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.deliveryDeadline != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.deliveryDeadline.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.deliveryDeadline.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.updatesAndMonitoring != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.updatesAndMonitoring.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.updatesAndMonitoring.answer»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.shipmentQuestion.externalMediator != null»
		            <tr>
		                <td>«valueExchange.shipmentQuestion.externalMediator.name»</td>
		                <td>"Shipment"</td>
		                <td>«valueExchange.shipmentQuestion.externalMediator.answer»</td>
		            </tr>
		            «IF valueExchange.shipmentQuestion.externalMediator.subsentence != null»										
					<tr>
						<td>  «valueExchange.shipmentQuestion.externalMediator.subsentence.name»</td>
						<td>  "Insurance"</td>
						<td>  «valueExchange.shipmentQuestion.externalMediator.subsentence.answer»</td>
					</tr>
					«ENDIF»
		        «ENDIF»
		    «ENDIF»
		'''
		}
		
		def insuranceQuestion(ValueExchange valueExchange) {
		   '''				
			«IF valueExchange.insuranceQuestion != null»
					«IF valueExchange.insuranceQuestion.shipmentInsurance != null»
						<tr>
							<td>«valueExchange.insuranceQuestion.shipmentInsurance.name»</td>
							<td>"Insurance"</td>
							<td>«valueExchange.insuranceQuestion.shipmentInsurance.answer»</td>
						</tr>
					«ENDIF»
					«IF valueExchange.insuranceQuestion.insuranceDetails != null»
						«IF valueExchange.insuranceQuestion.insuranceDetails.q1 != null»
							<tr>
								<td>«valueExchange.insuranceQuestion.insuranceDetails.q1»</td>
								<td>"Insurance"</td>
								<td>«valueExchange.insuranceQuestion.insuranceDetails.answer1»«valueExchange.insuranceQuestion.insuranceDetails.answerUnitCoin1» </td>
							</tr>
						«ENDIF»
						«IF valueExchange.insuranceQuestion.insuranceDetails.q2 != null»
							<tr>
								<td>«valueExchange.insuranceQuestion.insuranceDetails.q2»</td>
								<td>"Insurance"</td>
								<td>«valueExchange.insuranceQuestion.insuranceDetails.answer2» </td>
							</tr>
						«ENDIF»
						«IF valueExchange.insuranceQuestion.insuranceDetails.q3 != null»
							<tr>
								<td>«valueExchange.insuranceQuestion.insuranceDetails.q3»</td>
								<td>"Insurance"</td>
								<td>«valueExchange.insuranceQuestion.insuranceDetails.answer3» </td>
							</tr>
						«ENDIF»
					«ENDIF»
					«IF valueExchange.insuranceQuestion.returnsOrCancellations != null»
						<tr>
							<td>«valueExchange.insuranceQuestion.returnsOrCancellations.name»</td>
							<td>"Insurance"</td>
							<td>«valueExchange.insuranceQuestion.returnsOrCancellations.answer»</td>
						</tr>
						«IF valueExchange.insuranceQuestion.returnsOrCancellations.subsentence != null»										
						<tr>
							<td>  «valueExchange.insuranceQuestion.returnsOrCancellations.subsentence.name»</td>
							<td>  "Insurance"</td>
							<td>  «valueExchange.insuranceQuestion.returnsOrCancellations.subsentence.answer»</td>
						</tr>
						«ENDIF»
					«ENDIF»
					«IF valueExchange.insuranceQuestion.penaltyForNeglect != null»
						<tr>
							<td>«valueExchange.insuranceQuestion.penaltyForNeglect.name»</td>
							<td>"Insurance"</td>
							<td>«valueExchange.insuranceQuestion.penaltyForNeglect.answer»</td>
						</tr>						
					«ENDIF»,
			«ENDIF»
		    '''
		}
		def alimentaryQuestion(ValueExchange valueExchange){
			 '''
		    «IF valueExchange.alimentaryQuestion != null»
		        «IF valueExchange.alimentaryQuestion.agreedPrice != null»
		            <tr>
		                <td>«valueExchange.alimentaryQuestion.agreedPrice.name»</td>
		                <td>"Alimentary"</td>
		                <td>«valueExchange.alimentaryQuestion.agreedPrice.answer»«valueExchange.alimentaryQuestion.agreedPrice.answerUnitCoin»</td>
		            </tr>
		        «ENDIF»
		        «IF valueExchange.alimentaryQuestion.productQuality != null»
		            <tr>
		                <td>«valueExchange.alimentaryQuestion.productQuality.name»</td>
		                <td>"Alimentary"</td>
		                <td>«valueExchange.alimentaryQuestion.productQuality.answer»</td>
		            </tr>
		            «IF valueExchange.alimentaryQuestion.productQuality.expectedQuality != null»										
						<tr>
							<td>  «valueExchange.alimentaryQuestion.productQuality.expectedQuality.q1»</td>
							<td>  "Alimentary"</td>
							<td>  «valueExchange.alimentaryQuestion.productQuality.expectedQuality.answer1»</td>
						</tr>
												
						<tr>
							<td>  «valueExchange.alimentaryQuestion.productQuality.expectedQuality.q2»</td>
							<td>  "Alimentary"</td>
							<td>  «valueExchange.alimentaryQuestion.productQuality.expectedQuality.answer2»</td>
						</tr>
					«ENDIF»
		        «ENDIF»
		        «IF valueExchange.alimentaryQuestion.internationalSeal != null»
		            <tr>
		                <td>«valueExchange.alimentaryQuestion.internationalSeal.name»</td>
		                <td>"Alimentary"</td>
		                <td>«valueExchange.alimentaryQuestion.internationalSeal.answer»</td>
		            </tr>
		            «IF valueExchange.alimentaryQuestion.internationalSeal.subsentence != null»										
						<tr>
							<td>  «valueExchange.alimentaryQuestion.internationalSeal.subsentence.name»</td>
							<td>  "Alimentary"</td>
							<td>  «valueExchange.alimentaryQuestion.internationalSeal.subsentence.answer»</td>
						</tr>
					«ENDIF»
		        «ENDIF»
		        «IF valueExchange.alimentaryQuestion.healthInspection != null»
		            <tr>
		                <td>«valueExchange.alimentaryQuestion.healthInspection.name»</td>
		                <td>"Alimentary"</td>
		                <td>«valueExchange.alimentaryQuestion.healthInspection.answer»</td>
		            </tr>
		             «IF valueExchange.alimentaryQuestion.healthInspection.subsentence != null»										
						<tr>
							<td>  «valueExchange.alimentaryQuestion.healthInspection.subsentence.name»</td>
							<td>  "Alimentary"</td>
							<td>  «valueExchange.alimentaryQuestion.healthInspection.subsentence.answer»</td>
						</tr>
					«ENDIF»
		        «ENDIF»
		        «IF valueExchange.alimentaryQuestion.storageConditions != null»
		            <tr>
		                <td>«valueExchange.alimentaryQuestion.storageConditions.name»</td>
		                <td>"Alimentary"</td>
		                <td>«valueExchange.alimentaryQuestion.storageConditions.answer»</td>
		            </tr>
		        «ENDIF»
		    «ENDIF»
		'''
		}
		
		
		
		def tokenQuestion(ValueObjectQuestion valueObjectQuestionInput){
			var valueObjectTokenQuestion =  valueObjectQuestionInput as ValueObjectTokenQuestion;
			if(valueObjectTokenQuestion.answer.eClass.name.toString.equals("TokenERC20")){
				var tokenQuestionFungible = valueObjectTokenQuestion.answer as TokenERC20
				'''
				<table class="subtable">
					<th class = "subth">Token Name</th>
					<th class = "subth">Token Symbol</th>
					<th class = "subth">Token Decimals</th>
					<th class = "subth">Token Supply</th>
					<th class = "subth">Mintable?</th>
					<th class = "subth">Burnable?</th>
					<tr>
						<td>«tokenQuestionFungible.name»</td>
						<td>«tokenQuestionFungible.symbol»</td>
						<td>«tokenQuestionFungible.decimals»</td>
						<td>«tokenQuestionFungible.supply»</td>
						<td>«tokenQuestionFungible.answerMintSentence.toFirstUpper»</td>
						<td>«tokenQuestionFungible.answerBurnSentence.toFirstUpper»</td>
					</tr>
				</table>			
				'''
			}
			else if(valueObjectTokenQuestion.answer.eClass.name.toString.equals("TokenERC223")){
				var tokenQuestionFungible = valueObjectTokenQuestion.answer as TokenERC223
				'''
				<table class="subtable">
					<th class = "subth">Token Name</th>
					<th class = "subth">Token Symbol</th>
					<th class = "subth">Token Decimals</th>
					<th class = "subth">Token Supply</th>
					<th class = "subth">Mintable?</th>
					<th class = "subth">Burnable?</th>
					<tr>
						<td>«tokenQuestionFungible.name»</td>
						<td>«tokenQuestionFungible.symbol»</td>
						<td>«tokenQuestionFungible.decimals»</td>
						<td>«tokenQuestionFungible.supply»</td>
						<td>«tokenQuestionFungible.answerMintSentence.toFirstUpper»</td>
						<td>«tokenQuestionFungible.answerBurnSentence.toFirstUpper»</td>
					</tr>
				</table>			
				'''
			}
			else{
				var tokenQuestionNoFungible = valueObjectTokenQuestion.answer as TokenERC721
				'''
				<table class="subtable">
					<th class = "subth">Token Name</th>
					<th class = "subth">Token Symbol</th>
					<th class = "subth">Mint more than one token at a time?</th>
					<th class = "subth">Burnable?</th>
					<th class = "subth">Metadata?</th>
					<th class = "subth">Price?</th>
					«IF tokenQuestionNoFungible.supply > 0»
					<th class = "subth">Total supply?</th>
					«ENDIF»
					<tr>
						<td>«tokenQuestionNoFungible.name»</td>
						<td>«tokenQuestionNoFungible.symbol»</td>
						<td>«valueObjectTokenQuestion.answer.answerMintSentence»</td>
						<td>«valueObjectTokenQuestion.answer.supply»</td>
						<td>«tokenQuestionNoFungible.answerBurnSentence.toFirstUpper»</td>
						<td>«tokenQuestionNoFungible.answerMetadataSentence.toFirstUpper»</td>
						<td>«tokenQuestionNoFungible.answerUnitPrice»  «tokenQuestionNoFungible.answerUnitCoin.toString»</td>
						«IF tokenQuestionNoFungible.supply > 0»
						<td>«tokenQuestionNoFungible.supply»</td>
						«ENDIF»
					</tr>
				</table>
				«IF tokenQuestionNoFungible.answer.size > 0»
				<table class="subtable">
					<th class = "subth">Data Name</th>
					<th class = "subth">Data Type</th>
					«FOR data : tokenQuestionNoFungible.answer»
					<tr>
						<td>«data.name»</td>
						<td>«data.type»</td>				
					</tr>
					«ENDFOR»
				</table>
				«ENDIF»
				'''
			}
		}
		
		def structQuestion(ValueObjectQuestion valueObjectQuestionInput){
			var valueObjectPhysicalQuestion =  valueObjectQuestionInput as ValueObjectTangibleQuestion;
			'''
			<table class="subtable">
				<th class = "subth">Data Name</th>
				<th class = "subth">Data Type</th>
				«FOR data : valueObjectPhysicalQuestion.answer»
				<tr>
					<td>«data.name»</td>
					<td>«data.type»</td>				
				</tr>
				«ENDFOR»
			</table>			
			'''
		}
		
		
	
}
