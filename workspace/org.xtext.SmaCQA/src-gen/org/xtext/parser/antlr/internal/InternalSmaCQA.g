/*
 * generated by Xtext 2.18.0.M3
 */
grammar InternalSmaCQA;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.SmaCQAGrammarAccess;

}

@parser::members {

 	private SmaCQAGrammarAccess grammarAccess;

    public InternalSmaCQAParser(TokenStream input, SmaCQAGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SmaCQAGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getValueExchangesValueExchangeParserRuleCall_0());
			}
			lv_valueExchanges_0_0=ruleValueExchange
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"valueExchanges",
					lv_valueExchanges_0_0,
					"org.xtext.SmaCQA.ValueExchange");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleValueExchange
entryRuleValueExchange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueExchangeRule()); }
	iv_ruleValueExchange=ruleValueExchange
	{ $current=$iv_ruleValueExchange.current; }
	EOF;

// Rule ValueExchange
ruleValueExchange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='================= Value Exchange ======================= \r\nThe exchange of value in which'
		{
			newLeafNode(otherlv_0, grammarAccess.getValueExchangeAccess().getValueExchangeTheExchangeOfValueInWhichKeyword_0());
		}
		(
			(
				lv_actorSend_1_0=RULE_ID
				{
					newLeafNode(lv_actorSend_1_0, grammarAccess.getValueExchangeAccess().getActorSendIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueExchangeRule());
					}
					setWithLastConsumed(
						$current,
						"actorSend",
						lv_actorSend_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='sends/grants'
		{
			newLeafNode(otherlv_2, grammarAccess.getValueExchangeAccess().getSendsGrantsKeyword_2());
		}
		(
			(
				lv_actorReceipt_3_0=RULE_ID
				{
					newLeafNode(lv_actorReceipt_3_0, grammarAccess.getValueExchangeAccess().getActorReceiptIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueExchangeRule());
					}
					setWithLastConsumed(
						$current,
						"actorReceipt",
						lv_actorReceipt_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='the following object of value'
		{
			newLeafNode(otherlv_4, grammarAccess.getValueExchangeAccess().getTheFollowingObjectOfValueKeyword_4());
		}
		(
			(
				lv_valueObject_5_0=RULE_ID
				{
					newLeafNode(lv_valueObject_5_0, grammarAccess.getValueExchangeAccess().getValueObjectIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueExchangeRule());
					}
					setWithLastConsumed(
						$current,
						"valueObject",
						lv_valueObject_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='has the following associated questions and answers: '
		{
			newLeafNode(otherlv_6, grammarAccess.getValueExchangeAccess().getHasTheFollowingAssociatedQuestionsAndAnswersKeyword_6());
		}
		(
			this_EOLINE_7=RULE_EOLINE
			{
				newLeafNode(this_EOLINE_7, grammarAccess.getValueExchangeAccess().getEOLINETerminalRuleCall_7());
			}
		)?
		(
			otherlv_8='--------- 1.Data Questions: -----------'
			{
				newLeafNode(otherlv_8, grammarAccess.getValueExchangeAccess().getDataQuestionsKeyword_8_0());
			}
			(
				this_EOLINE_9=RULE_EOLINE
				{
					newLeafNode(this_EOLINE_9, grammarAccess.getValueExchangeAccess().getEOLINETerminalRuleCall_8_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getValueExchangeAccess().getDataQuestionDataQuestionParserRuleCall_8_2_0());
					}
					lv_dataQuestion_10_0=ruleDataQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueExchangeRule());
						}
						set(
							$current,
							"dataQuestion",
							lv_dataQuestion_10_0,
							"org.xtext.SmaCQA.DataQuestion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='--------- 2.Legal Questions: -----------'
			{
				newLeafNode(otherlv_11, grammarAccess.getValueExchangeAccess().getLegalQuestionsKeyword_9_0());
			}
			(
				this_EOLINE_12=RULE_EOLINE
				{
					newLeafNode(this_EOLINE_12, grammarAccess.getValueExchangeAccess().getEOLINETerminalRuleCall_9_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getValueExchangeAccess().getLegalQuestionLegalQuestionParserRuleCall_9_2_0());
					}
					lv_legalQuestion_13_0=ruleLegalQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueExchangeRule());
						}
						set(
							$current,
							"legalQuestion",
							lv_legalQuestion_13_0,
							"org.xtext.SmaCQA.LegalQuestion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='--------- 3.Economy Questions: -----------'
			{
				newLeafNode(otherlv_14, grammarAccess.getValueExchangeAccess().getEconomyQuestionsKeyword_10_0());
			}
			(
				this_EOLINE_15=RULE_EOLINE
				{
					newLeafNode(this_EOLINE_15, grammarAccess.getValueExchangeAccess().getEOLINETerminalRuleCall_10_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getValueExchangeAccess().getEconomyQuestionEconomyQuestionParserRuleCall_10_2_0());
					}
					lv_economyQuestion_16_0=ruleEconomyQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueExchangeRule());
						}
						set(
							$current,
							"economyQuestion",
							lv_economyQuestion_16_0,
							"org.xtext.SmaCQA.EconomyQuestion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_17='--------- 4. Shipment Questions:-----------'
			{
				newLeafNode(otherlv_17, grammarAccess.getValueExchangeAccess().getShipmentQuestionsKeyword_11_0());
			}
			(
				this_EOLINE_18=RULE_EOLINE
				{
					newLeafNode(this_EOLINE_18, grammarAccess.getValueExchangeAccess().getEOLINETerminalRuleCall_11_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getValueExchangeAccess().getShipmentQuestionShipmentQuestionParserRuleCall_11_2_0());
					}
					lv_shipmentQuestion_19_0=ruleShipmentQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueExchangeRule());
						}
						set(
							$current,
							"shipmentQuestion",
							lv_shipmentQuestion_19_0,
							"org.xtext.SmaCQA.ShipmentQuestion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_20='--------- 5. Insurance shipment Questions:-----------'
			{
				newLeafNode(otherlv_20, grammarAccess.getValueExchangeAccess().getInsuranceShipmentQuestionsKeyword_12_0());
			}
			(
				this_EOLINE_21=RULE_EOLINE
				{
					newLeafNode(this_EOLINE_21, grammarAccess.getValueExchangeAccess().getEOLINETerminalRuleCall_12_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getValueExchangeAccess().getInsuranceQuestionInsuranceQuestionParserRuleCall_12_2_0());
					}
					lv_insuranceQuestion_22_0=ruleInsuranceQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueExchangeRule());
						}
						set(
							$current,
							"insuranceQuestion",
							lv_insuranceQuestion_22_0,
							"org.xtext.SmaCQA.InsuranceQuestion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_23='--------- 6. Alimentary Cargo Questions:-----------'
			{
				newLeafNode(otherlv_23, grammarAccess.getValueExchangeAccess().getAlimentaryCargoQuestionsKeyword_13_0());
			}
			(
				this_EOLINE_24=RULE_EOLINE
				{
					newLeafNode(this_EOLINE_24, grammarAccess.getValueExchangeAccess().getEOLINETerminalRuleCall_13_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getValueExchangeAccess().getAlimentaryQuestionAlimentaryQuestionParserRuleCall_13_2_0());
					}
					lv_alimentaryQuestion_25_0=ruleAlimentaryQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueExchangeRule());
						}
						set(
							$current,
							"alimentaryQuestion",
							lv_alimentaryQuestion_25_0,
							"org.xtext.SmaCQA.AlimentaryQuestion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_26='================= Completion of the question process for this value exchange ================='
		{
			newLeafNode(otherlv_26, grammarAccess.getValueExchangeAccess().getCompletionOfTheQuestionProcessForThisValueExchangeKeyword_14());
		}
	)
;

// Entry rule entryRuleDataQuestion
entryRuleDataQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataQuestionRule()); }
	iv_ruleDataQuestion=ruleDataQuestion
	{ $current=$iv_ruleDataQuestion.current; }
	EOF;

// Rule DataQuestion
ruleDataQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataQuestionAccess().getTimeDurationValueExchangeTimeValueExchangeDurationQuestionParserRuleCall_0_0());
				}
				lv_timeDurationValueExchange_0_0=ruleTimeValueExchangeDurationQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataQuestionRule());
					}
					set(
						$current,
						"timeDurationValueExchange",
						lv_timeDurationValueExchange_0_0,
						"org.xtext.SmaCQA.TimeValueExchangeDurationQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDataQuestionAccess().getTimeStartValueExchangeTimeStartValueExchangeQuestionParserRuleCall_1_0());
				}
				lv_timeStartValueExchange_1_0=ruleTimeStartValueExchangeQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataQuestionRule());
					}
					set(
						$current,
						"timeStartValueExchange",
						lv_timeStartValueExchange_1_0,
						"org.xtext.SmaCQA.TimeStartValueExchangeQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDataQuestionAccess().getRepeatValueExchangeRepeatValueExchangeQuestionParserRuleCall_2_0());
				}
				lv_repeatValueExchange_2_0=ruleRepeatValueExchangeQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataQuestionRule());
					}
					set(
						$current,
						"repeatValueExchange",
						lv_repeatValueExchange_2_0,
						"org.xtext.SmaCQA.RepeatValueExchangeQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDataQuestionAccess().getConditionValueExchangeConditionsValueExchangeQuestionParserRuleCall_3_0());
				}
				lv_conditionValueExchange_3_0=ruleConditionsValueExchangeQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataQuestionRule());
					}
					set(
						$current,
						"conditionValueExchange",
						lv_conditionValueExchange_3_0,
						"org.xtext.SmaCQA.ConditionsValueExchangeQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDataQuestionAccess().getValueObjectTypeValueExchangeValueObjectQuestionParserRuleCall_4_0());
				}
				lv_valueObjectTypeValueExchange_4_0=ruleValueObjectQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataQuestionRule());
					}
					set(
						$current,
						"valueObjectTypeValueExchange",
						lv_valueObjectTypeValueExchange_4_0,
						"org.xtext.SmaCQA.ValueObjectQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleShipmentQuestion
entryRuleShipmentQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShipmentQuestionRule()); }
	iv_ruleShipmentQuestion=ruleShipmentQuestion
	{ $current=$iv_ruleShipmentQuestion.current; }
	EOF;

// Rule ShipmentQuestion
ruleShipmentQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getShipmentDetailsShipmentDetailsQuestionParserRuleCall_0_0());
				}
				lv_shipmentDetails_0_0=ruleShipmentDetailsQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"shipmentDetails",
						lv_shipmentDetails_0_0,
						"org.xtext.SmaCQA.ShipmentDetailsQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getSanitaryControlSanitaryControlQuestionParserRuleCall_1_0());
				}
				lv_sanitaryControl_1_0=ruleSanitaryControlQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"sanitaryControl",
						lv_sanitaryControl_1_0,
						"org.xtext.SmaCQA.SanitaryControlQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getCustomsCustomsQuestionParserRuleCall_2_0());
				}
				lv_customs_2_0=ruleCustomsQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"customs",
						lv_customs_2_0,
						"org.xtext.SmaCQA.CustomsQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getImportTaxImportTaxQuestionParserRuleCall_3_0());
				}
				lv_importTax_3_0=ruleImportTaxQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"importTax",
						lv_importTax_3_0,
						"org.xtext.SmaCQA.ImportTaxQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getGeographicalQuestionGeographicalQuestionParserRuleCall_4_0());
				}
				lv_geographicalQuestion_4_0=ruleGeographicalQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"geographicalQuestion",
						lv_geographicalQuestion_4_0,
						"org.xtext.SmaCQA.GeographicalQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getAddressPickupAddressPickupQuestionParserRuleCall_5_0());
				}
				lv_addressPickup_5_0=ruleAddressPickupQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"addressPickup",
						lv_addressPickup_5_0,
						"org.xtext.SmaCQA.AddressPickupQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getAddressDeliveryAddressDeliveryQuestionParserRuleCall_6_0());
				}
				lv_addressDelivery_6_0=ruleAddressDeliveryQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"addressDelivery",
						lv_addressDelivery_6_0,
						"org.xtext.SmaCQA.AddressDeliveryQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getShipmentTrackingNumberShipmentTrackingNumberQuestionParserRuleCall_7_0());
				}
				lv_shipmentTrackingNumber_7_0=ruleShipmentTrackingNumberQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"shipmentTrackingNumber",
						lv_shipmentTrackingNumber_7_0,
						"org.xtext.SmaCQA.ShipmentTrackingNumberQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getDangerousLoadDangerousLoadQuestionParserRuleCall_8_0());
				}
				lv_dangerousLoad_8_0=ruleDangerousLoadQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"dangerousLoad",
						lv_dangerousLoad_8_0,
						"org.xtext.SmaCQA.DangerousLoadQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getPerishablePerishableQuestionParserRuleCall_9_0());
				}
				lv_perishable_9_0=rulePerishableQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"perishable",
						lv_perishable_9_0,
						"org.xtext.SmaCQA.PerishableQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getCargoTypeCargoTypeQuestionParserRuleCall_10_0());
				}
				lv_cargoType_10_0=ruleCargoTypeQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"cargoType",
						lv_cargoType_10_0,
						"org.xtext.SmaCQA.CargoTypeQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getCargoWeightCargoWeightQuestionParserRuleCall_11_0());
				}
				lv_cargoWeight_11_0=ruleCargoWeightQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"cargoWeight",
						lv_cargoWeight_11_0,
						"org.xtext.SmaCQA.CargoWeightQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getCargoDimensionsCargoDimensionsQuestionParserRuleCall_12_0());
				}
				lv_cargoDimensions_12_0=ruleCargoDimensionsQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"cargoDimensions",
						lv_cargoDimensions_12_0,
						"org.xtext.SmaCQA.CargoDimensionsQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getSeaShipmentSeaShipmentQuestionParserRuleCall_13_0());
				}
				lv_seaShipment_13_0=ruleSeaShipmentQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"seaShipment",
						lv_seaShipment_13_0,
						"org.xtext.SmaCQA.SeaShipmentQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getMeansMeansTransportQuestionParserRuleCall_14_0());
				}
				lv_means_14_0=ruleMeansTransportQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"means",
						lv_means_14_0,
						"org.xtext.SmaCQA.MeansTransportQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getCompanyCompanyQuestionParserRuleCall_15_0());
				}
				lv_company_15_0=ruleCompanyQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"company",
						lv_company_15_0,
						"org.xtext.SmaCQA.CompanyQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getDeliveryDeadlineDeliveryDeadlineQuestionParserRuleCall_16_0());
				}
				lv_deliveryDeadline_16_0=ruleDeliveryDeadlineQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"deliveryDeadline",
						lv_deliveryDeadline_16_0,
						"org.xtext.SmaCQA.DeliveryDeadlineQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getUpdatesAndMonitoringUpdatesAndMonitoringQuestionParserRuleCall_17_0());
				}
				lv_updatesAndMonitoring_17_0=ruleUpdatesAndMonitoringQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"updatesAndMonitoring",
						lv_updatesAndMonitoring_17_0,
						"org.xtext.SmaCQA.UpdatesAndMonitoringQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getShipmentQuestionAccess().getExternalMediatorExternalMediatorQuestionParserRuleCall_18_0());
				}
				lv_externalMediator_18_0=ruleExternalMediatorQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShipmentQuestionRule());
					}
					set(
						$current,
						"externalMediator",
						lv_externalMediator_18_0,
						"org.xtext.SmaCQA.ExternalMediatorQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleInsuranceQuestion
entryRuleInsuranceQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsuranceQuestionRule()); }
	iv_ruleInsuranceQuestion=ruleInsuranceQuestion
	{ $current=$iv_ruleInsuranceQuestion.current; }
	EOF;

// Rule InsuranceQuestion
ruleInsuranceQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInsuranceQuestionAccess().getShipmentInsuranceShipmentInsuranceQuestionParserRuleCall_0_0());
				}
				lv_shipmentInsurance_0_0=ruleShipmentInsuranceQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsuranceQuestionRule());
					}
					set(
						$current,
						"shipmentInsurance",
						lv_shipmentInsurance_0_0,
						"org.xtext.SmaCQA.ShipmentInsuranceQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInsuranceQuestionAccess().getInsuranceDetailsInsuranceDetailsQuestionParserRuleCall_1_0());
				}
				lv_insuranceDetails_1_0=ruleInsuranceDetailsQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsuranceQuestionRule());
					}
					set(
						$current,
						"insuranceDetails",
						lv_insuranceDetails_1_0,
						"org.xtext.SmaCQA.InsuranceDetailsQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInsuranceQuestionAccess().getReturnsOrCancellationsReturnsOrCancellationsQuestionParserRuleCall_2_0());
				}
				lv_returnsOrCancellations_2_0=ruleReturnsOrCancellationsQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsuranceQuestionRule());
					}
					set(
						$current,
						"returnsOrCancellations",
						lv_returnsOrCancellations_2_0,
						"org.xtext.SmaCQA.ReturnsOrCancellationsQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInsuranceQuestionAccess().getPenaltyForNeglectPenaltyForNeglectQuestionParserRuleCall_3_0());
				}
				lv_penaltyForNeglect_3_0=rulePenaltyForNeglectQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsuranceQuestionRule());
					}
					set(
						$current,
						"penaltyForNeglect",
						lv_penaltyForNeglect_3_0,
						"org.xtext.SmaCQA.PenaltyForNeglectQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAlimentaryQuestion
entryRuleAlimentaryQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlimentaryQuestionRule()); }
	iv_ruleAlimentaryQuestion=ruleAlimentaryQuestion
	{ $current=$iv_ruleAlimentaryQuestion.current; }
	EOF;

// Rule AlimentaryQuestion
ruleAlimentaryQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAlimentaryQuestionAccess().getAgreedPriceAgreedPriceQuestionParserRuleCall_0_0());
				}
				lv_agreedPrice_0_0=ruleAgreedPriceQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlimentaryQuestionRule());
					}
					set(
						$current,
						"agreedPrice",
						lv_agreedPrice_0_0,
						"org.xtext.SmaCQA.AgreedPriceQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAlimentaryQuestionAccess().getProductQualityProductQualityQuestionParserRuleCall_1_0());
				}
				lv_productQuality_1_0=ruleProductQualityQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlimentaryQuestionRule());
					}
					set(
						$current,
						"productQuality",
						lv_productQuality_1_0,
						"org.xtext.SmaCQA.ProductQualityQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAlimentaryQuestionAccess().getInternationalSealInternationalSealQuestionParserRuleCall_2_0());
				}
				lv_internationalSeal_2_0=ruleInternationalSealQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlimentaryQuestionRule());
					}
					set(
						$current,
						"internationalSeal",
						lv_internationalSeal_2_0,
						"org.xtext.SmaCQA.InternationalSealQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAlimentaryQuestionAccess().getHealthInspectionHealthInspectionQuestionParserRuleCall_3_0());
				}
				lv_healthInspection_3_0=ruleHealthInspectionQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlimentaryQuestionRule());
					}
					set(
						$current,
						"healthInspection",
						lv_healthInspection_3_0,
						"org.xtext.SmaCQA.HealthInspectionQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAlimentaryQuestionAccess().getStorageConditionsStorageConditionsQuestionParserRuleCall_4_0());
				}
				lv_storageConditions_4_0=ruleStorageConditionsQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlimentaryQuestionRule());
					}
					set(
						$current,
						"storageConditions",
						lv_storageConditions_4_0,
						"org.xtext.SmaCQA.StorageConditionsQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleValueObjectQuestion
entryRuleValueObjectQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueObjectQuestionRule()); }
	iv_ruleValueObjectQuestion=ruleValueObjectQuestion
	{ $current=$iv_ruleValueObjectQuestion.current; }
	EOF;

// Rule ValueObjectQuestion
ruleValueObjectQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueObjectQuestionAccess().getValueObjectTokenQuestionParserRuleCall_0());
		}
		this_ValueObjectTokenQuestion_0=ruleValueObjectTokenQuestion
		{
			$current = $this_ValueObjectTokenQuestion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueObjectQuestionAccess().getValueObjectRightQuestionParserRuleCall_1());
		}
		this_ValueObjectRightQuestion_1=ruleValueObjectRightQuestion
		{
			$current = $this_ValueObjectRightQuestion_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueObjectQuestionAccess().getValueObjectTangibleQuestionParserRuleCall_2());
		}
		this_ValueObjectTangibleQuestion_2=ruleValueObjectTangibleQuestion
		{
			$current = $this_ValueObjectTangibleQuestion_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleValueObjectRightQuestion
entryRuleValueObjectRightQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueObjectRightQuestionRule()); }
	iv_ruleValueObjectRightQuestion=ruleValueObjectRightQuestion
	{ $current=$iv_ruleValueObjectRightQuestion.current; }
	EOF;

// Rule ValueObjectRightQuestion
ruleValueObjectRightQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='1.5 Is the object of value a right that can be reflected as active or inactive?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getValueObjectRightQuestionAccess().getName15IsTheObjectOfValueARightThatCanBeReflectedAsActiveOrInactiveKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueObjectRightQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "1.5 Is the object of value a right that can be reflected as active or inactive?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getValueObjectRightQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getValueObjectRightQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueObjectRightQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getValueObjectRightQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueObjectRightQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleValueObjectTokenQuestion
entryRuleValueObjectTokenQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueObjectTokenQuestionRule()); }
	iv_ruleValueObjectTokenQuestion=ruleValueObjectTokenQuestion
	{ $current=$iv_ruleValueObjectTokenQuestion.current; }
	EOF;

// Rule ValueObjectTokenQuestion
ruleValueObjectTokenQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='1.5 If the object of value traded on the value exchange is a digital token. What are the properties of said token?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getValueObjectTokenQuestionAccess().getName15IfTheObjectOfValueTradedOnTheValueExchangeIsADigitalTokenWhatAreThePropertiesOfSaidTokenKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueObjectTokenQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "1.5 If the object of value traded on the value exchange is a digital token. What are the properties of said token?");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getValueObjectTokenQuestionAccess().getAnswerTokenParserRuleCall_1_0());
				}
				lv_answer_1_0=ruleToken
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueObjectTokenQuestionRule());
					}
					set(
						$current,
						"answer",
						lv_answer_1_0,
						"org.xtext.SmaCQA.Token");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValueObjectTangibleQuestion
entryRuleValueObjectTangibleQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueObjectTangibleQuestionRule()); }
	iv_ruleValueObjectTangibleQuestion=ruleValueObjectTangibleQuestion
	{ $current=$iv_ruleValueObjectTangibleQuestion.current; }
	EOF;

// Rule ValueObjectTangibleQuestion
ruleValueObjectTangibleQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='1.5 If the object of value negotiated in the value exchange is a tangible entity that can be represented as a digital entity (not a token). What are the properties of that object?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getValueObjectTangibleQuestionAccess().getName15IfTheObjectOfValueNegotiatedInTheValueExchangeIsATangibleEntityThatCanBeRepresentedAsADigitalEntityNotATokenWhatAreThePropertiesOfThatObjectKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueObjectTangibleQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "1.5 If the object of value negotiated in the value exchange is a tangible entity that can be represented as a digital entity (not a token). What are the properties of that object?");
				}
			)
		)
		otherlv_1='Data Declaration: '
		{
			newLeafNode(otherlv_1, grammarAccess.getValueObjectTangibleQuestionAccess().getDataDeclarationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValueObjectTangibleQuestionAccess().getAnswerDataRegisterParserRuleCall_2_0());
				}
				lv_answer_2_0=ruleDataRegister
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueObjectTangibleQuestionRule());
					}
					add(
						$current,
						"answer",
						lv_answer_2_0,
						"org.xtext.SmaCQA.DataRegister");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='End Data Declaration'
		{
			newLeafNode(otherlv_3, grammarAccess.getValueObjectTangibleQuestionAccess().getEndDataDeclarationKeyword_3());
		}
	)
;

// Entry rule entryRuleDataRegister
entryRuleDataRegister returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataRegisterRule()); }
	iv_ruleDataRegister=ruleDataRegister
	{ $current=$iv_ruleDataRegister.current; }
	EOF;

// Rule DataRegister
ruleDataRegister returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Data name: '
		{
			newLeafNode(otherlv_0, grammarAccess.getDataRegisterAccess().getDataNameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataRegisterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataRegisterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='Value: '
		{
			newLeafNode(otherlv_2, grammarAccess.getDataRegisterAccess().getValueKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataRegisterAccess().getTypeTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataRegisterRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.SmaCQA.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleToken
entryRuleToken returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenRule()); }
	iv_ruleToken=ruleToken
	{ $current=$iv_ruleToken.current; }
	EOF;

// Rule Token
ruleToken returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTokenAccess().getTokenERC20ParserRuleCall_0());
		}
		this_TokenERC20_0=ruleTokenERC20
		{
			$current = $this_TokenERC20_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTokenAccess().getTokenERC223ParserRuleCall_1());
		}
		this_TokenERC223_1=ruleTokenERC223
		{
			$current = $this_TokenERC223_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTokenAccess().getTokenERC721ParserRuleCall_2());
		}
		this_TokenERC721_2=ruleTokenERC721
		{
			$current = $this_TokenERC721_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTokenERC20
entryRuleTokenERC20 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenERC20Rule()); }
	iv_ruleTokenERC20=ruleTokenERC20
	{ $current=$iv_ruleTokenERC20.current; }
	EOF;

// Rule TokenERC20
ruleTokenERC20 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Data Declaration Token ERC20: '
		{
			newLeafNode(otherlv_0, grammarAccess.getTokenERC20Access().getDataDeclarationTokenERC20Keyword_0());
		}
		otherlv_1='Token ERC20 name: '
		{
			newLeafNode(otherlv_1, grammarAccess.getTokenERC20Access().getTokenERC20NameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTokenERC20Access().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC20Rule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='Token ERC20 Symbol: '
		{
			newLeafNode(otherlv_3, grammarAccess.getTokenERC20Access().getTokenERC20SymbolKeyword_3());
		}
		(
			(
				lv_symbol_4_0=RULE_ID
				{
					newLeafNode(lv_symbol_4_0, grammarAccess.getTokenERC20Access().getSymbolIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC20Rule());
					}
					setWithLastConsumed(
						$current,
						"symbol",
						lv_symbol_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='Token ERC20 decimals: '
		{
			newLeafNode(otherlv_5, grammarAccess.getTokenERC20Access().getTokenERC20DecimalsKeyword_5());
		}
		(
			(
				lv_decimals_6_0=RULE_INT
				{
					newLeafNode(lv_decimals_6_0, grammarAccess.getTokenERC20Access().getDecimalsINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC20Rule());
					}
					setWithLastConsumed(
						$current,
						"decimals",
						lv_decimals_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7='Token ERC20 supply: '
		{
			newLeafNode(otherlv_7, grammarAccess.getTokenERC20Access().getTokenERC20SupplyKeyword_7());
		}
		(
			(
				lv_supply_8_0=RULE_INT
				{
					newLeafNode(lv_supply_8_0, grammarAccess.getTokenERC20Access().getSupplyINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC20Rule());
					}
					setWithLastConsumed(
						$current,
						"supply",
						lv_supply_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9='1.5.1 Is it possible to increase the total supply once it is already in circulation (mint more)?'
		{
			newLeafNode(otherlv_9, grammarAccess.getTokenERC20Access().getIsItPossibleToIncreaseTheTotalSupplyOnceItIsAlreadyInCirculationMintMoreKeyword_9());
		}
		otherlv_10='answer = '
		{
			newLeafNode(otherlv_10, grammarAccess.getTokenERC20Access().getAnswerKeyword_10());
		}
		(
			(
				(
					lv_answerMintSentence_11_1='yes'
					{
						newLeafNode(lv_answerMintSentence_11_1, grammarAccess.getTokenERC20Access().getAnswerMintSentenceYesKeyword_11_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC20Rule());
						}
						setWithLastConsumed($current, "answerMintSentence", lv_answerMintSentence_11_1, null);
					}
					    |
					lv_answerMintSentence_11_2='no'
					{
						newLeafNode(lv_answerMintSentence_11_2, grammarAccess.getTokenERC20Access().getAnswerMintSentenceNoKeyword_11_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC20Rule());
						}
						setWithLastConsumed($current, "answerMintSentence", lv_answerMintSentence_11_2, null);
					}
				)
			)
		)
		otherlv_12='1.5.2 Is it possible to remove a certain amount of token from circulation (burn token)?'
		{
			newLeafNode(otherlv_12, grammarAccess.getTokenERC20Access().getIsItPossibleToRemoveACertainAmountOfTokenFromCirculationBurnTokenKeyword_12());
		}
		otherlv_13='answer = '
		{
			newLeafNode(otherlv_13, grammarAccess.getTokenERC20Access().getAnswerKeyword_13());
		}
		(
			(
				(
					lv_answerBurnSentence_14_1='yes'
					{
						newLeafNode(lv_answerBurnSentence_14_1, grammarAccess.getTokenERC20Access().getAnswerBurnSentenceYesKeyword_14_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC20Rule());
						}
						setWithLastConsumed($current, "answerBurnSentence", lv_answerBurnSentence_14_1, null);
					}
					    |
					lv_answerBurnSentence_14_2='no'
					{
						newLeafNode(lv_answerBurnSentence_14_2, grammarAccess.getTokenERC20Access().getAnswerBurnSentenceNoKeyword_14_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC20Rule());
						}
						setWithLastConsumed($current, "answerBurnSentence", lv_answerBurnSentence_14_2, null);
					}
				)
			)
		)
		otherlv_15='End Data Declaration Token ERC20'
		{
			newLeafNode(otherlv_15, grammarAccess.getTokenERC20Access().getEndDataDeclarationTokenERC20Keyword_15());
		}
	)
;

// Entry rule entryRuleTokenERC223
entryRuleTokenERC223 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenERC223Rule()); }
	iv_ruleTokenERC223=ruleTokenERC223
	{ $current=$iv_ruleTokenERC223.current; }
	EOF;

// Rule TokenERC223
ruleTokenERC223 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Data Declaration Token ERC223: '
		{
			newLeafNode(otherlv_0, grammarAccess.getTokenERC223Access().getDataDeclarationTokenERC223Keyword_0());
		}
		otherlv_1='Token ERC223 name: '
		{
			newLeafNode(otherlv_1, grammarAccess.getTokenERC223Access().getTokenERC223NameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTokenERC223Access().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC223Rule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='Token ERC223 Symbol: '
		{
			newLeafNode(otherlv_3, grammarAccess.getTokenERC223Access().getTokenERC223SymbolKeyword_3());
		}
		(
			(
				lv_symbol_4_0=RULE_ID
				{
					newLeafNode(lv_symbol_4_0, grammarAccess.getTokenERC223Access().getSymbolIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC223Rule());
					}
					setWithLastConsumed(
						$current,
						"symbol",
						lv_symbol_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='Token ERC223 decimals: '
		{
			newLeafNode(otherlv_5, grammarAccess.getTokenERC223Access().getTokenERC223DecimalsKeyword_5());
		}
		(
			(
				lv_decimals_6_0=RULE_INT
				{
					newLeafNode(lv_decimals_6_0, grammarAccess.getTokenERC223Access().getDecimalsINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC223Rule());
					}
					setWithLastConsumed(
						$current,
						"decimals",
						lv_decimals_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7='Token ERC223 supply: '
		{
			newLeafNode(otherlv_7, grammarAccess.getTokenERC223Access().getTokenERC223SupplyKeyword_7());
		}
		(
			(
				lv_supply_8_0=RULE_INT
				{
					newLeafNode(lv_supply_8_0, grammarAccess.getTokenERC223Access().getSupplyINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC223Rule());
					}
					setWithLastConsumed(
						$current,
						"supply",
						lv_supply_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9='1.5.1 Is it possible to increase the total supply once it is already in circulation (mint more)?'
		{
			newLeafNode(otherlv_9, grammarAccess.getTokenERC223Access().getIsItPossibleToIncreaseTheTotalSupplyOnceItIsAlreadyInCirculationMintMoreKeyword_9());
		}
		otherlv_10='answer = '
		{
			newLeafNode(otherlv_10, grammarAccess.getTokenERC223Access().getAnswerKeyword_10());
		}
		(
			(
				(
					lv_answerMintSentence_11_1='yes'
					{
						newLeafNode(lv_answerMintSentence_11_1, grammarAccess.getTokenERC223Access().getAnswerMintSentenceYesKeyword_11_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC223Rule());
						}
						setWithLastConsumed($current, "answerMintSentence", lv_answerMintSentence_11_1, null);
					}
					    |
					lv_answerMintSentence_11_2='no'
					{
						newLeafNode(lv_answerMintSentence_11_2, grammarAccess.getTokenERC223Access().getAnswerMintSentenceNoKeyword_11_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC223Rule());
						}
						setWithLastConsumed($current, "answerMintSentence", lv_answerMintSentence_11_2, null);
					}
				)
			)
		)
		otherlv_12='1.5.2 Is it possible to remove a certain amount of token from circulation (burn token)?'
		{
			newLeafNode(otherlv_12, grammarAccess.getTokenERC223Access().getIsItPossibleToRemoveACertainAmountOfTokenFromCirculationBurnTokenKeyword_12());
		}
		otherlv_13='answer = '
		{
			newLeafNode(otherlv_13, grammarAccess.getTokenERC223Access().getAnswerKeyword_13());
		}
		(
			(
				(
					lv_answerBurnSentence_14_1='yes'
					{
						newLeafNode(lv_answerBurnSentence_14_1, grammarAccess.getTokenERC223Access().getAnswerBurnSentenceYesKeyword_14_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC223Rule());
						}
						setWithLastConsumed($current, "answerBurnSentence", lv_answerBurnSentence_14_1, null);
					}
					    |
					lv_answerBurnSentence_14_2='no'
					{
						newLeafNode(lv_answerBurnSentence_14_2, grammarAccess.getTokenERC223Access().getAnswerBurnSentenceNoKeyword_14_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC223Rule());
						}
						setWithLastConsumed($current, "answerBurnSentence", lv_answerBurnSentence_14_2, null);
					}
				)
			)
		)
		otherlv_15='End Data Declaration Token ERC223'
		{
			newLeafNode(otherlv_15, grammarAccess.getTokenERC223Access().getEndDataDeclarationTokenERC223Keyword_15());
		}
	)
;

// Entry rule entryRuleTokenERC721
entryRuleTokenERC721 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenERC721Rule()); }
	iv_ruleTokenERC721=ruleTokenERC721
	{ $current=$iv_ruleTokenERC721.current; }
	EOF;

// Rule TokenERC721
ruleTokenERC721 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Data Declaration Non Fungible Token ERC721: '
		{
			newLeafNode(otherlv_0, grammarAccess.getTokenERC721Access().getDataDeclarationNonFungibleTokenERC721Keyword_0());
		}
		otherlv_1='Token ERC721 name: '
		{
			newLeafNode(otherlv_1, grammarAccess.getTokenERC721Access().getTokenERC721NameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTokenERC721Access().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC721Rule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='Token ERC721 Symbol: '
		{
			newLeafNode(otherlv_3, grammarAccess.getTokenERC721Access().getTokenERC721SymbolKeyword_3());
		}
		(
			(
				lv_symbol_4_0=RULE_ID
				{
					newLeafNode(lv_symbol_4_0, grammarAccess.getTokenERC721Access().getSymbolIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC721Rule());
					}
					setWithLastConsumed(
						$current,
						"symbol",
						lv_symbol_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='1.5.1 If it\'s possible to mint more than one NFT at a time?'
		{
			newLeafNode(otherlv_5, grammarAccess.getTokenERC721Access().getIfItSPossibleToMintMoreThanOneNFTAtATimeKeyword_5());
		}
		otherlv_6='answer = '
		{
			newLeafNode(otherlv_6, grammarAccess.getTokenERC721Access().getAnswerKeyword_6());
		}
		(
			(
				(
					lv_answerMintSentence_7_1='yes'
					{
						newLeafNode(lv_answerMintSentence_7_1, grammarAccess.getTokenERC721Access().getAnswerMintSentenceYesKeyword_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC721Rule());
						}
						setWithLastConsumed($current, "answerMintSentence", lv_answerMintSentence_7_1, null);
					}
					    |
					lv_answerMintSentence_7_2='no'
					{
						newLeafNode(lv_answerMintSentence_7_2, grammarAccess.getTokenERC721Access().getAnswerMintSentenceNoKeyword_7_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC721Rule());
						}
						setWithLastConsumed($current, "answerMintSentence", lv_answerMintSentence_7_2, null);
					}
				)
			)
		)
		otherlv_8='1.5.2 Is it possible to remove/disable the token from circulation (burn token)?'
		{
			newLeafNode(otherlv_8, grammarAccess.getTokenERC721Access().getIsItPossibleToRemoveDisableTheTokenFromCirculationBurnTokenKeyword_8());
		}
		otherlv_9='answer = '
		{
			newLeafNode(otherlv_9, grammarAccess.getTokenERC721Access().getAnswerKeyword_9());
		}
		(
			(
				(
					lv_answerBurnSentence_10_1='yes'
					{
						newLeafNode(lv_answerBurnSentence_10_1, grammarAccess.getTokenERC721Access().getAnswerBurnSentenceYesKeyword_10_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC721Rule());
						}
						setWithLastConsumed($current, "answerBurnSentence", lv_answerBurnSentence_10_1, null);
					}
					    |
					lv_answerBurnSentence_10_2='no'
					{
						newLeafNode(lv_answerBurnSentence_10_2, grammarAccess.getTokenERC721Access().getAnswerBurnSentenceNoKeyword_10_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC721Rule());
						}
						setWithLastConsumed($current, "answerBurnSentence", lv_answerBurnSentence_10_2, null);
					}
				)
			)
		)
		otherlv_11='1.5.3 What is the price of this token?'
		{
			newLeafNode(otherlv_11, grammarAccess.getTokenERC721Access().getWhatIsThePriceOfThisTokenKeyword_11());
		}
		otherlv_12='answer = '
		{
			newLeafNode(otherlv_12, grammarAccess.getTokenERC721Access().getAnswerKeyword_12());
		}
		(
			(
				lv_answerUnitPrice_13_0=RULE_INT
				{
					newLeafNode(lv_answerUnitPrice_13_0, grammarAccess.getTokenERC721Access().getAnswerUnitPriceINTTerminalRuleCall_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTokenERC721Rule());
					}
					setWithLastConsumed(
						$current,
						"answerUnitPrice",
						lv_answerUnitPrice_13_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTokenERC721Access().getAnswerUnitCoinUnitCoinEnumRuleCall_14_0());
				}
				lv_answerUnitCoin_14_0=ruleUnitCoin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTokenERC721Rule());
					}
					set(
						$current,
						"answerUnitCoin",
						lv_answerUnitCoin_14_0,
						"org.xtext.SmaCQA.UnitCoin");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15='1.5.4 Is necessary attach metadata (Information about the token, example: url image) to the token?'
		{
			newLeafNode(otherlv_15, grammarAccess.getTokenERC721Access().getIsNecessaryAttachMetadataInformationAboutTheTokenExampleUrlImageToTheTokenKeyword_15());
		}
		otherlv_16='answer = '
		{
			newLeafNode(otherlv_16, grammarAccess.getTokenERC721Access().getAnswerKeyword_16());
		}
		(
			(
				(
					lv_answerMetadataSentence_17_1='yes'
					{
						newLeafNode(lv_answerMetadataSentence_17_1, grammarAccess.getTokenERC721Access().getAnswerMetadataSentenceYesKeyword_17_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC721Rule());
						}
						setWithLastConsumed($current, "answerMetadataSentence", lv_answerMetadataSentence_17_1, null);
					}
					    |
					lv_answerMetadataSentence_17_2='no'
					{
						newLeafNode(lv_answerMetadataSentence_17_2, grammarAccess.getTokenERC721Access().getAnswerMetadataSentenceNoKeyword_17_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC721Rule());
						}
						setWithLastConsumed($current, "answerMetadataSentence", lv_answerMetadataSentence_17_2, null);
					}
				)
			)
		)
		(
			otherlv_18='1.5.5 Which data or properties are requiered for the NFT information?'
			{
				newLeafNode(otherlv_18, grammarAccess.getTokenERC721Access().getWhichDataOrPropertiesAreRequieredForTheNFTInformationKeyword_18_0());
			}
			otherlv_19='Data Declaration: '
			{
				newLeafNode(otherlv_19, grammarAccess.getTokenERC721Access().getDataDeclarationKeyword_18_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTokenERC721Access().getAnswerDataRegisterParserRuleCall_18_2_0());
					}
					lv_answer_20_0=ruleDataRegister
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTokenERC721Rule());
						}
						add(
							$current,
							"answer",
							lv_answer_20_0,
							"org.xtext.SmaCQA.DataRegister");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_21='End Data Declaration'
			{
				newLeafNode(otherlv_21, grammarAccess.getTokenERC721Access().getEndDataDeclarationKeyword_18_3());
			}
		)?
		(
			otherlv_22='1.5.6 If it\'s possible to define an amount to restrict the amount of NFTs that are minted. What is the maximum amount?'
			{
				newLeafNode(otherlv_22, grammarAccess.getTokenERC721Access().getIfItSPossibleToDefineAnAmountToRestrictTheAmountOfNFTsThatAreMintedWhatIsTheMaximumAmountKeyword_19_0());
			}
			otherlv_23='total supply = '
			{
				newLeafNode(otherlv_23, grammarAccess.getTokenERC721Access().getTotalSupplyKeyword_19_1());
			}
			(
				(
					lv_supply_24_0=RULE_INT
					{
						newLeafNode(lv_supply_24_0, grammarAccess.getTokenERC721Access().getSupplyINTTerminalRuleCall_19_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTokenERC721Rule());
						}
						setWithLastConsumed(
							$current,
							"supply",
							lv_supply_24_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_25='End Data Declaration Token ERC721'
		{
			newLeafNode(otherlv_25, grammarAccess.getTokenERC721Access().getEndDataDeclarationTokenERC721Keyword_20());
		}
	)
;

// Entry rule entryRuleTimeValueExchangeDurationQuestion
entryRuleTimeValueExchangeDurationQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeValueExchangeDurationQuestionRule()); }
	iv_ruleTimeValueExchangeDurationQuestion=ruleTimeValueExchangeDurationQuestion
	{ $current=$iv_ruleTimeValueExchangeDurationQuestion.current; }
	EOF;

// Rule TimeValueExchangeDurationQuestion
ruleTimeValueExchangeDurationQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='1.1 If the exchange of value is subject to a duration of time. What would this be?(indicated in minutes,days,weeks or years)'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTimeValueExchangeDurationQuestionAccess().getName11IfTheExchangeOfValueIsSubjectToADurationOfTimeWhatWouldThisBeIndicatedInMinutesDaysWeeksOrYearsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeValueExchangeDurationQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "1.1 If the exchange of value is subject to a duration of time. What would this be?(indicated in minutes,days,weeks or years)");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeValueExchangeDurationQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_INT
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getTimeValueExchangeDurationQuestionAccess().getAnswerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeValueExchangeDurationQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='unitTime = '
		{
			newLeafNode(otherlv_3, grammarAccess.getTimeValueExchangeDurationQuestionAccess().getUnitTimeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeValueExchangeDurationQuestionAccess().getAnswerUnitTimeUnitTimeEnumRuleCall_4_0());
				}
				lv_answerUnitTime_4_0=ruleUnitTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeValueExchangeDurationQuestionRule());
					}
					set(
						$current,
						"answerUnitTime",
						lv_answerUnitTime_4_0,
						"org.xtext.SmaCQA.UnitTime");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTimeStartValueExchangeQuestion
entryRuleTimeStartValueExchangeQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeStartValueExchangeQuestionRule()); }
	iv_ruleTimeStartValueExchangeQuestion=ruleTimeStartValueExchangeQuestion
	{ $current=$iv_ruleTimeStartValueExchangeQuestion.current; }
	EOF;

// Rule TimeStartValueExchangeQuestion
ruleTimeStartValueExchangeQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='1.2 If the exchange of value could only take place after a certain time. What would this be?(indicated in minutes,days,weeks or years)'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTimeStartValueExchangeQuestionAccess().getName12IfTheExchangeOfValueCouldOnlyTakePlaceAfterACertainTimeWhatWouldThisBeIndicatedInMinutesDaysWeeksOrYearsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeStartValueExchangeQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "1.2 If the exchange of value could only take place after a certain time. What would this be?(indicated in minutes,days,weeks or years)");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeStartValueExchangeQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_INT
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getTimeStartValueExchangeQuestionAccess().getAnswerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeStartValueExchangeQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='unitTime = '
		{
			newLeafNode(otherlv_3, grammarAccess.getTimeStartValueExchangeQuestionAccess().getUnitTimeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeStartValueExchangeQuestionAccess().getAnswerUnitTimeUnitTimeEnumRuleCall_4_0());
				}
				lv_answerUnitTime_4_0=ruleUnitTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeStartValueExchangeQuestionRule());
					}
					set(
						$current,
						"answerUnitTime",
						lv_answerUnitTime_4_0,
						"org.xtext.SmaCQA.UnitTime");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRepeatValueExchangeQuestion
entryRuleRepeatValueExchangeQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepeatValueExchangeQuestionRule()); }
	iv_ruleRepeatValueExchangeQuestion=ruleRepeatValueExchangeQuestion
	{ $current=$iv_ruleRepeatValueExchangeQuestion.current; }
	EOF;

// Rule RepeatValueExchangeQuestion
ruleRepeatValueExchangeQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='1.3 Can the value exchange be repeated over time?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRepeatValueExchangeQuestionAccess().getName13CanTheValueExchangeBeRepeatedOverTimeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRepeatValueExchangeQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "1.3 Can the value exchange be repeated over time?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getRepeatValueExchangeQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getRepeatValueExchangeQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRepeatValueExchangeQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getRepeatValueExchangeQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRepeatValueExchangeQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleConditionsValueExchangeQuestion
entryRuleConditionsValueExchangeQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionsValueExchangeQuestionRule()); }
	iv_ruleConditionsValueExchangeQuestion=ruleConditionsValueExchangeQuestion
	{ $current=$iv_ruleConditionsValueExchangeQuestion.current; }
	EOF;

// Rule ConditionsValueExchangeQuestion
ruleConditionsValueExchangeQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='1.4 Are the same conditions always maintained when exchanging value?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConditionsValueExchangeQuestionAccess().getName14AreTheSameConditionsAlwaysMaintainedWhenExchangingValueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionsValueExchangeQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "1.4 Are the same conditions always maintained when exchanging value?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionsValueExchangeQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getConditionsValueExchangeQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionsValueExchangeQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getConditionsValueExchangeQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionsValueExchangeQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLegalQuestion
entryRuleLegalQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLegalQuestionRule()); }
	iv_ruleLegalQuestion=ruleLegalQuestion
	{ $current=$iv_ruleLegalQuestion.current; }
	EOF;

// Rule LegalQuestion
ruleLegalQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLegalQuestionAccess().getAgeQuestionAgeQuestionParserRuleCall_0_0());
				}
				lv_ageQuestion_0_0=ruleAgeQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLegalQuestionRule());
					}
					set(
						$current,
						"ageQuestion",
						lv_ageQuestion_0_0,
						"org.xtext.SmaCQA.AgeQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLegalQuestionAccess().getTaxQuestionTaxQuestionParserRuleCall_1_0());
				}
				lv_taxQuestion_1_0=ruleTaxQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLegalQuestionRule());
					}
					set(
						$current,
						"taxQuestion",
						lv_taxQuestion_1_0,
						"org.xtext.SmaCQA.TaxQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLegalQuestionAccess().getAdditionalLegalDocumentAdditionalLegalDocumentQuestionParserRuleCall_2_0());
				}
				lv_additionalLegalDocument_2_0=ruleAdditionalLegalDocumentQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLegalQuestionRule());
					}
					set(
						$current,
						"additionalLegalDocument",
						lv_additionalLegalDocument_2_0,
						"org.xtext.SmaCQA.AdditionalLegalDocumentQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLegalQuestionAccess().getRegulatoryComplianceRegulatoryComplianceQuestionParserRuleCall_3_0());
				}
				lv_regulatoryCompliance_3_0=ruleRegulatoryComplianceQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLegalQuestionRule());
					}
					set(
						$current,
						"regulatoryCompliance",
						lv_regulatoryCompliance_3_0,
						"org.xtext.SmaCQA.RegulatoryComplianceQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAgeQuestion
entryRuleAgeQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgeQuestionRule()); }
	iv_ruleAgeQuestion=ruleAgeQuestion
	{ $current=$iv_ruleAgeQuestion.current; }
	EOF;

// Rule AgeQuestion
ruleAgeQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='2.1  What would be the minimum legal age if necessary in this exchange?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAgeQuestionAccess().getName21WhatWouldBeTheMinimumLegalAgeIfNecessaryInThisExchangeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgeQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "2.1  What would be the minimum legal age if necessary in this exchange?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getAgeQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_INT
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getAgeQuestionAccess().getAnswerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgeQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleTaxQuestion
entryRuleTaxQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaxQuestionRule()); }
	iv_ruleTaxQuestion=ruleTaxQuestion
	{ $current=$iv_ruleTaxQuestion.current; }
	EOF;

// Rule TaxQuestion
ruleTaxQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='2.2 What is the name of the tax?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTaxQuestionAccess().getName22WhatIsTheNameOfTheTaxKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaxQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "2.2 What is the name of the tax?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getTaxQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_ID
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getTaxQuestionAccess().getAnswerIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaxQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_subSentence_3_0='2.2.1 Who collects the tax?'
				{
					newLeafNode(lv_subSentence_3_0, grammarAccess.getTaxQuestionAccess().getSubSentence221WhoCollectsTheTaxKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaxQuestionRule());
					}
					setWithLastConsumed($current, "subSentence", lv_subSentence_3_0, "2.2.1 Who collects the tax?");
				}
			)
		)
		otherlv_4='answer = '
		{
			newLeafNode(otherlv_4, grammarAccess.getTaxQuestionAccess().getAnswerKeyword_4());
		}
		(
			(
				lv_answerSubSentence_5_0=RULE_ID
				{
					newLeafNode(lv_answerSubSentence_5_0, grammarAccess.getTaxQuestionAccess().getAnswerSubSentenceIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaxQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answerSubSentence",
						lv_answerSubSentence_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAdditionalLegalDocumentQuestion
entryRuleAdditionalLegalDocumentQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionalLegalDocumentQuestionRule()); }
	iv_ruleAdditionalLegalDocumentQuestion=ruleAdditionalLegalDocumentQuestion
	{ $current=$iv_ruleAdditionalLegalDocumentQuestion.current; }
	EOF;

// Rule AdditionalLegalDocumentQuestion
ruleAdditionalLegalDocumentQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='2.3 Is another legal document complementary to this SmartContract necessary?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAdditionalLegalDocumentQuestionAccess().getName23IsAnotherLegalDocumentComplementaryToThisSmartContractNecessaryKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAdditionalLegalDocumentQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "2.3 Is another legal document complementary to this SmartContract necessary?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getAdditionalLegalDocumentQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getAdditionalLegalDocumentQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAdditionalLegalDocumentQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getAdditionalLegalDocumentQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAdditionalLegalDocumentQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleRegulatoryComplianceQuestion
entryRuleRegulatoryComplianceQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegulatoryComplianceQuestionRule()); }
	iv_ruleRegulatoryComplianceQuestion=ruleRegulatoryComplianceQuestion
	{ $current=$iv_ruleRegulatoryComplianceQuestion.current; }
	EOF;

// Rule RegulatoryComplianceQuestion
ruleRegulatoryComplianceQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='2.4 Who is responsible for ensuring compliance with regulations?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRegulatoryComplianceQuestionAccess().getName24WhoIsResponsibleForEnsuringComplianceWithRegulationsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegulatoryComplianceQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "2.4 Who is responsible for ensuring compliance with regulations?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getRegulatoryComplianceQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_ID
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getRegulatoryComplianceQuestionAccess().getAnswerIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegulatoryComplianceQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEconomyQuestion
entryRuleEconomyQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEconomyQuestionRule()); }
	iv_ruleEconomyQuestion=ruleEconomyQuestion
	{ $current=$iv_ruleEconomyQuestion.current; }
	EOF;

// Rule EconomyQuestion
ruleEconomyQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEconomyQuestionAccess().getMinimumAmountQuestionMinimumAmountQuestionParserRuleCall_0_0());
				}
				lv_minimumAmountQuestion_0_0=ruleMinimumAmountQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEconomyQuestionRule());
					}
					set(
						$current,
						"minimumAmountQuestion",
						lv_minimumAmountQuestion_0_0,
						"org.xtext.SmaCQA.MinimumAmountQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEconomyQuestionAccess().getShipmentCostResponsibilityShipmentCostResponsibilityQuestionParserRuleCall_1_0());
				}
				lv_shipmentCostResponsibility_1_0=ruleShipmentCostResponsibilityQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEconomyQuestionRule());
					}
					set(
						$current,
						"shipmentCostResponsibility",
						lv_shipmentCostResponsibility_1_0,
						"org.xtext.SmaCQA.ShipmentCostResponsibilityQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMinimumAmountQuestion
entryRuleMinimumAmountQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinimumAmountQuestionRule()); }
	iv_ruleMinimumAmountQuestion=ruleMinimumAmountQuestion
	{ $current=$iv_ruleMinimumAmountQuestion.current; }
	EOF;

// Rule MinimumAmountQuestion
ruleMinimumAmountQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='3.1 Which would be the minimum amount if necessary in this exchange?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMinimumAmountQuestionAccess().getName31WhichWouldBeTheMinimumAmountIfNecessaryInThisExchangeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMinimumAmountQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "3.1 Which would be the minimum amount if necessary in this exchange?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getMinimumAmountQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_INT
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getMinimumAmountQuestionAccess().getAnswerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMinimumAmountQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleShipmentCostResponsibilityQuestion
entryRuleShipmentCostResponsibilityQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShipmentCostResponsibilityQuestionRule()); }
	iv_ruleShipmentCostResponsibilityQuestion=ruleShipmentCostResponsibilityQuestion
	{ $current=$iv_ruleShipmentCostResponsibilityQuestion.current; }
	EOF;

// Rule ShipmentCostResponsibilityQuestion
ruleShipmentCostResponsibilityQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_q1_0_0='3.2 Who is responsible for the transportation cost?'
				{
					newLeafNode(lv_q1_0_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getQ132WhoIsResponsibleForTheTransportationCostKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
					}
					setWithLastConsumed($current, "q1", lv_q1_0_0, "3.2 Who is responsible for the transportation cost?");
				}
			)
		)
		otherlv_1='responsible = '
		{
			newLeafNode(otherlv_1, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getResponsibleKeyword_1());
		}
		(
			(
				lv_answer1_2_0=RULE_ID
				{
					newLeafNode(lv_answer1_2_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getAnswer1IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer1",
						lv_answer1_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_q2_3_0='3.3 What is the freight rate?'
					{
						newLeafNode(lv_q2_3_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getQ233WhatIsTheFreightRateKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						setWithLastConsumed($current, "q2", lv_q2_3_0, "3.3 What is the freight rate?");
					}
				)
			)
			otherlv_4='cost = '
			{
				newLeafNode(otherlv_4, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getCostKeyword_3_1());
			}
			(
				(
					lv_answer2_5_0=RULE_INT
					{
						newLeafNode(lv_answer2_5_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getAnswer2INTTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						setWithLastConsumed(
							$current,
							"answer2",
							lv_answer2_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_6='unitCoin='
			{
				newLeafNode(otherlv_6, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getUnitCoinKeyword_3_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getShipmentCostResponsibilityQuestionAccess().getAnswerUnitCoinFreightRateUnitCoinEnumRuleCall_3_4_0());
					}
					lv_answerUnitCoinFreightRate_7_0=ruleUnitCoin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						set(
							$current,
							"answerUnitCoinFreightRate",
							lv_answerUnitCoinFreightRate_7_0,
							"org.xtext.SmaCQA.UnitCoin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					lv_q3_8_0='3.4 What is the loading fee (on the ship)?'
					{
						newLeafNode(lv_q3_8_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getQ334WhatIsTheLoadingFeeOnTheShipKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						setWithLastConsumed($current, "q3", lv_q3_8_0, "3.4 What is the loading fee (on the ship)?");
					}
				)
			)
			otherlv_9='cost = '
			{
				newLeafNode(otherlv_9, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getCostKeyword_4_1());
			}
			(
				(
					lv_answer3_10_0=RULE_INT
					{
						newLeafNode(lv_answer3_10_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getAnswer3INTTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						setWithLastConsumed(
							$current,
							"answer3",
							lv_answer3_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_11='unitCoin='
			{
				newLeafNode(otherlv_11, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getUnitCoinKeyword_4_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getShipmentCostResponsibilityQuestionAccess().getLoadingFeeAnswerUnitCoinUnitCoinEnumRuleCall_4_4_0());
					}
					lv_loadingFeeAnswerUnitCoin_12_0=ruleUnitCoin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						set(
							$current,
							"loadingFeeAnswerUnitCoin",
							lv_loadingFeeAnswerUnitCoin_12_0,
							"org.xtext.SmaCQA.UnitCoin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					lv_q4_13_0='3.5 What is the unloading fee?'
					{
						newLeafNode(lv_q4_13_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getQ435WhatIsTheUnloadingFeeKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						setWithLastConsumed($current, "q4", lv_q4_13_0, "3.5 What is the unloading fee?");
					}
				)
			)
			otherlv_14='cost = '
			{
				newLeafNode(otherlv_14, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getCostKeyword_5_1());
			}
			(
				(
					lv_answer4_15_0=RULE_INT
					{
						newLeafNode(lv_answer4_15_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getAnswer4INTTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						setWithLastConsumed(
							$current,
							"answer4",
							lv_answer4_15_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_16='unitCoin='
			{
				newLeafNode(otherlv_16, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getUnitCoinKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getShipmentCostResponsibilityQuestionAccess().getUnloadingFeeAnswerUnitCoinUnitCoinEnumRuleCall_5_4_0());
					}
					lv_unloadingFeeAnswerUnitCoin_17_0=ruleUnitCoin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						set(
							$current,
							"unloadingFeeAnswerUnitCoin",
							lv_unloadingFeeAnswerUnitCoin_17_0,
							"org.xtext.SmaCQA.UnitCoin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					lv_q5_18_0='3.6 What is the transport rate?'
					{
						newLeafNode(lv_q5_18_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getQ536WhatIsTheTransportRateKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						setWithLastConsumed($current, "q5", lv_q5_18_0, "3.6 What is the transport rate?");
					}
				)
			)
			otherlv_19='cost = '
			{
				newLeafNode(otherlv_19, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getCostKeyword_6_1());
			}
			(
				(
					lv_answer5_20_0=RULE_INT
					{
						newLeafNode(lv_answer5_20_0, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getAnswer5INTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						setWithLastConsumed(
							$current,
							"answer5",
							lv_answer5_20_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_21='unitCoin='
			{
				newLeafNode(otherlv_21, grammarAccess.getShipmentCostResponsibilityQuestionAccess().getUnitCoinKeyword_6_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getShipmentCostResponsibilityQuestionAccess().getTransportRateAnswerUnitCoinUnitCoinEnumRuleCall_6_4_0());
					}
					lv_transportRateAnswerUnitCoin_22_0=ruleUnitCoin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShipmentCostResponsibilityQuestionRule());
						}
						set(
							$current,
							"transportRateAnswerUnitCoin",
							lv_transportRateAnswerUnitCoin_22_0,
							"org.xtext.SmaCQA.UnitCoin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleShipmentDetailsQuestion
entryRuleShipmentDetailsQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShipmentDetailsQuestionRule()); }
	iv_ruleShipmentDetailsQuestion=ruleShipmentDetailsQuestion
	{ $current=$iv_ruleShipmentDetailsQuestion.current; }
	EOF;

// Rule ShipmentDetailsQuestion
ruleShipmentDetailsQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.1 Is it an international shipment?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getShipmentDetailsQuestionAccess().getName41IsItAnInternationalShipmentKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShipmentDetailsQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.1 Is it an international shipment?");
				}
			)
		)
		otherlv_1='internationalAnswer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getShipmentDetailsQuestionAccess().getInternationalAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getShipmentDetailsQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentDetailsQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getShipmentDetailsQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentDetailsQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSanitaryControlQuestion
entryRuleSanitaryControlQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSanitaryControlQuestionRule()); }
	iv_ruleSanitaryControlQuestion=ruleSanitaryControlQuestion
	{ $current=$iv_ruleSanitaryControlQuestion.current; }
	EOF;

// Rule SanitaryControlQuestion
ruleSanitaryControlQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.2 Is the product subject to any sanitary control upon arrival at the destination country?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSanitaryControlQuestionAccess().getName42IsTheProductSubjectToAnySanitaryControlUponArrivalAtTheDestinationCountryKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSanitaryControlQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.2 Is the product subject to any sanitary control upon arrival at the destination country?");
				}
			)
		)
		otherlv_1='sanitaryAnswer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getSanitaryControlQuestionAccess().getSanitaryAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getSanitaryControlQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSanitaryControlQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getSanitaryControlQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSanitaryControlQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCustomsQuestion
entryRuleCustomsQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCustomsQuestionRule()); }
	iv_ruleCustomsQuestion=ruleCustomsQuestion
	{ $current=$iv_ruleCustomsQuestion.current; }
	EOF;

// Rule CustomsQuestion
ruleCustomsQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.3 Does the shipment have to go through customs?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCustomsQuestionAccess().getName43DoesTheShipmentHaveToGoThroughCustomsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCustomsQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.3 Does the shipment have to go through customs?");
				}
			)
		)
		otherlv_1='customsAnswer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getCustomsQuestionAccess().getCustomsAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getCustomsQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCustomsQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getCustomsQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCustomsQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleImportTaxQuestion
entryRuleImportTaxQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportTaxQuestionRule()); }
	iv_ruleImportTaxQuestion=ruleImportTaxQuestion
	{ $current=$iv_ruleImportTaxQuestion.current; }
	EOF;

// Rule ImportTaxQuestion
ruleImportTaxQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.4 Does it have to pay any import tax to the destination country?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getImportTaxQuestionAccess().getName44DoesItHaveToPayAnyImportTaxToTheDestinationCountryKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportTaxQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.4 Does it have to pay any import tax to the destination country?");
				}
			)
		)
		otherlv_1='taxAnswer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getImportTaxQuestionAccess().getTaxAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getImportTaxQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportTaxQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getImportTaxQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportTaxQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImportTaxQuestionAccess().getSubSentenceTaxShipmentDetailsQuestionParserRuleCall_3_0());
				}
				lv_subSentence_3_0=ruleTaxShipmentDetailsQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportTaxQuestionRule());
					}
					set(
						$current,
						"subSentence",
						lv_subSentence_3_0,
						"org.xtext.SmaCQA.TaxShipmentDetailsQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTaxShipmentDetailsQuestion
entryRuleTaxShipmentDetailsQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaxShipmentDetailsQuestionRule()); }
	iv_ruleTaxShipmentDetailsQuestion=ruleTaxShipmentDetailsQuestion
	{ $current=$iv_ruleTaxShipmentDetailsQuestion.current; }
	EOF;

// Rule TaxShipmentDetailsQuestion
ruleTaxShipmentDetailsQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.4.1 How much does it have to pay in taxes?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTaxShipmentDetailsQuestionAccess().getName441HowMuchDoesItHaveToPayInTaxesKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaxShipmentDetailsQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.4.1 How much does it have to pay in taxes?");
				}
			)
		)
		otherlv_1='cost = '
		{
			newLeafNode(otherlv_1, grammarAccess.getTaxShipmentDetailsQuestionAccess().getCostKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_INT
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getTaxShipmentDetailsQuestionAccess().getAnswerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaxShipmentDetailsQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTaxShipmentDetailsQuestionAccess().getAnswerUnitCoinUnitCoinEnumRuleCall_3_0());
				}
				lv_answerUnitCoin_3_0=ruleUnitCoin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTaxShipmentDetailsQuestionRule());
					}
					set(
						$current,
						"answerUnitCoin",
						lv_answerUnitCoin_3_0,
						"org.xtext.SmaCQA.UnitCoin");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGeographicalQuestion
entryRuleGeographicalQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeographicalQuestionRule()); }
	iv_ruleGeographicalQuestion=ruleGeographicalQuestion
	{ $current=$iv_ruleGeographicalQuestion.current; }
	EOF;

// Rule GeographicalQuestion
ruleGeographicalQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.5 Are there geographical restrictions for the exchange?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getGeographicalQuestionAccess().getName45AreThereGeographicalRestrictionsForTheExchangeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeographicalQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.5 Are there geographical restrictions for the exchange?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getGeographicalQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getGeographicalQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGeographicalQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getGeographicalQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGeographicalQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGeographicalQuestionAccess().getSubSentenceRestrictionGeographicalRestrictionQuestionParserRuleCall_3_0());
				}
				lv_subSentenceRestriction_3_0=ruleGeographicalRestrictionQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeographicalQuestionRule());
					}
					set(
						$current,
						"subSentenceRestriction",
						lv_subSentenceRestriction_3_0,
						"org.xtext.SmaCQA.GeographicalRestrictionQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleGeographicalRestrictionQuestion
entryRuleGeographicalRestrictionQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeographicalRestrictionQuestionRule()); }
	iv_ruleGeographicalRestrictionQuestion=ruleGeographicalRestrictionQuestion
	{ $current=$iv_ruleGeographicalRestrictionQuestion.current; }
	EOF;

// Rule GeographicalRestrictionQuestion
ruleGeographicalRestrictionQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.5.1 What are the geographical restrictions?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getGeographicalRestrictionQuestionAccess().getName451WhatAreTheGeographicalRestrictionsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeographicalRestrictionQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.5.1 What are the geographical restrictions?");
				}
			)
		)
		otherlv_1='restrictions = '
		{
			newLeafNode(otherlv_1, grammarAccess.getGeographicalRestrictionQuestionAccess().getRestrictionsKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getGeographicalRestrictionQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeographicalRestrictionQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAddressPickupQuestion
entryRuleAddressPickupQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddressPickupQuestionRule()); }
	iv_ruleAddressPickupQuestion=ruleAddressPickupQuestion
	{ $current=$iv_ruleAddressPickupQuestion.current; }
	EOF;

// Rule AddressPickupQuestion
ruleAddressPickupQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.6 What is the pickup address for the cargo?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAddressPickupQuestionAccess().getName46WhatIsThePickupAddressForTheCargoKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressPickupQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.6 What is the pickup address for the cargo?");
				}
			)
		)
		otherlv_1='address = '
		{
			newLeafNode(otherlv_1, grammarAccess.getAddressPickupQuestionAccess().getAddressKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getAddressPickupQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressPickupQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAddressDeliveryQuestion
entryRuleAddressDeliveryQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddressDeliveryQuestionRule()); }
	iv_ruleAddressDeliveryQuestion=ruleAddressDeliveryQuestion
	{ $current=$iv_ruleAddressDeliveryQuestion.current; }
	EOF;

// Rule AddressDeliveryQuestion
ruleAddressDeliveryQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.7 What is the delivery address?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAddressDeliveryQuestionAccess().getName47WhatIsTheDeliveryAddressKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressDeliveryQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.7 What is the delivery address?");
				}
			)
		)
		otherlv_1='address = '
		{
			newLeafNode(otherlv_1, grammarAccess.getAddressDeliveryQuestionAccess().getAddressKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getAddressDeliveryQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressDeliveryQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleShipmentTrackingNumberQuestion
entryRuleShipmentTrackingNumberQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShipmentTrackingNumberQuestionRule()); }
	iv_ruleShipmentTrackingNumberQuestion=ruleShipmentTrackingNumberQuestion
	{ $current=$iv_ruleShipmentTrackingNumberQuestion.current; }
	EOF;

// Rule ShipmentTrackingNumberQuestion
ruleShipmentTrackingNumberQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.8 What is the shipment tracking number?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getShipmentTrackingNumberQuestionAccess().getName48WhatIsTheShipmentTrackingNumberKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShipmentTrackingNumberQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.8 What is the shipment tracking number?");
				}
			)
		)
		otherlv_1='tracking number = '
		{
			newLeafNode(otherlv_1, grammarAccess.getShipmentTrackingNumberQuestionAccess().getTrackingNumberKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_INT
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getShipmentTrackingNumberQuestionAccess().getAnswerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShipmentTrackingNumberQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleDangerousLoadQuestion
entryRuleDangerousLoadQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDangerousLoadQuestionRule()); }
	iv_ruleDangerousLoadQuestion=ruleDangerousLoadQuestion
	{ $current=$iv_ruleDangerousLoadQuestion.current; }
	EOF;

// Rule DangerousLoadQuestion
ruleDangerousLoadQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.9 Does the physical good represent a dangerous load or have special transportation needs?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDangerousLoadQuestionAccess().getName49DoesThePhysicalGoodRepresentADangerousLoadOrHaveSpecialTransportationNeedsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDangerousLoadQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.9 Does the physical good represent a dangerous load or have special transportation needs?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getDangerousLoadQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getDangerousLoadQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDangerousLoadQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getDangerousLoadQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDangerousLoadQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDangerousLoadQuestionAccess().getSubSentenceSpecialMeasuresSpecialMeasuresQuestionParserRuleCall_3_0());
				}
				lv_subSentenceSpecialMeasures_3_0=ruleSpecialMeasuresQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDangerousLoadQuestionRule());
					}
					set(
						$current,
						"subSentenceSpecialMeasures",
						lv_subSentenceSpecialMeasures_3_0,
						"org.xtext.SmaCQA.SpecialMeasuresQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSpecialMeasuresQuestion
entryRuleSpecialMeasuresQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecialMeasuresQuestionRule()); }
	iv_ruleSpecialMeasuresQuestion=ruleSpecialMeasuresQuestion
	{ $current=$iv_ruleSpecialMeasuresQuestion.current; }
	EOF;

// Rule SpecialMeasuresQuestion
ruleSpecialMeasuresQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.9.1 What special measures are needed for its proper transport?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSpecialMeasuresQuestionAccess().getName491WhatSpecialMeasuresAreNeededForItsProperTransportKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecialMeasuresQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.9.1 What special measures are needed for its proper transport?");
				}
			)
		)
		otherlv_1='especial measures needed = '
		{
			newLeafNode(otherlv_1, grammarAccess.getSpecialMeasuresQuestionAccess().getEspecialMeasuresNeededKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getSpecialMeasuresQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecialMeasuresQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRulePerishableQuestion
entryRulePerishableQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPerishableQuestionRule()); }
	iv_rulePerishableQuestion=rulePerishableQuestion
	{ $current=$iv_rulePerishableQuestion.current; }
	EOF;

// Rule PerishableQuestion
rulePerishableQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.10 Is it a perishable product?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPerishableQuestionAccess().getName410IsItAPerishableProductKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPerishableQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.10 Is it a perishable product?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getPerishableQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getPerishableQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPerishableQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getPerishableQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPerishableQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPerishableQuestionAccess().getSubSentencePerishableExpirationDateQuestionParserRuleCall_3_0());
				}
				lv_subSentencePerishable_3_0=ruleExpirationDateQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPerishableQuestionRule());
					}
					set(
						$current,
						"subSentencePerishable",
						lv_subSentencePerishable_3_0,
						"org.xtext.SmaCQA.ExpirationDateQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExpirationDateQuestion
entryRuleExpirationDateQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpirationDateQuestionRule()); }
	iv_ruleExpirationDateQuestion=ruleExpirationDateQuestion
	{ $current=$iv_ruleExpirationDateQuestion.current; }
	EOF;

// Rule ExpirationDateQuestion
ruleExpirationDateQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.10.1 What is its expiration date?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getExpirationDateQuestionAccess().getName4101WhatIsItsExpirationDateKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpirationDateQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.10.1 What is its expiration date?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getExpirationDateQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getExpirationDateQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpirationDateQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCargoTypeQuestion
entryRuleCargoTypeQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCargoTypeQuestionRule()); }
	iv_ruleCargoTypeQuestion=ruleCargoTypeQuestion
	{ $current=$iv_ruleCargoTypeQuestion.current; }
	EOF;

// Rule CargoTypeQuestion
ruleCargoTypeQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.11 What is the type of cargo?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCargoTypeQuestionAccess().getName411WhatIsTheTypeOfCargoKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCargoTypeQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.11 What is the type of cargo?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getCargoTypeQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getCargoTypeQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCargoTypeQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCargoWeightQuestion
entryRuleCargoWeightQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCargoWeightQuestionRule()); }
	iv_ruleCargoWeightQuestion=ruleCargoWeightQuestion
	{ $current=$iv_ruleCargoWeightQuestion.current; }
	EOF;

// Rule CargoWeightQuestion
ruleCargoWeightQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.12 How much does the cargo weight (kg)?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCargoWeightQuestionAccess().getName412HowMuchDoesTheCargoWeightKgKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCargoWeightQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.12 How much does the cargo weight (kg)?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getCargoWeightQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_INT
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getCargoWeightQuestionAccess().getAnswerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCargoWeightQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleCargoDimensionsQuestion
entryRuleCargoDimensionsQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCargoDimensionsQuestionRule()); }
	iv_ruleCargoDimensionsQuestion=ruleCargoDimensionsQuestion
	{ $current=$iv_ruleCargoDimensionsQuestion.current; }
	EOF;

// Rule CargoDimensionsQuestion
ruleCargoDimensionsQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.13 What are the dimensions of the cargo (length x width x depth in cm)?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCargoDimensionsQuestionAccess().getName413WhatAreTheDimensionsOfTheCargoLengthXWidthXDepthInCmKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCargoDimensionsQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.13 What are the dimensions of the cargo (length x width x depth in cm)?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getCargoDimensionsQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_length_2_0=RULE_INT
				{
					newLeafNode(lv_length_2_0, grammarAccess.getCargoDimensionsQuestionAccess().getLengthINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCargoDimensionsQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"length",
						lv_length_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='cm x '
		{
			newLeafNode(otherlv_3, grammarAccess.getCargoDimensionsQuestionAccess().getCmXKeyword_3());
		}
		(
			(
				lv_width_4_0=RULE_INT
				{
					newLeafNode(lv_width_4_0, grammarAccess.getCargoDimensionsQuestionAccess().getWidthINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCargoDimensionsQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"width",
						lv_width_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='cm x '
		{
			newLeafNode(otherlv_5, grammarAccess.getCargoDimensionsQuestionAccess().getCmXKeyword_5());
		}
		(
			(
				lv_depth_6_0=RULE_INT
				{
					newLeafNode(lv_depth_6_0, grammarAccess.getCargoDimensionsQuestionAccess().getDepthINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCargoDimensionsQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"depth",
						lv_depth_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7='cm'
		{
			newLeafNode(otherlv_7, grammarAccess.getCargoDimensionsQuestionAccess().getCmKeyword_7());
		}
	)
;

// Entry rule entryRuleSeaShipmentQuestion
entryRuleSeaShipmentQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSeaShipmentQuestionRule()); }
	iv_ruleSeaShipmentQuestion=ruleSeaShipmentQuestion
	{ $current=$iv_ruleSeaShipmentQuestion.current; }
	EOF;

// Rule SeaShipmentQuestion
ruleSeaShipmentQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.14 Is the shipment made by sea route?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSeaShipmentQuestionAccess().getName414IsTheShipmentMadeBySeaRouteKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSeaShipmentQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.14 Is the shipment made by sea route?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getSeaShipmentQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getSeaShipmentQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSeaShipmentQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getSeaShipmentQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSeaShipmentQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSeaShipmentQuestionAccess().getMaritimeMaritimeQuestionParserRuleCall_3_0());
				}
				lv_maritime_3_0=ruleMaritimeQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSeaShipmentQuestionRule());
					}
					set(
						$current,
						"maritime",
						lv_maritime_3_0,
						"org.xtext.SmaCQA.MaritimeQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMaritimeQuestion
entryRuleMaritimeQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaritimeQuestionRule()); }
	iv_ruleMaritimeQuestion=ruleMaritimeQuestion
	{ $current=$iv_ruleMaritimeQuestion.current; }
	EOF;

// Rule MaritimeQuestion
ruleMaritimeQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_q1_0_0='4.14.1 What is the name of the origin port?'
				{
					newLeafNode(lv_q1_0_0, grammarAccess.getMaritimeQuestionAccess().getQ14141WhatIsTheNameOfTheOriginPortKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaritimeQuestionRule());
					}
					setWithLastConsumed($current, "q1", lv_q1_0_0, "4.14.1 What is the name of the origin port?");
				}
			)
		)
		otherlv_1='Origin Port = '
		{
			newLeafNode(otherlv_1, grammarAccess.getMaritimeQuestionAccess().getOriginPortKeyword_1());
		}
		(
			(
				lv_answer1_2_0=RULE_STRING
				{
					newLeafNode(lv_answer1_2_0, grammarAccess.getMaritimeQuestionAccess().getAnswer1STRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaritimeQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer1",
						lv_answer1_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_q2_3_0='4.14.2 What is the name of the destination port?'
				{
					newLeafNode(lv_q2_3_0, grammarAccess.getMaritimeQuestionAccess().getQ24142WhatIsTheNameOfTheDestinationPortKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaritimeQuestionRule());
					}
					setWithLastConsumed($current, "q2", lv_q2_3_0, "4.14.2 What is the name of the destination port?");
				}
			)
		)
		otherlv_4='Destination Port = '
		{
			newLeafNode(otherlv_4, grammarAccess.getMaritimeQuestionAccess().getDestinationPortKeyword_4());
		}
		(
			(
				lv_answer2_5_0=RULE_STRING
				{
					newLeafNode(lv_answer2_5_0, grammarAccess.getMaritimeQuestionAccess().getAnswer2STRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaritimeQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer2",
						lv_answer2_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				(
					lv_q3_6_0='4.14.3 In case of need, does it leave the port agent the power to make key decisions?'
					{
						newLeafNode(lv_q3_6_0, grammarAccess.getMaritimeQuestionAccess().getQ34143InCaseOfNeedDoesItLeaveThePortAgentThePowerToMakeKeyDecisionsKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMaritimeQuestionRule());
						}
						setWithLastConsumed($current, "q3", lv_q3_6_0, "4.14.3 In case of need, does it leave the port agent the power to make key decisions?");
					}
				)
			)
			otherlv_7='answer = '
			{
				newLeafNode(otherlv_7, grammarAccess.getMaritimeQuestionAccess().getAnswerKeyword_6_1());
			}
			(
				(
					(
						lv_answer3_8_1='yes'
						{
							newLeafNode(lv_answer3_8_1, grammarAccess.getMaritimeQuestionAccess().getAnswer3YesKeyword_6_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMaritimeQuestionRule());
							}
							setWithLastConsumed($current, "answer3", lv_answer3_8_1, null);
						}
						    |
						lv_answer3_8_2='no'
						{
							newLeafNode(lv_answer3_8_2, grammarAccess.getMaritimeQuestionAccess().getAnswer3NoKeyword_6_2_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMaritimeQuestionRule());
							}
							setWithLastConsumed($current, "answer3", lv_answer3_8_2, null);
						}
					)
				)
			)
		)?
		(
			(
				lv_q4_9_0='4.14.4 Is it a voyage charter or time charter party?'
				{
					newLeafNode(lv_q4_9_0, grammarAccess.getMaritimeQuestionAccess().getQ44144IsItAVoyageCharterOrTimeCharterPartyKeyword_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaritimeQuestionRule());
					}
					setWithLastConsumed($current, "q4", lv_q4_9_0, "4.14.4 Is it a voyage charter or time charter party?");
				}
			)
		)
		otherlv_10='type of voyage = '
		{
			newLeafNode(otherlv_10, grammarAccess.getMaritimeQuestionAccess().getTypeOfVoyageKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaritimeQuestionAccess().getAnswer4VoyagetypeEnumRuleCall_9_0());
				}
				lv_answer4_11_0=ruleVoyagetype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaritimeQuestionRule());
					}
					set(
						$current,
						"answer4",
						lv_answer4_11_0,
						"org.xtext.SmaCQA.Voyagetype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMaritimeQuestionAccess().getSubSentenceVoyageQuestionParserRuleCall_10_0());
				}
				lv_subSentence_12_0=ruleVoyageQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaritimeQuestionRule());
					}
					set(
						$current,
						"subSentence",
						lv_subSentence_12_0,
						"org.xtext.SmaCQA.VoyageQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleVoyageQuestion
entryRuleVoyageQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVoyageQuestionRule()); }
	iv_ruleVoyageQuestion=ruleVoyageQuestion
	{ $current=$iv_ruleVoyageQuestion.current; }
	EOF;

// Rule VoyageQuestion
ruleVoyageQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.14.4.1 For how long is the ship rented (indicated in minutes,days,weeks or years)'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getVoyageQuestionAccess().getName41441ForHowLongIsTheShipRentedIndicatedInMinutesDaysWeeksOrYearsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVoyageQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.14.4.1 For how long is the ship rented (indicated in minutes,days,weeks or years)");
				}
			)
		)
		otherlv_1='quantity = '
		{
			newLeafNode(otherlv_1, grammarAccess.getVoyageQuestionAccess().getQuantityKeyword_1());
		}
		(
			(
				lv_answerSubSentence_2_0=RULE_INT
				{
					newLeafNode(lv_answerSubSentence_2_0, grammarAccess.getVoyageQuestionAccess().getAnswerSubSentenceINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVoyageQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answerSubSentence",
						lv_answerSubSentence_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='unitTime = '
		{
			newLeafNode(otherlv_3, grammarAccess.getVoyageQuestionAccess().getUnitTimeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVoyageQuestionAccess().getAnswerUnitTimeUnitTimeEnumRuleCall_4_0());
				}
				lv_answerUnitTime_4_0=ruleUnitTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVoyageQuestionRule());
					}
					set(
						$current,
						"answerUnitTime",
						lv_answerUnitTime_4_0,
						"org.xtext.SmaCQA.UnitTime");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMeansTransportQuestion
entryRuleMeansTransportQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMeansTransportQuestionRule()); }
	iv_ruleMeansTransportQuestion=ruleMeansTransportQuestion
	{ $current=$iv_ruleMeansTransportQuestion.current; }
	EOF;

// Rule MeansTransportQuestion
ruleMeansTransportQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.15 What is the means of transport?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMeansTransportQuestionAccess().getName415WhatIsTheMeansOfTransportKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMeansTransportQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.15 What is the means of transport?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getMeansTransportQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getMeansTransportQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMeansTransportQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCompanyQuestion
entryRuleCompanyQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompanyQuestionRule()); }
	iv_ruleCompanyQuestion=ruleCompanyQuestion
	{ $current=$iv_ruleCompanyQuestion.current; }
	EOF;

// Rule CompanyQuestion
ruleCompanyQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.16 What is the name of the transport company?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCompanyQuestionAccess().getName416WhatIsTheNameOfTheTransportCompanyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompanyQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.16 What is the name of the transport company?");
				}
			)
		)
		otherlv_1='name = '
		{
			newLeafNode(otherlv_1, grammarAccess.getCompanyQuestionAccess().getNameKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getCompanyQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompanyQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDeliveryDeadlineQuestion
entryRuleDeliveryDeadlineQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeliveryDeadlineQuestionRule()); }
	iv_ruleDeliveryDeadlineQuestion=ruleDeliveryDeadlineQuestion
	{ $current=$iv_ruleDeliveryDeadlineQuestion.current; }
	EOF;

// Rule DeliveryDeadlineQuestion
ruleDeliveryDeadlineQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.17 What is the deadline for delivery?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDeliveryDeadlineQuestionAccess().getName417WhatIsTheDeadlineForDeliveryKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeliveryDeadlineQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.17 What is the deadline for delivery?");
				}
			)
		)
		otherlv_1='deadline = '
		{
			newLeafNode(otherlv_1, grammarAccess.getDeliveryDeadlineQuestionAccess().getDeadlineKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getDeliveryDeadlineQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeliveryDeadlineQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleUpdatesAndMonitoringQuestion
entryRuleUpdatesAndMonitoringQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdatesAndMonitoringQuestionRule()); }
	iv_ruleUpdatesAndMonitoringQuestion=ruleUpdatesAndMonitoringQuestion
	{ $current=$iv_ruleUpdatesAndMonitoringQuestion.current; }
	EOF;

// Rule UpdatesAndMonitoringQuestion
ruleUpdatesAndMonitoringQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.18 Through what means will updates and monitoring data be received?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getUpdatesAndMonitoringQuestionAccess().getName418ThroughWhatMeansWillUpdatesAndMonitoringDataBeReceivedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdatesAndMonitoringQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.18 Through what means will updates and monitoring data be received?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getUpdatesAndMonitoringQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getUpdatesAndMonitoringQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdatesAndMonitoringQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleExternalMediatorQuestion
entryRuleExternalMediatorQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalMediatorQuestionRule()); }
	iv_ruleExternalMediatorQuestion=ruleExternalMediatorQuestion
	{ $current=$iv_ruleExternalMediatorQuestion.current; }
	EOF;

// Rule ExternalMediatorQuestion
ruleExternalMediatorQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.19 In case of dispute, is it considered to appoint an external mediator?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getExternalMediatorQuestionAccess().getName419InCaseOfDisputeIsItConsideredToAppointAnExternalMediatorKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalMediatorQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.19 In case of dispute, is it considered to appoint an external mediator?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getExternalMediatorQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getExternalMediatorQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExternalMediatorQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getExternalMediatorQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExternalMediatorQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExternalMediatorQuestionAccess().getSubsentenceMediatorNameQuestionParserRuleCall_3_0());
				}
				lv_subsentence_3_0=ruleMediatorNameQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExternalMediatorQuestionRule());
					}
					set(
						$current,
						"subsentence",
						lv_subsentence_3_0,
						"org.xtext.SmaCQA.MediatorNameQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMediatorNameQuestion
entryRuleMediatorNameQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMediatorNameQuestionRule()); }
	iv_ruleMediatorNameQuestion=ruleMediatorNameQuestion
	{ $current=$iv_ruleMediatorNameQuestion.current; }
	EOF;

// Rule MediatorNameQuestion
ruleMediatorNameQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='4.19.1 What is the name of the individual or company mediating external to the two parties?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMediatorNameQuestionAccess().getName4191WhatIsTheNameOfTheIndividualOrCompanyMediatingExternalToTheTwoPartiesKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMediatorNameQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "4.19.1 What is the name of the individual or company mediating external to the two parties?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getMediatorNameQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_ID
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getMediatorNameQuestionAccess().getAnswerIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMediatorNameQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleShipmentInsuranceQuestion
entryRuleShipmentInsuranceQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShipmentInsuranceQuestionRule()); }
	iv_ruleShipmentInsuranceQuestion=ruleShipmentInsuranceQuestion
	{ $current=$iv_ruleShipmentInsuranceQuestion.current; }
	EOF;

// Rule ShipmentInsuranceQuestion
ruleShipmentInsuranceQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='5.1 Is the cargo insured?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getShipmentInsuranceQuestionAccess().getName51IsTheCargoInsuredKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShipmentInsuranceQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "5.1 Is the cargo insured?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getShipmentInsuranceQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getShipmentInsuranceQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentInsuranceQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getShipmentInsuranceQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShipmentInsuranceQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleInsuranceDetailsQuestion
entryRuleInsuranceDetailsQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsuranceDetailsQuestionRule()); }
	iv_ruleInsuranceDetailsQuestion=ruleInsuranceDetailsQuestion
	{ $current=$iv_ruleInsuranceDetailsQuestion.current; }
	EOF;

// Rule InsuranceDetailsQuestion
ruleInsuranceDetailsQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_q1_0_0='5.1.1 What is the cost of insurance (per unit asset)?'
					{
						newLeafNode(lv_q1_0_0, grammarAccess.getInsuranceDetailsQuestionAccess().getQ1511WhatIsTheCostOfInsurancePerUnitAssetKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInsuranceDetailsQuestionRule());
						}
						setWithLastConsumed($current, "q1", lv_q1_0_0, "5.1.1 What is the cost of insurance (per unit asset)?");
					}
				)
			)
			otherlv_1='quantity = '
			{
				newLeafNode(otherlv_1, grammarAccess.getInsuranceDetailsQuestionAccess().getQuantityKeyword_0_1());
			}
			(
				(
					lv_answer1_2_0=RULE_INT
					{
						newLeafNode(lv_answer1_2_0, grammarAccess.getInsuranceDetailsQuestionAccess().getAnswer1INTTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInsuranceDetailsQuestionRule());
						}
						setWithLastConsumed(
							$current,
							"answer1",
							lv_answer1_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_3='unitCoin='
			{
				newLeafNode(otherlv_3, grammarAccess.getInsuranceDetailsQuestionAccess().getUnitCoinKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInsuranceDetailsQuestionAccess().getAnswerUnitCoin1UnitCoinEnumRuleCall_0_4_0());
					}
					lv_answerUnitCoin1_4_0=ruleUnitCoin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInsuranceDetailsQuestionRule());
						}
						set(
							$current,
							"answerUnitCoin1",
							lv_answerUnitCoin1_4_0,
							"org.xtext.SmaCQA.UnitCoin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					lv_q2_5_0='5.1.2 What cases are covered by the insurance (insurance clauses)?'
					{
						newLeafNode(lv_q2_5_0, grammarAccess.getInsuranceDetailsQuestionAccess().getQ2512WhatCasesAreCoveredByTheInsuranceInsuranceClausesKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInsuranceDetailsQuestionRule());
						}
						setWithLastConsumed($current, "q2", lv_q2_5_0, "5.1.2 What cases are covered by the insurance (insurance clauses)?");
					}
				)
			)
			otherlv_6='answer = '
			{
				newLeafNode(otherlv_6, grammarAccess.getInsuranceDetailsQuestionAccess().getAnswerKeyword_1_1());
			}
			(
				(
					lv_answer2_7_0=RULE_STRING
					{
						newLeafNode(lv_answer2_7_0, grammarAccess.getInsuranceDetailsQuestionAccess().getAnswer2STRINGTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInsuranceDetailsQuestionRule());
						}
						setWithLastConsumed(
							$current,
							"answer2",
							lv_answer2_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				(
					lv_q3_8_0='5.1.3 How much would be the refund paid in case of loss or cargo delivered in poor condition?'
					{
						newLeafNode(lv_q3_8_0, grammarAccess.getInsuranceDetailsQuestionAccess().getQ3513HowMuchWouldBeTheRefundPaidInCaseOfLossOrCargoDeliveredInPoorConditionKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInsuranceDetailsQuestionRule());
						}
						setWithLastConsumed($current, "q3", lv_q3_8_0, "5.1.3 How much would be the refund paid in case of loss or cargo delivered in poor condition?");
					}
				)
			)
			otherlv_9='answer = '
			{
				newLeafNode(otherlv_9, grammarAccess.getInsuranceDetailsQuestionAccess().getAnswerKeyword_2_1());
			}
			(
				(
					lv_answer3_10_0=RULE_INT
					{
						newLeafNode(lv_answer3_10_0, grammarAccess.getInsuranceDetailsQuestionAccess().getAnswer3INTTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInsuranceDetailsQuestionRule());
						}
						setWithLastConsumed(
							$current,
							"answer3",
							lv_answer3_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_11='unitCoin='
			{
				newLeafNode(otherlv_11, grammarAccess.getInsuranceDetailsQuestionAccess().getUnitCoinKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInsuranceDetailsQuestionAccess().getAnswerUnitCoin3UnitCoinEnumRuleCall_2_4_0());
					}
					lv_answerUnitCoin3_12_0=ruleUnitCoin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInsuranceDetailsQuestionRule());
						}
						set(
							$current,
							"answerUnitCoin3",
							lv_answerUnitCoin3_12_0,
							"org.xtext.SmaCQA.UnitCoin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleReturnsOrCancellationsQuestion
entryRuleReturnsOrCancellationsQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnsOrCancellationsQuestionRule()); }
	iv_ruleReturnsOrCancellationsQuestion=ruleReturnsOrCancellationsQuestion
	{ $current=$iv_ruleReturnsOrCancellationsQuestion.current; }
	EOF;

// Rule ReturnsOrCancellationsQuestion
ruleReturnsOrCancellationsQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='5.2 Is the possibility of returns or cancellations in the exchange foreseen?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReturnsOrCancellationsQuestionAccess().getName52IsThePossibilityOfReturnsOrCancellationsInTheExchangeForeseenKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReturnsOrCancellationsQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "5.2 Is the possibility of returns or cancellations in the exchange foreseen?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnsOrCancellationsQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getReturnsOrCancellationsQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReturnsOrCancellationsQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getReturnsOrCancellationsQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReturnsOrCancellationsQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnsOrCancellationsQuestionAccess().getSubsentenceReturnsManagementQuestionParserRuleCall_3_0());
				}
				lv_subsentence_3_0=ruleReturnsManagementQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnsOrCancellationsQuestionRule());
					}
					set(
						$current,
						"subsentence",
						lv_subsentence_3_0,
						"org.xtext.SmaCQA.ReturnsManagementQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleReturnsManagementQuestion
entryRuleReturnsManagementQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnsManagementQuestionRule()); }
	iv_ruleReturnsManagementQuestion=ruleReturnsManagementQuestion
	{ $current=$iv_ruleReturnsManagementQuestion.current; }
	EOF;

// Rule ReturnsManagementQuestion
ruleReturnsManagementQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='5.2.1 How would returns or cancellations be managed according to the terms of the contract?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReturnsManagementQuestionAccess().getName521HowWouldReturnsOrCancellationsBeManagedAccordingToTheTermsOfTheContractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReturnsManagementQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "5.2.1 How would returns or cancellations be managed according to the terms of the contract?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnsManagementQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getReturnsManagementQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReturnsManagementQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRulePenaltyForNeglectQuestion
entryRulePenaltyForNeglectQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPenaltyForNeglectQuestionRule()); }
	iv_rulePenaltyForNeglectQuestion=rulePenaltyForNeglectQuestion
	{ $current=$iv_rulePenaltyForNeglectQuestion.current; }
	EOF;

// Rule PenaltyForNeglectQuestion
rulePenaltyForNeglectQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='5.3 What is the penalty in case of neglect or abandonment of duties?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPenaltyForNeglectQuestionAccess().getName53WhatIsThePenaltyInCaseOfNeglectOrAbandonmentOfDutiesKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPenaltyForNeglectQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "5.3 What is the penalty in case of neglect or abandonment of duties?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getPenaltyForNeglectQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getPenaltyForNeglectQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPenaltyForNeglectQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAgreedPriceQuestion
entryRuleAgreedPriceQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgreedPriceQuestionRule()); }
	iv_ruleAgreedPriceQuestion=ruleAgreedPriceQuestion
	{ $current=$iv_ruleAgreedPriceQuestion.current; }
	EOF;

// Rule AgreedPriceQuestion
ruleAgreedPriceQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='6.1 What is the agreed price per unit of product ?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAgreedPriceQuestionAccess().getName61WhatIsTheAgreedPricePerUnitOfProductKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgreedPriceQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "6.1 What is the agreed price per unit of product ?");
				}
			)
		)
		otherlv_1='quanity = '
		{
			newLeafNode(otherlv_1, grammarAccess.getAgreedPriceQuestionAccess().getQuanityKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_INT
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getAgreedPriceQuestionAccess().getAnswerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgreedPriceQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='unitCoin'
		{
			newLeafNode(otherlv_3, grammarAccess.getAgreedPriceQuestionAccess().getUnitCoinKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAgreedPriceQuestionAccess().getAnswerUnitCoinUnitCoinEnumRuleCall_4_0());
				}
				lv_answerUnitCoin_4_0=ruleUnitCoin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAgreedPriceQuestionRule());
					}
					set(
						$current,
						"answerUnitCoin",
						lv_answerUnitCoin_4_0,
						"org.xtext.SmaCQA.UnitCoin");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProductQualityQuestion
entryRuleProductQualityQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductQualityQuestionRule()); }
	iv_ruleProductQualityQuestion=ruleProductQualityQuestion
	{ $current=$iv_ruleProductQualityQuestion.current; }
	EOF;

// Rule ProductQualityQuestion
ruleProductQualityQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='6.2 What is the expected quality of the product?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getProductQualityQuestionAccess().getName62WhatIsTheExpectedQualityOfTheProductKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductQualityQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "6.2 What is the expected quality of the product?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getProductQualityQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getProductQualityQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductQualityQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProductQualityQuestionAccess().getExpectedQualityExpectedQualityQuestionParserRuleCall_3_0());
				}
				lv_expectedQuality_3_0=ruleExpectedQualityQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductQualityQuestionRule());
					}
					set(
						$current,
						"expectedQuality",
						lv_expectedQuality_3_0,
						"org.xtext.SmaCQA.ExpectedQualityQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExpectedQualityQuestion
entryRuleExpectedQualityQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpectedQualityQuestionRule()); }
	iv_ruleExpectedQualityQuestion=ruleExpectedQualityQuestion
	{ $current=$iv_ruleExpectedQualityQuestion.current; }
	EOF;

// Rule ExpectedQualityQuestion
ruleExpectedQualityQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_q1_0_0='6.2.1 How will the quality of the product be determined?'
				{
					newLeafNode(lv_q1_0_0, grammarAccess.getExpectedQualityQuestionAccess().getQ1621HowWillTheQualityOfTheProductBeDeterminedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpectedQualityQuestionRule());
					}
					setWithLastConsumed($current, "q1", lv_q1_0_0, "6.2.1 How will the quality of the product be determined?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getExpectedQualityQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer1_2_0=RULE_STRING
				{
					newLeafNode(lv_answer1_2_0, grammarAccess.getExpectedQualityQuestionAccess().getAnswer1STRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpectedQualityQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer1",
						lv_answer1_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_q2_3_0='6.2.2 What happens if the delivered product does not meet the agreed quality?'
				{
					newLeafNode(lv_q2_3_0, grammarAccess.getExpectedQualityQuestionAccess().getQ2622WhatHappensIfTheDeliveredProductDoesNotMeetTheAgreedQualityKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpectedQualityQuestionRule());
					}
					setWithLastConsumed($current, "q2", lv_q2_3_0, "6.2.2 What happens if the delivered product does not meet the agreed quality?");
				}
			)
		)
		otherlv_4='answer = '
		{
			newLeafNode(otherlv_4, grammarAccess.getExpectedQualityQuestionAccess().getAnswerKeyword_4());
		}
		(
			(
				lv_answer2_5_0=RULE_STRING
				{
					newLeafNode(lv_answer2_5_0, grammarAccess.getExpectedQualityQuestionAccess().getAnswer2STRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpectedQualityQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer2",
						lv_answer2_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleInternationalSealQuestion
entryRuleInternationalSealQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInternationalSealQuestionRule()); }
	iv_ruleInternationalSealQuestion=ruleInternationalSealQuestion
	{ $current=$iv_ruleInternationalSealQuestion.current; }
	EOF;

// Rule InternationalSealQuestion
ruleInternationalSealQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='6.3 Does the merchandise have any international seal or distinction?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getInternationalSealQuestionAccess().getName63DoesTheMerchandiseHaveAnyInternationalSealOrDistinctionKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInternationalSealQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "6.3 Does the merchandise have any international seal or distinction?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getInternationalSealQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getInternationalSealQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInternationalSealQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getInternationalSealQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInternationalSealQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInternationalSealQuestionAccess().getSubsentenceInternacionalSealNameQuestionParserRuleCall_3_0());
				}
				lv_subsentence_3_0=ruleInternacionalSealNameQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInternationalSealQuestionRule());
					}
					set(
						$current,
						"subsentence",
						lv_subsentence_3_0,
						"org.xtext.SmaCQA.InternacionalSealNameQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleInternacionalSealNameQuestion
entryRuleInternacionalSealNameQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInternacionalSealNameQuestionRule()); }
	iv_ruleInternacionalSealNameQuestion=ruleInternacionalSealNameQuestion
	{ $current=$iv_ruleInternacionalSealNameQuestion.current; }
	EOF;

// Rule InternacionalSealNameQuestion
ruleInternacionalSealNameQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='6.3.1 What international seal or distinction does the cargo have?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getInternacionalSealNameQuestionAccess().getName631WhatInternationalSealOrDistinctionDoesTheCargoHaveKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInternacionalSealNameQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "6.3.1 What international seal or distinction does the cargo have?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getInternacionalSealNameQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				lv_answer_2_0=RULE_STRING
				{
					newLeafNode(lv_answer_2_0, grammarAccess.getInternacionalSealNameQuestionAccess().getAnswerSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInternacionalSealNameQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleHealthInspectionQuestion
entryRuleHealthInspectionQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHealthInspectionQuestionRule()); }
	iv_ruleHealthInspectionQuestion=ruleHealthInspectionQuestion
	{ $current=$iv_ruleHealthInspectionQuestion.current; }
	EOF;

// Rule HealthInspectionQuestion
ruleHealthInspectionQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='6.4 Has any health check or inspection been carried out at the production or storage site?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getHealthInspectionQuestionAccess().getName64HasAnyHealthCheckOrInspectionBeenCarriedOutAtTheProductionOrStorageSiteKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHealthInspectionQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "6.4 Has any health check or inspection been carried out at the production or storage site?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getHealthInspectionQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getHealthInspectionQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHealthInspectionQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getHealthInspectionQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHealthInspectionQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getHealthInspectionQuestionAccess().getSubsentenceInspectionResultQuestionParserRuleCall_3_0());
				}
				lv_subsentence_3_0=ruleInspectionResultQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHealthInspectionQuestionRule());
					}
					set(
						$current,
						"subsentence",
						lv_subsentence_3_0,
						"org.xtext.SmaCQA.InspectionResultQuestion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleInspectionResultQuestion
entryRuleInspectionResultQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInspectionResultQuestionRule()); }
	iv_ruleInspectionResultQuestion=ruleInspectionResultQuestion
	{ $current=$iv_ruleInspectionResultQuestion.current; }
	EOF;

// Rule InspectionResultQuestion
ruleInspectionResultQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='6.4.1 What was the result of the inspection?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getInspectionResultQuestionAccess().getName641WhatWasTheResultOfTheInspectionKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInspectionResultQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "6.4.1 What was the result of the inspection?");
				}
			)
		)
		otherlv_1='result of inspection = '
		{
			newLeafNode(otherlv_1, grammarAccess.getInspectionResultQuestionAccess().getResultOfInspectionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInspectionResultQuestionAccess().getAnswerInspectionResultEnumRuleCall_2_0());
				}
				lv_answer_2_0=ruleinspectionResult
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInspectionResultQuestionRule());
					}
					set(
						$current,
						"answer",
						lv_answer_2_0,
						"org.xtext.SmaCQA.inspectionResult");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStorageConditionsQuestion
entryRuleStorageConditionsQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageConditionsQuestionRule()); }
	iv_ruleStorageConditionsQuestion=ruleStorageConditionsQuestion
	{ $current=$iv_ruleStorageConditionsQuestion.current; }
	EOF;

// Rule StorageConditionsQuestion
ruleStorageConditionsQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='6.5 Has the merchandise been stored at all times in optimal humidity and temperature conditions?'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getStorageConditionsQuestionAccess().getName65HasTheMerchandiseBeenStoredAtAllTimesInOptimalHumidityAndTemperatureConditionsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageConditionsQuestionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "6.5 Has the merchandise been stored at all times in optimal humidity and temperature conditions?");
				}
			)
		)
		otherlv_1='answer = '
		{
			newLeafNode(otherlv_1, grammarAccess.getStorageConditionsQuestionAccess().getAnswerKeyword_1());
		}
		(
			(
				(
					lv_answer_2_1='yes'
					{
						newLeafNode(lv_answer_2_1, grammarAccess.getStorageConditionsQuestionAccess().getAnswerYesKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStorageConditionsQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_1, null);
					}
					    |
					lv_answer_2_2='no'
					{
						newLeafNode(lv_answer_2_2, grammarAccess.getStorageConditionsQuestionAccess().getAnswerNoKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStorageConditionsQuestionRule());
						}
						setWithLastConsumed($current, "answer", lv_answer_2_2, null);
					}
				)
			)
		)
	)
;

// Rule Type
ruleType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Number'
			{
				$current = grammarAccess.getTypeAccess().getNumberEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeAccess().getNumberEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Text'
			{
				$current = grammarAccess.getTypeAccess().getTextEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeAccess().getTextEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='TrueOrFalse'
			{
				$current = grammarAccess.getTypeAccess().getTrueOrFalseEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeAccess().getTrueOrFalseEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule UnitTime
ruleUnitTime returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='minutes'
			{
				$current = grammarAccess.getUnitTimeAccess().getMinutesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitTimeAccess().getMinutesEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='days'
			{
				$current = grammarAccess.getUnitTimeAccess().getDaysEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitTimeAccess().getDaysEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='weeks'
			{
				$current = grammarAccess.getUnitTimeAccess().getWeeksEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitTimeAccess().getWeeksEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='years'
			{
				$current = grammarAccess.getUnitTimeAccess().getYearsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUnitTimeAccess().getYearsEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule UnitCoin
ruleUnitCoin returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ether'
			{
				$current = grammarAccess.getUnitCoinAccess().getEtherEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitCoinAccess().getEtherEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='wei'
			{
				$current = grammarAccess.getUnitCoinAccess().getWeiEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitCoinAccess().getWeiEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='pwei'
			{
				$current = grammarAccess.getUnitCoinAccess().getPweiEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitCoinAccess().getPweiEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='gwei'
			{
				$current = grammarAccess.getUnitCoinAccess().getGweiEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUnitCoinAccess().getGweiEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='szabo'
			{
				$current = grammarAccess.getUnitCoinAccess().getSzaboEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getUnitCoinAccess().getSzaboEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule Voyagetype
ruleVoyagetype returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='time'
			{
				$current = grammarAccess.getVoyagetypeAccess().getTimeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVoyagetypeAccess().getTimeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='voyage'
			{
				$current = grammarAccess.getVoyagetypeAccess().getVoyageEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVoyagetypeAccess().getVoyageEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule inspectionResult
ruleinspectionResult returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='favorable'
			{
				$current = grammarAccess.getInspectionResultAccess().getFavorableEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getInspectionResultAccess().getFavorableEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='unfavorable'
			{
				$current = grammarAccess.getInspectionResultAccess().getUnfavorableEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getInspectionResultAccess().getUnfavorableEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_EOLINE : '/n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
