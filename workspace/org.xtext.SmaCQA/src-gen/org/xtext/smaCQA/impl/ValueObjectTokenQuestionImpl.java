/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.smaCQA.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.smaCQA.SmaCQAPackage;
import org.xtext.smaCQA.Token;
import org.xtext.smaCQA.ValueObjectTokenQuestion;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Value Object Token Question</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.smaCQA.impl.ValueObjectTokenQuestionImpl#getAnswer <em>Answer</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ValueObjectTokenQuestionImpl extends ValueObjectQuestionImpl implements ValueObjectTokenQuestion
{
  /**
	 * The cached value of the '{@link #getAnswer() <em>Answer</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAnswer()
	 * @generated
	 * @ordered
	 */
  protected Token answer;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ValueObjectTokenQuestionImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return SmaCQAPackage.Literals.VALUE_OBJECT_TOKEN_QUESTION;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Token getAnswer()
  {
		return answer;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetAnswer(Token newAnswer, NotificationChain msgs)
  {
		Token oldAnswer = answer;
		answer = newAnswer;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION__ANSWER, oldAnswer, newAnswer);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setAnswer(Token newAnswer)
  {
		if (newAnswer != answer) {
			NotificationChain msgs = null;
			if (answer != null)
				msgs = ((InternalEObject)answer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION__ANSWER, null, msgs);
			if (newAnswer != null)
				msgs = ((InternalEObject)newAnswer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION__ANSWER, null, msgs);
			msgs = basicSetAnswer(newAnswer, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION__ANSWER, newAnswer, newAnswer));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION__ANSWER:
				return basicSetAnswer(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION__ANSWER:
				return getAnswer();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION__ANSWER:
				setAnswer((Token)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION__ANSWER:
				setAnswer((Token)null);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION__ANSWER:
				return answer != null;
		}
		return super.eIsSet(featureID);
	}

} //ValueObjectTokenQuestionImpl
