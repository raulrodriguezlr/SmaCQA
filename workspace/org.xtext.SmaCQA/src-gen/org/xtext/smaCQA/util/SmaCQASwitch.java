/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.smaCQA.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.smaCQA.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.smaCQA.SmaCQAPackage
 * @generated
 */
public class SmaCQASwitch<T> extends Switch<T>
{
  /**
	 * The cached model package
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected static SmaCQAPackage modelPackage;

  /**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public SmaCQASwitch()
  {
		if (modelPackage == null) {
			modelPackage = SmaCQAPackage.eINSTANCE;
		}
	}

  /**
	 * Checks whether this is a switch for the given package.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param ePackage the package in question.
	 * @return whether this is a switch for the given package.
	 * @generated
	 */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
		return ePackage == modelPackage;
	}

  /**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @return the first non-null result returned by a <code>caseXXX</code> call.
	 * @generated
	 */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
		switch (classifierID) {
			case SmaCQAPackage.MODEL: {
				Model model = (Model)theEObject;
				T result = caseModel(model);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.VALUE_EXCHANGE: {
				ValueExchange valueExchange = (ValueExchange)theEObject;
				T result = caseValueExchange(valueExchange);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.DATA_QUESTION: {
				DataQuestion dataQuestion = (DataQuestion)theEObject;
				T result = caseDataQuestion(dataQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.SHIPMENT_QUESTION: {
				ShipmentQuestion shipmentQuestion = (ShipmentQuestion)theEObject;
				T result = caseShipmentQuestion(shipmentQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.INSURANCE_QUESTION: {
				InsuranceQuestion insuranceQuestion = (InsuranceQuestion)theEObject;
				T result = caseInsuranceQuestion(insuranceQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.ALIMENTARY_QUESTION: {
				AlimentaryQuestion alimentaryQuestion = (AlimentaryQuestion)theEObject;
				T result = caseAlimentaryQuestion(alimentaryQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.VALUE_OBJECT_QUESTION: {
				ValueObjectQuestion valueObjectQuestion = (ValueObjectQuestion)theEObject;
				T result = caseValueObjectQuestion(valueObjectQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.VALUE_OBJECT_RIGHT_QUESTION: {
				ValueObjectRightQuestion valueObjectRightQuestion = (ValueObjectRightQuestion)theEObject;
				T result = caseValueObjectRightQuestion(valueObjectRightQuestion);
				if (result == null) result = caseValueObjectQuestion(valueObjectRightQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.VALUE_OBJECT_TOKEN_QUESTION: {
				ValueObjectTokenQuestion valueObjectTokenQuestion = (ValueObjectTokenQuestion)theEObject;
				T result = caseValueObjectTokenQuestion(valueObjectTokenQuestion);
				if (result == null) result = caseValueObjectQuestion(valueObjectTokenQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.VALUE_OBJECT_TANGIBLE_QUESTION: {
				ValueObjectTangibleQuestion valueObjectTangibleQuestion = (ValueObjectTangibleQuestion)theEObject;
				T result = caseValueObjectTangibleQuestion(valueObjectTangibleQuestion);
				if (result == null) result = caseValueObjectQuestion(valueObjectTangibleQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.DATA_REGISTER: {
				DataRegister dataRegister = (DataRegister)theEObject;
				T result = caseDataRegister(dataRegister);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.TOKEN: {
				Token token = (Token)theEObject;
				T result = caseToken(token);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.TOKEN_ERC20: {
				TokenERC20 tokenERC20 = (TokenERC20)theEObject;
				T result = caseTokenERC20(tokenERC20);
				if (result == null) result = caseToken(tokenERC20);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.TOKEN_ERC223: {
				TokenERC223 tokenERC223 = (TokenERC223)theEObject;
				T result = caseTokenERC223(tokenERC223);
				if (result == null) result = caseToken(tokenERC223);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.TOKEN_ERC721: {
				TokenERC721 tokenERC721 = (TokenERC721)theEObject;
				T result = caseTokenERC721(tokenERC721);
				if (result == null) result = caseToken(tokenERC721);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.TIME_VALUE_EXCHANGE_DURATION_QUESTION: {
				TimeValueExchangeDurationQuestion timeValueExchangeDurationQuestion = (TimeValueExchangeDurationQuestion)theEObject;
				T result = caseTimeValueExchangeDurationQuestion(timeValueExchangeDurationQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.TIME_START_VALUE_EXCHANGE_QUESTION: {
				TimeStartValueExchangeQuestion timeStartValueExchangeQuestion = (TimeStartValueExchangeQuestion)theEObject;
				T result = caseTimeStartValueExchangeQuestion(timeStartValueExchangeQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.REPEAT_VALUE_EXCHANGE_QUESTION: {
				RepeatValueExchangeQuestion repeatValueExchangeQuestion = (RepeatValueExchangeQuestion)theEObject;
				T result = caseRepeatValueExchangeQuestion(repeatValueExchangeQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.CONDITIONS_VALUE_EXCHANGE_QUESTION: {
				ConditionsValueExchangeQuestion conditionsValueExchangeQuestion = (ConditionsValueExchangeQuestion)theEObject;
				T result = caseConditionsValueExchangeQuestion(conditionsValueExchangeQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.LEGAL_QUESTION: {
				LegalQuestion legalQuestion = (LegalQuestion)theEObject;
				T result = caseLegalQuestion(legalQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.AGE_QUESTION: {
				AgeQuestion ageQuestion = (AgeQuestion)theEObject;
				T result = caseAgeQuestion(ageQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.TAX_QUESTION: {
				TaxQuestion taxQuestion = (TaxQuestion)theEObject;
				T result = caseTaxQuestion(taxQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.ADDITIONAL_LEGAL_DOCUMENT_QUESTION: {
				AdditionalLegalDocumentQuestion additionalLegalDocumentQuestion = (AdditionalLegalDocumentQuestion)theEObject;
				T result = caseAdditionalLegalDocumentQuestion(additionalLegalDocumentQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.REGULATORY_COMPLIANCE_QUESTION: {
				RegulatoryComplianceQuestion regulatoryComplianceQuestion = (RegulatoryComplianceQuestion)theEObject;
				T result = caseRegulatoryComplianceQuestion(regulatoryComplianceQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.ECONOMY_QUESTION: {
				EconomyQuestion economyQuestion = (EconomyQuestion)theEObject;
				T result = caseEconomyQuestion(economyQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.MINIMUM_AMOUNT_QUESTION: {
				MinimumAmountQuestion minimumAmountQuestion = (MinimumAmountQuestion)theEObject;
				T result = caseMinimumAmountQuestion(minimumAmountQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.SHIPMENT_COST_RESPONSIBILITY_QUESTION: {
				ShipmentCostResponsibilityQuestion shipmentCostResponsibilityQuestion = (ShipmentCostResponsibilityQuestion)theEObject;
				T result = caseShipmentCostResponsibilityQuestion(shipmentCostResponsibilityQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.SHIPMENT_DETAILS_QUESTION: {
				ShipmentDetailsQuestion shipmentDetailsQuestion = (ShipmentDetailsQuestion)theEObject;
				T result = caseShipmentDetailsQuestion(shipmentDetailsQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.SANITARY_CONTROL_QUESTION: {
				SanitaryControlQuestion sanitaryControlQuestion = (SanitaryControlQuestion)theEObject;
				T result = caseSanitaryControlQuestion(sanitaryControlQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.CUSTOMS_QUESTION: {
				CustomsQuestion customsQuestion = (CustomsQuestion)theEObject;
				T result = caseCustomsQuestion(customsQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.IMPORT_TAX_QUESTION: {
				ImportTaxQuestion importTaxQuestion = (ImportTaxQuestion)theEObject;
				T result = caseImportTaxQuestion(importTaxQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.TAX_SHIPMENT_DETAILS_QUESTION: {
				TaxShipmentDetailsQuestion taxShipmentDetailsQuestion = (TaxShipmentDetailsQuestion)theEObject;
				T result = caseTaxShipmentDetailsQuestion(taxShipmentDetailsQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION: {
				GeographicalQuestion geographicalQuestion = (GeographicalQuestion)theEObject;
				T result = caseGeographicalQuestion(geographicalQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.GEOGRAPHICAL_RESTRICTION_QUESTION: {
				GeographicalRestrictionQuestion geographicalRestrictionQuestion = (GeographicalRestrictionQuestion)theEObject;
				T result = caseGeographicalRestrictionQuestion(geographicalRestrictionQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.ADDRESS_PICKUP_QUESTION: {
				AddressPickupQuestion addressPickupQuestion = (AddressPickupQuestion)theEObject;
				T result = caseAddressPickupQuestion(addressPickupQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.ADDRESS_DELIVERY_QUESTION: {
				AddressDeliveryQuestion addressDeliveryQuestion = (AddressDeliveryQuestion)theEObject;
				T result = caseAddressDeliveryQuestion(addressDeliveryQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.SHIPMENT_TRACKING_NUMBER_QUESTION: {
				ShipmentTrackingNumberQuestion shipmentTrackingNumberQuestion = (ShipmentTrackingNumberQuestion)theEObject;
				T result = caseShipmentTrackingNumberQuestion(shipmentTrackingNumberQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.DANGEROUS_LOAD_QUESTION: {
				DangerousLoadQuestion dangerousLoadQuestion = (DangerousLoadQuestion)theEObject;
				T result = caseDangerousLoadQuestion(dangerousLoadQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.SPECIAL_MEASURES_QUESTION: {
				SpecialMeasuresQuestion specialMeasuresQuestion = (SpecialMeasuresQuestion)theEObject;
				T result = caseSpecialMeasuresQuestion(specialMeasuresQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.PERISHABLE_QUESTION: {
				PerishableQuestion perishableQuestion = (PerishableQuestion)theEObject;
				T result = casePerishableQuestion(perishableQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.EXPIRATION_DATE_QUESTION: {
				ExpirationDateQuestion expirationDateQuestion = (ExpirationDateQuestion)theEObject;
				T result = caseExpirationDateQuestion(expirationDateQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.CARGO_TYPE_QUESTION: {
				CargoTypeQuestion cargoTypeQuestion = (CargoTypeQuestion)theEObject;
				T result = caseCargoTypeQuestion(cargoTypeQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.CARGO_WEIGHT_QUESTION: {
				CargoWeightQuestion cargoWeightQuestion = (CargoWeightQuestion)theEObject;
				T result = caseCargoWeightQuestion(cargoWeightQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.CARGO_DIMENSIONS_QUESTION: {
				CargoDimensionsQuestion cargoDimensionsQuestion = (CargoDimensionsQuestion)theEObject;
				T result = caseCargoDimensionsQuestion(cargoDimensionsQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.SEA_SHIPMENT_QUESTION: {
				SeaShipmentQuestion seaShipmentQuestion = (SeaShipmentQuestion)theEObject;
				T result = caseSeaShipmentQuestion(seaShipmentQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.MARITIME_QUESTION: {
				MaritimeQuestion maritimeQuestion = (MaritimeQuestion)theEObject;
				T result = caseMaritimeQuestion(maritimeQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.VOYAGE_QUESTION: {
				VoyageQuestion voyageQuestion = (VoyageQuestion)theEObject;
				T result = caseVoyageQuestion(voyageQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.MEANS_TRANSPORT_QUESTION: {
				MeansTransportQuestion meansTransportQuestion = (MeansTransportQuestion)theEObject;
				T result = caseMeansTransportQuestion(meansTransportQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.COMPANY_QUESTION: {
				CompanyQuestion companyQuestion = (CompanyQuestion)theEObject;
				T result = caseCompanyQuestion(companyQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.DELIVERY_DEADLINE_QUESTION: {
				DeliveryDeadlineQuestion deliveryDeadlineQuestion = (DeliveryDeadlineQuestion)theEObject;
				T result = caseDeliveryDeadlineQuestion(deliveryDeadlineQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.UPDATES_AND_MONITORING_QUESTION: {
				UpdatesAndMonitoringQuestion updatesAndMonitoringQuestion = (UpdatesAndMonitoringQuestion)theEObject;
				T result = caseUpdatesAndMonitoringQuestion(updatesAndMonitoringQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.EXTERNAL_MEDIATOR_QUESTION: {
				ExternalMediatorQuestion externalMediatorQuestion = (ExternalMediatorQuestion)theEObject;
				T result = caseExternalMediatorQuestion(externalMediatorQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.MEDIATOR_NAME_QUESTION: {
				MediatorNameQuestion mediatorNameQuestion = (MediatorNameQuestion)theEObject;
				T result = caseMediatorNameQuestion(mediatorNameQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.SHIPMENT_INSURANCE_QUESTION: {
				ShipmentInsuranceQuestion shipmentInsuranceQuestion = (ShipmentInsuranceQuestion)theEObject;
				T result = caseShipmentInsuranceQuestion(shipmentInsuranceQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.INSURANCE_DETAILS_QUESTION: {
				InsuranceDetailsQuestion insuranceDetailsQuestion = (InsuranceDetailsQuestion)theEObject;
				T result = caseInsuranceDetailsQuestion(insuranceDetailsQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.RETURNS_OR_CANCELLATIONS_QUESTION: {
				ReturnsOrCancellationsQuestion returnsOrCancellationsQuestion = (ReturnsOrCancellationsQuestion)theEObject;
				T result = caseReturnsOrCancellationsQuestion(returnsOrCancellationsQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.RETURNS_MANAGEMENT_QUESTION: {
				ReturnsManagementQuestion returnsManagementQuestion = (ReturnsManagementQuestion)theEObject;
				T result = caseReturnsManagementQuestion(returnsManagementQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.PENALTY_FOR_NEGLECT_QUESTION: {
				PenaltyForNeglectQuestion penaltyForNeglectQuestion = (PenaltyForNeglectQuestion)theEObject;
				T result = casePenaltyForNeglectQuestion(penaltyForNeglectQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.AGREED_PRICE_QUESTION: {
				AgreedPriceQuestion agreedPriceQuestion = (AgreedPriceQuestion)theEObject;
				T result = caseAgreedPriceQuestion(agreedPriceQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.PRODUCT_QUALITY_QUESTION: {
				ProductQualityQuestion productQualityQuestion = (ProductQualityQuestion)theEObject;
				T result = caseProductQualityQuestion(productQualityQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.EXPECTED_QUALITY_QUESTION: {
				ExpectedQualityQuestion expectedQualityQuestion = (ExpectedQualityQuestion)theEObject;
				T result = caseExpectedQualityQuestion(expectedQualityQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.INTERNATIONAL_SEAL_QUESTION: {
				InternationalSealQuestion internationalSealQuestion = (InternationalSealQuestion)theEObject;
				T result = caseInternationalSealQuestion(internationalSealQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.INTERNACIONAL_SEAL_NAME_QUESTION: {
				InternacionalSealNameQuestion internacionalSealNameQuestion = (InternacionalSealNameQuestion)theEObject;
				T result = caseInternacionalSealNameQuestion(internacionalSealNameQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.HEALTH_INSPECTION_QUESTION: {
				HealthInspectionQuestion healthInspectionQuestion = (HealthInspectionQuestion)theEObject;
				T result = caseHealthInspectionQuestion(healthInspectionQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.INSPECTION_RESULT_QUESTION: {
				InspectionResultQuestion inspectionResultQuestion = (InspectionResultQuestion)theEObject;
				T result = caseInspectionResultQuestion(inspectionResultQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case SmaCQAPackage.STORAGE_CONDITIONS_QUESTION: {
				StorageConditionsQuestion storageConditionsQuestion = (StorageConditionsQuestion)theEObject;
				T result = caseStorageConditionsQuestion(storageConditionsQuestion);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			default: return defaultCase(theEObject);
		}
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Model</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseModel(Model object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Value Exchange</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Exchange</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseValueExchange(ValueExchange object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Data Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Data Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseDataQuestion(DataQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Shipment Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Shipment Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseShipmentQuestion(ShipmentQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseInsuranceQuestion(InsuranceQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Alimentary Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Alimentary Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseAlimentaryQuestion(AlimentaryQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Value Object Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Object Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseValueObjectQuestion(ValueObjectQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Value Object Right Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Object Right Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseValueObjectRightQuestion(ValueObjectRightQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Value Object Token Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Object Token Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseValueObjectTokenQuestion(ValueObjectTokenQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Value Object Tangible Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Value Object Tangible Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseValueObjectTangibleQuestion(ValueObjectTangibleQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Data Register</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Data Register</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseDataRegister(DataRegister object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Token</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Token</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseToken(Token object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Token ERC20</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Token ERC20</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseTokenERC20(TokenERC20 object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Token ERC223</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Token ERC223</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseTokenERC223(TokenERC223 object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Token ERC721</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Token ERC721</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseTokenERC721(TokenERC721 object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Time Value Exchange Duration Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Time Value Exchange Duration Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseTimeValueExchangeDurationQuestion(TimeValueExchangeDurationQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Time Start Value Exchange Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Time Start Value Exchange Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseTimeStartValueExchangeQuestion(TimeStartValueExchangeQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Repeat Value Exchange Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Repeat Value Exchange Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseRepeatValueExchangeQuestion(RepeatValueExchangeQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Conditions Value Exchange Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Conditions Value Exchange Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseConditionsValueExchangeQuestion(ConditionsValueExchangeQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Legal Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Legal Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseLegalQuestion(LegalQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Age Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Age Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseAgeQuestion(AgeQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Tax Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Tax Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseTaxQuestion(TaxQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Additional Legal Document Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Additional Legal Document Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseAdditionalLegalDocumentQuestion(AdditionalLegalDocumentQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Regulatory Compliance Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Regulatory Compliance Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseRegulatoryComplianceQuestion(RegulatoryComplianceQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Economy Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Economy Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseEconomyQuestion(EconomyQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Minimum Amount Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Minimum Amount Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseMinimumAmountQuestion(MinimumAmountQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Shipment Cost Responsibility Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Shipment Cost Responsibility Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseShipmentCostResponsibilityQuestion(ShipmentCostResponsibilityQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Shipment Details Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Shipment Details Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseShipmentDetailsQuestion(ShipmentDetailsQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Sanitary Control Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Sanitary Control Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseSanitaryControlQuestion(SanitaryControlQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Customs Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Customs Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseCustomsQuestion(CustomsQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Import Tax Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Import Tax Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseImportTaxQuestion(ImportTaxQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Tax Shipment Details Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Tax Shipment Details Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseTaxShipmentDetailsQuestion(TaxShipmentDetailsQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Geographical Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Geographical Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseGeographicalQuestion(GeographicalQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Geographical Restriction Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Geographical Restriction Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseGeographicalRestrictionQuestion(GeographicalRestrictionQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Address Pickup Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Address Pickup Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseAddressPickupQuestion(AddressPickupQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Address Delivery Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Address Delivery Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseAddressDeliveryQuestion(AddressDeliveryQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Shipment Tracking Number Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Shipment Tracking Number Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseShipmentTrackingNumberQuestion(ShipmentTrackingNumberQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Dangerous Load Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Dangerous Load Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseDangerousLoadQuestion(DangerousLoadQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Special Measures Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Special Measures Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseSpecialMeasuresQuestion(SpecialMeasuresQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Perishable Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Perishable Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T casePerishableQuestion(PerishableQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Expiration Date Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Expiration Date Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseExpirationDateQuestion(ExpirationDateQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Cargo Type Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Cargo Type Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseCargoTypeQuestion(CargoTypeQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Cargo Weight Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Cargo Weight Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseCargoWeightQuestion(CargoWeightQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Cargo Dimensions Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Cargo Dimensions Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseCargoDimensionsQuestion(CargoDimensionsQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Sea Shipment Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Sea Shipment Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseSeaShipmentQuestion(SeaShipmentQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Maritime Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Maritime Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseMaritimeQuestion(MaritimeQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Voyage Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Voyage Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseVoyageQuestion(VoyageQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Means Transport Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Means Transport Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseMeansTransportQuestion(MeansTransportQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Company Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Company Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseCompanyQuestion(CompanyQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Delivery Deadline Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Delivery Deadline Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseDeliveryDeadlineQuestion(DeliveryDeadlineQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Updates And Monitoring Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Updates And Monitoring Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseUpdatesAndMonitoringQuestion(UpdatesAndMonitoringQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>External Mediator Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>External Mediator Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseExternalMediatorQuestion(ExternalMediatorQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Mediator Name Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Mediator Name Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseMediatorNameQuestion(MediatorNameQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Shipment Insurance Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Shipment Insurance Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseShipmentInsuranceQuestion(ShipmentInsuranceQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Insurance Details Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Insurance Details Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseInsuranceDetailsQuestion(InsuranceDetailsQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Returns Or Cancellations Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Returns Or Cancellations Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseReturnsOrCancellationsQuestion(ReturnsOrCancellationsQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Returns Management Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Returns Management Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseReturnsManagementQuestion(ReturnsManagementQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Penalty For Neglect Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Penalty For Neglect Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T casePenaltyForNeglectQuestion(PenaltyForNeglectQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Agreed Price Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Agreed Price Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseAgreedPriceQuestion(AgreedPriceQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Product Quality Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Product Quality Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseProductQualityQuestion(ProductQualityQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Expected Quality Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Expected Quality Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseExpectedQualityQuestion(ExpectedQualityQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>International Seal Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>International Seal Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseInternationalSealQuestion(InternationalSealQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Internacional Seal Name Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Internacional Seal Name Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseInternacionalSealNameQuestion(InternacionalSealNameQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Health Inspection Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Health Inspection Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseHealthInspectionQuestion(HealthInspectionQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Inspection Result Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Inspection Result Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseInspectionResultQuestion(InspectionResultQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>Storage Conditions Question</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Storage Conditions Question</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
  public T caseStorageConditionsQuestion(StorageConditionsQuestion object)
  {
		return null;
	}

  /**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
  @Override
  public T defaultCase(EObject object)
  {
		return null;
	}

} //SmaCQASwitch
