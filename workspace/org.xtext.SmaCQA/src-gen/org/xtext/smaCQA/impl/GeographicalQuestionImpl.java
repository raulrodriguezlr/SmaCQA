/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.smaCQA.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.smaCQA.GeographicalQuestion;
import org.xtext.smaCQA.GeographicalRestrictionQuestion;
import org.xtext.smaCQA.SmaCQAPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Geographical Question</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.smaCQA.impl.GeographicalQuestionImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.GeographicalQuestionImpl#getAnswer <em>Answer</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.GeographicalQuestionImpl#getSubSentenceRestriction <em>Sub Sentence Restriction</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GeographicalQuestionImpl extends MinimalEObjectImpl.Container implements GeographicalQuestion
{
  /**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
  protected static final String NAME_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
  protected String name = NAME_EDEFAULT;

  /**
	 * The default value of the '{@link #getAnswer() <em>Answer</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAnswer()
	 * @generated
	 * @ordered
	 */
  protected static final String ANSWER_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getAnswer() <em>Answer</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAnswer()
	 * @generated
	 * @ordered
	 */
  protected String answer = ANSWER_EDEFAULT;

  /**
	 * The cached value of the '{@link #getSubSentenceRestriction() <em>Sub Sentence Restriction</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getSubSentenceRestriction()
	 * @generated
	 * @ordered
	 */
  protected GeographicalRestrictionQuestion subSentenceRestriction;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected GeographicalQuestionImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return SmaCQAPackage.Literals.GEOGRAPHICAL_QUESTION;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getName()
  {
		return name;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setName(String newName)
  {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.GEOGRAPHICAL_QUESTION__NAME, oldName, name));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getAnswer()
  {
		return answer;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setAnswer(String newAnswer)
  {
		String oldAnswer = answer;
		answer = newAnswer;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.GEOGRAPHICAL_QUESTION__ANSWER, oldAnswer, answer));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public GeographicalRestrictionQuestion getSubSentenceRestriction()
  {
		return subSentenceRestriction;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetSubSentenceRestriction(GeographicalRestrictionQuestion newSubSentenceRestriction, NotificationChain msgs)
  {
		GeographicalRestrictionQuestion oldSubSentenceRestriction = subSentenceRestriction;
		subSentenceRestriction = newSubSentenceRestriction;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.GEOGRAPHICAL_QUESTION__SUB_SENTENCE_RESTRICTION, oldSubSentenceRestriction, newSubSentenceRestriction);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setSubSentenceRestriction(GeographicalRestrictionQuestion newSubSentenceRestriction)
  {
		if (newSubSentenceRestriction != subSentenceRestriction) {
			NotificationChain msgs = null;
			if (subSentenceRestriction != null)
				msgs = ((InternalEObject)subSentenceRestriction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.GEOGRAPHICAL_QUESTION__SUB_SENTENCE_RESTRICTION, null, msgs);
			if (newSubSentenceRestriction != null)
				msgs = ((InternalEObject)newSubSentenceRestriction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.GEOGRAPHICAL_QUESTION__SUB_SENTENCE_RESTRICTION, null, msgs);
			msgs = basicSetSubSentenceRestriction(newSubSentenceRestriction, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.GEOGRAPHICAL_QUESTION__SUB_SENTENCE_RESTRICTION, newSubSentenceRestriction, newSubSentenceRestriction));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__SUB_SENTENCE_RESTRICTION:
				return basicSetSubSentenceRestriction(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__NAME:
				return getName();
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__ANSWER:
				return getAnswer();
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__SUB_SENTENCE_RESTRICTION:
				return getSubSentenceRestriction();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__NAME:
				setName((String)newValue);
				return;
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__ANSWER:
				setAnswer((String)newValue);
				return;
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__SUB_SENTENCE_RESTRICTION:
				setSubSentenceRestriction((GeographicalRestrictionQuestion)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__NAME:
				setName(NAME_EDEFAULT);
				return;
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__ANSWER:
				setAnswer(ANSWER_EDEFAULT);
				return;
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__SUB_SENTENCE_RESTRICTION:
				setSubSentenceRestriction((GeographicalRestrictionQuestion)null);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__ANSWER:
				return ANSWER_EDEFAULT == null ? answer != null : !ANSWER_EDEFAULT.equals(answer);
			case SmaCQAPackage.GEOGRAPHICAL_QUESTION__SUB_SENTENCE_RESTRICTION:
				return subSentenceRestriction != null;
		}
		return super.eIsSet(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(", answer: ");
		result.append(answer);
		result.append(')');
		return result.toString();
	}

} //GeographicalQuestionImpl
