/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.smaCQA.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.xtext.smaCQA.util.SmaCQAAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class SmaCQAItemProviderAdapterFactory extends SmaCQAAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public SmaCQAItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.Model} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelItemProvider modelItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.Model}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelAdapter() {
		if (modelItemProvider == null) {
			modelItemProvider = new ModelItemProvider(this);
		}

		return modelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ValueExchange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueExchangeItemProvider valueExchangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ValueExchange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueExchangeAdapter() {
		if (valueExchangeItemProvider == null) {
			valueExchangeItemProvider = new ValueExchangeItemProvider(this);
		}

		return valueExchangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.DataQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataQuestionItemProvider dataQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.DataQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataQuestionAdapter() {
		if (dataQuestionItemProvider == null) {
			dataQuestionItemProvider = new DataQuestionItemProvider(this);
		}

		return dataQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ShipmentQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShipmentQuestionItemProvider shipmentQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ShipmentQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShipmentQuestionAdapter() {
		if (shipmentQuestionItemProvider == null) {
			shipmentQuestionItemProvider = new ShipmentQuestionItemProvider(this);
		}

		return shipmentQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.InsuranceQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InsuranceQuestionItemProvider insuranceQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.InsuranceQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInsuranceQuestionAdapter() {
		if (insuranceQuestionItemProvider == null) {
			insuranceQuestionItemProvider = new InsuranceQuestionItemProvider(this);
		}

		return insuranceQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.AlimentaryQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlimentaryQuestionItemProvider alimentaryQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.AlimentaryQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlimentaryQuestionAdapter() {
		if (alimentaryQuestionItemProvider == null) {
			alimentaryQuestionItemProvider = new AlimentaryQuestionItemProvider(this);
		}

		return alimentaryQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ValueObjectQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueObjectQuestionItemProvider valueObjectQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ValueObjectQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueObjectQuestionAdapter() {
		if (valueObjectQuestionItemProvider == null) {
			valueObjectQuestionItemProvider = new ValueObjectQuestionItemProvider(this);
		}

		return valueObjectQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ValueObjectRightQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueObjectRightQuestionItemProvider valueObjectRightQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ValueObjectRightQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueObjectRightQuestionAdapter() {
		if (valueObjectRightQuestionItemProvider == null) {
			valueObjectRightQuestionItemProvider = new ValueObjectRightQuestionItemProvider(this);
		}

		return valueObjectRightQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ValueObjectTokenQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueObjectTokenQuestionItemProvider valueObjectTokenQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ValueObjectTokenQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueObjectTokenQuestionAdapter() {
		if (valueObjectTokenQuestionItemProvider == null) {
			valueObjectTokenQuestionItemProvider = new ValueObjectTokenQuestionItemProvider(this);
		}

		return valueObjectTokenQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ValueObjectTangibleQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueObjectTangibleQuestionItemProvider valueObjectTangibleQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ValueObjectTangibleQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueObjectTangibleQuestionAdapter() {
		if (valueObjectTangibleQuestionItemProvider == null) {
			valueObjectTangibleQuestionItemProvider = new ValueObjectTangibleQuestionItemProvider(this);
		}

		return valueObjectTangibleQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.DataRegister} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataRegisterItemProvider dataRegisterItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.DataRegister}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataRegisterAdapter() {
		if (dataRegisterItemProvider == null) {
			dataRegisterItemProvider = new DataRegisterItemProvider(this);
		}

		return dataRegisterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.Token} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TokenItemProvider tokenItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.Token}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTokenAdapter() {
		if (tokenItemProvider == null) {
			tokenItemProvider = new TokenItemProvider(this);
		}

		return tokenItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.TokenERC20} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TokenERC20ItemProvider tokenERC20ItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.TokenERC20}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTokenERC20Adapter() {
		if (tokenERC20ItemProvider == null) {
			tokenERC20ItemProvider = new TokenERC20ItemProvider(this);
		}

		return tokenERC20ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.TokenERC223} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TokenERC223ItemProvider tokenERC223ItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.TokenERC223}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTokenERC223Adapter() {
		if (tokenERC223ItemProvider == null) {
			tokenERC223ItemProvider = new TokenERC223ItemProvider(this);
		}

		return tokenERC223ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.TokenERC721} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TokenERC721ItemProvider tokenERC721ItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.TokenERC721}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTokenERC721Adapter() {
		if (tokenERC721ItemProvider == null) {
			tokenERC721ItemProvider = new TokenERC721ItemProvider(this);
		}

		return tokenERC721ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.TimeValueExchangeDurationQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeValueExchangeDurationQuestionItemProvider timeValueExchangeDurationQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.TimeValueExchangeDurationQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeValueExchangeDurationQuestionAdapter() {
		if (timeValueExchangeDurationQuestionItemProvider == null) {
			timeValueExchangeDurationQuestionItemProvider = new TimeValueExchangeDurationQuestionItemProvider(this);
		}

		return timeValueExchangeDurationQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.TimeStartValueExchangeQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeStartValueExchangeQuestionItemProvider timeStartValueExchangeQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.TimeStartValueExchangeQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeStartValueExchangeQuestionAdapter() {
		if (timeStartValueExchangeQuestionItemProvider == null) {
			timeStartValueExchangeQuestionItemProvider = new TimeStartValueExchangeQuestionItemProvider(this);
		}

		return timeStartValueExchangeQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.RepeatValueExchangeQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepeatValueExchangeQuestionItemProvider repeatValueExchangeQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.RepeatValueExchangeQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepeatValueExchangeQuestionAdapter() {
		if (repeatValueExchangeQuestionItemProvider == null) {
			repeatValueExchangeQuestionItemProvider = new RepeatValueExchangeQuestionItemProvider(this);
		}

		return repeatValueExchangeQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ConditionsValueExchangeQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionsValueExchangeQuestionItemProvider conditionsValueExchangeQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ConditionsValueExchangeQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionsValueExchangeQuestionAdapter() {
		if (conditionsValueExchangeQuestionItemProvider == null) {
			conditionsValueExchangeQuestionItemProvider = new ConditionsValueExchangeQuestionItemProvider(this);
		}

		return conditionsValueExchangeQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.LegalQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LegalQuestionItemProvider legalQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.LegalQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLegalQuestionAdapter() {
		if (legalQuestionItemProvider == null) {
			legalQuestionItemProvider = new LegalQuestionItemProvider(this);
		}

		return legalQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.AgeQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AgeQuestionItemProvider ageQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.AgeQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAgeQuestionAdapter() {
		if (ageQuestionItemProvider == null) {
			ageQuestionItemProvider = new AgeQuestionItemProvider(this);
		}

		return ageQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.TaxQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaxQuestionItemProvider taxQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.TaxQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaxQuestionAdapter() {
		if (taxQuestionItemProvider == null) {
			taxQuestionItemProvider = new TaxQuestionItemProvider(this);
		}

		return taxQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.AdditionalLegalDocumentQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditionalLegalDocumentQuestionItemProvider additionalLegalDocumentQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.AdditionalLegalDocumentQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditionalLegalDocumentQuestionAdapter() {
		if (additionalLegalDocumentQuestionItemProvider == null) {
			additionalLegalDocumentQuestionItemProvider = new AdditionalLegalDocumentQuestionItemProvider(this);
		}

		return additionalLegalDocumentQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.RegulatoryComplianceQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegulatoryComplianceQuestionItemProvider regulatoryComplianceQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.RegulatoryComplianceQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRegulatoryComplianceQuestionAdapter() {
		if (regulatoryComplianceQuestionItemProvider == null) {
			regulatoryComplianceQuestionItemProvider = new RegulatoryComplianceQuestionItemProvider(this);
		}

		return regulatoryComplianceQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.EconomyQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EconomyQuestionItemProvider economyQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.EconomyQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEconomyQuestionAdapter() {
		if (economyQuestionItemProvider == null) {
			economyQuestionItemProvider = new EconomyQuestionItemProvider(this);
		}

		return economyQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.MinimumAmountQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinimumAmountQuestionItemProvider minimumAmountQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.MinimumAmountQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinimumAmountQuestionAdapter() {
		if (minimumAmountQuestionItemProvider == null) {
			minimumAmountQuestionItemProvider = new MinimumAmountQuestionItemProvider(this);
		}

		return minimumAmountQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ShipmentCostResponsibilityQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShipmentCostResponsibilityQuestionItemProvider shipmentCostResponsibilityQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ShipmentCostResponsibilityQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShipmentCostResponsibilityQuestionAdapter() {
		if (shipmentCostResponsibilityQuestionItemProvider == null) {
			shipmentCostResponsibilityQuestionItemProvider = new ShipmentCostResponsibilityQuestionItemProvider(this);
		}

		return shipmentCostResponsibilityQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ShipmentDetailsQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShipmentDetailsQuestionItemProvider shipmentDetailsQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ShipmentDetailsQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShipmentDetailsQuestionAdapter() {
		if (shipmentDetailsQuestionItemProvider == null) {
			shipmentDetailsQuestionItemProvider = new ShipmentDetailsQuestionItemProvider(this);
		}

		return shipmentDetailsQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.SanitaryControlQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SanitaryControlQuestionItemProvider sanitaryControlQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.SanitaryControlQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSanitaryControlQuestionAdapter() {
		if (sanitaryControlQuestionItemProvider == null) {
			sanitaryControlQuestionItemProvider = new SanitaryControlQuestionItemProvider(this);
		}

		return sanitaryControlQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.CustomsQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomsQuestionItemProvider customsQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.CustomsQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomsQuestionAdapter() {
		if (customsQuestionItemProvider == null) {
			customsQuestionItemProvider = new CustomsQuestionItemProvider(this);
		}

		return customsQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ImportTaxQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportTaxQuestionItemProvider importTaxQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ImportTaxQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportTaxQuestionAdapter() {
		if (importTaxQuestionItemProvider == null) {
			importTaxQuestionItemProvider = new ImportTaxQuestionItemProvider(this);
		}

		return importTaxQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.TaxShipmentDetailsQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaxShipmentDetailsQuestionItemProvider taxShipmentDetailsQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.TaxShipmentDetailsQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaxShipmentDetailsQuestionAdapter() {
		if (taxShipmentDetailsQuestionItemProvider == null) {
			taxShipmentDetailsQuestionItemProvider = new TaxShipmentDetailsQuestionItemProvider(this);
		}

		return taxShipmentDetailsQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.GeographicalQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeographicalQuestionItemProvider geographicalQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.GeographicalQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeographicalQuestionAdapter() {
		if (geographicalQuestionItemProvider == null) {
			geographicalQuestionItemProvider = new GeographicalQuestionItemProvider(this);
		}

		return geographicalQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.GeographicalRestrictionQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeographicalRestrictionQuestionItemProvider geographicalRestrictionQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.GeographicalRestrictionQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeographicalRestrictionQuestionAdapter() {
		if (geographicalRestrictionQuestionItemProvider == null) {
			geographicalRestrictionQuestionItemProvider = new GeographicalRestrictionQuestionItemProvider(this);
		}

		return geographicalRestrictionQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.AddressPickupQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressPickupQuestionItemProvider addressPickupQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.AddressPickupQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddressPickupQuestionAdapter() {
		if (addressPickupQuestionItemProvider == null) {
			addressPickupQuestionItemProvider = new AddressPickupQuestionItemProvider(this);
		}

		return addressPickupQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.AddressDeliveryQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressDeliveryQuestionItemProvider addressDeliveryQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.AddressDeliveryQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddressDeliveryQuestionAdapter() {
		if (addressDeliveryQuestionItemProvider == null) {
			addressDeliveryQuestionItemProvider = new AddressDeliveryQuestionItemProvider(this);
		}

		return addressDeliveryQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ShipmentTrackingNumberQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShipmentTrackingNumberQuestionItemProvider shipmentTrackingNumberQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ShipmentTrackingNumberQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShipmentTrackingNumberQuestionAdapter() {
		if (shipmentTrackingNumberQuestionItemProvider == null) {
			shipmentTrackingNumberQuestionItemProvider = new ShipmentTrackingNumberQuestionItemProvider(this);
		}

		return shipmentTrackingNumberQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.DangerousLoadQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DangerousLoadQuestionItemProvider dangerousLoadQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.DangerousLoadQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDangerousLoadQuestionAdapter() {
		if (dangerousLoadQuestionItemProvider == null) {
			dangerousLoadQuestionItemProvider = new DangerousLoadQuestionItemProvider(this);
		}

		return dangerousLoadQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.SpecialMeasuresQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecialMeasuresQuestionItemProvider specialMeasuresQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.SpecialMeasuresQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecialMeasuresQuestionAdapter() {
		if (specialMeasuresQuestionItemProvider == null) {
			specialMeasuresQuestionItemProvider = new SpecialMeasuresQuestionItemProvider(this);
		}

		return specialMeasuresQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.PerishableQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PerishableQuestionItemProvider perishableQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.PerishableQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPerishableQuestionAdapter() {
		if (perishableQuestionItemProvider == null) {
			perishableQuestionItemProvider = new PerishableQuestionItemProvider(this);
		}

		return perishableQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ExpirationDateQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpirationDateQuestionItemProvider expirationDateQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ExpirationDateQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpirationDateQuestionAdapter() {
		if (expirationDateQuestionItemProvider == null) {
			expirationDateQuestionItemProvider = new ExpirationDateQuestionItemProvider(this);
		}

		return expirationDateQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.CargoTypeQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CargoTypeQuestionItemProvider cargoTypeQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.CargoTypeQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCargoTypeQuestionAdapter() {
		if (cargoTypeQuestionItemProvider == null) {
			cargoTypeQuestionItemProvider = new CargoTypeQuestionItemProvider(this);
		}

		return cargoTypeQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.CargoWeightQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CargoWeightQuestionItemProvider cargoWeightQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.CargoWeightQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCargoWeightQuestionAdapter() {
		if (cargoWeightQuestionItemProvider == null) {
			cargoWeightQuestionItemProvider = new CargoWeightQuestionItemProvider(this);
		}

		return cargoWeightQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.CargoDimensionsQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CargoDimensionsQuestionItemProvider cargoDimensionsQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.CargoDimensionsQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCargoDimensionsQuestionAdapter() {
		if (cargoDimensionsQuestionItemProvider == null) {
			cargoDimensionsQuestionItemProvider = new CargoDimensionsQuestionItemProvider(this);
		}

		return cargoDimensionsQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.SeaShipmentQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SeaShipmentQuestionItemProvider seaShipmentQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.SeaShipmentQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSeaShipmentQuestionAdapter() {
		if (seaShipmentQuestionItemProvider == null) {
			seaShipmentQuestionItemProvider = new SeaShipmentQuestionItemProvider(this);
		}

		return seaShipmentQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.MaritimeQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaritimeQuestionItemProvider maritimeQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.MaritimeQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaritimeQuestionAdapter() {
		if (maritimeQuestionItemProvider == null) {
			maritimeQuestionItemProvider = new MaritimeQuestionItemProvider(this);
		}

		return maritimeQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.VoyageQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VoyageQuestionItemProvider voyageQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.VoyageQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVoyageQuestionAdapter() {
		if (voyageQuestionItemProvider == null) {
			voyageQuestionItemProvider = new VoyageQuestionItemProvider(this);
		}

		return voyageQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.MeansTransportQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeansTransportQuestionItemProvider meansTransportQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.MeansTransportQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeansTransportQuestionAdapter() {
		if (meansTransportQuestionItemProvider == null) {
			meansTransportQuestionItemProvider = new MeansTransportQuestionItemProvider(this);
		}

		return meansTransportQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.CompanyQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompanyQuestionItemProvider companyQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.CompanyQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompanyQuestionAdapter() {
		if (companyQuestionItemProvider == null) {
			companyQuestionItemProvider = new CompanyQuestionItemProvider(this);
		}

		return companyQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.DeliveryDeadlineQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeliveryDeadlineQuestionItemProvider deliveryDeadlineQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.DeliveryDeadlineQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeliveryDeadlineQuestionAdapter() {
		if (deliveryDeadlineQuestionItemProvider == null) {
			deliveryDeadlineQuestionItemProvider = new DeliveryDeadlineQuestionItemProvider(this);
		}

		return deliveryDeadlineQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.UpdatesAndMonitoringQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdatesAndMonitoringQuestionItemProvider updatesAndMonitoringQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.UpdatesAndMonitoringQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdatesAndMonitoringQuestionAdapter() {
		if (updatesAndMonitoringQuestionItemProvider == null) {
			updatesAndMonitoringQuestionItemProvider = new UpdatesAndMonitoringQuestionItemProvider(this);
		}

		return updatesAndMonitoringQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ExternalMediatorQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalMediatorQuestionItemProvider externalMediatorQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ExternalMediatorQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalMediatorQuestionAdapter() {
		if (externalMediatorQuestionItemProvider == null) {
			externalMediatorQuestionItemProvider = new ExternalMediatorQuestionItemProvider(this);
		}

		return externalMediatorQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.MediatorNameQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MediatorNameQuestionItemProvider mediatorNameQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.MediatorNameQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMediatorNameQuestionAdapter() {
		if (mediatorNameQuestionItemProvider == null) {
			mediatorNameQuestionItemProvider = new MediatorNameQuestionItemProvider(this);
		}

		return mediatorNameQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ShipmentInsuranceQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShipmentInsuranceQuestionItemProvider shipmentInsuranceQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ShipmentInsuranceQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShipmentInsuranceQuestionAdapter() {
		if (shipmentInsuranceQuestionItemProvider == null) {
			shipmentInsuranceQuestionItemProvider = new ShipmentInsuranceQuestionItemProvider(this);
		}

		return shipmentInsuranceQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.InsuranceDetailsQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InsuranceDetailsQuestionItemProvider insuranceDetailsQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.InsuranceDetailsQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInsuranceDetailsQuestionAdapter() {
		if (insuranceDetailsQuestionItemProvider == null) {
			insuranceDetailsQuestionItemProvider = new InsuranceDetailsQuestionItemProvider(this);
		}

		return insuranceDetailsQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ReturnsOrCancellationsQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReturnsOrCancellationsQuestionItemProvider returnsOrCancellationsQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ReturnsOrCancellationsQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReturnsOrCancellationsQuestionAdapter() {
		if (returnsOrCancellationsQuestionItemProvider == null) {
			returnsOrCancellationsQuestionItemProvider = new ReturnsOrCancellationsQuestionItemProvider(this);
		}

		return returnsOrCancellationsQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ReturnsManagementQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReturnsManagementQuestionItemProvider returnsManagementQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ReturnsManagementQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReturnsManagementQuestionAdapter() {
		if (returnsManagementQuestionItemProvider == null) {
			returnsManagementQuestionItemProvider = new ReturnsManagementQuestionItemProvider(this);
		}

		return returnsManagementQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.PenaltyForNeglectQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PenaltyForNeglectQuestionItemProvider penaltyForNeglectQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.PenaltyForNeglectQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPenaltyForNeglectQuestionAdapter() {
		if (penaltyForNeglectQuestionItemProvider == null) {
			penaltyForNeglectQuestionItemProvider = new PenaltyForNeglectQuestionItemProvider(this);
		}

		return penaltyForNeglectQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.AgreedPriceQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AgreedPriceQuestionItemProvider agreedPriceQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.AgreedPriceQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAgreedPriceQuestionAdapter() {
		if (agreedPriceQuestionItemProvider == null) {
			agreedPriceQuestionItemProvider = new AgreedPriceQuestionItemProvider(this);
		}

		return agreedPriceQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ProductQualityQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductQualityQuestionItemProvider productQualityQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ProductQualityQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductQualityQuestionAdapter() {
		if (productQualityQuestionItemProvider == null) {
			productQualityQuestionItemProvider = new ProductQualityQuestionItemProvider(this);
		}

		return productQualityQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.ExpectedQualityQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpectedQualityQuestionItemProvider expectedQualityQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.ExpectedQualityQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpectedQualityQuestionAdapter() {
		if (expectedQualityQuestionItemProvider == null) {
			expectedQualityQuestionItemProvider = new ExpectedQualityQuestionItemProvider(this);
		}

		return expectedQualityQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.InternationalSealQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternationalSealQuestionItemProvider internationalSealQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.InternationalSealQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternationalSealQuestionAdapter() {
		if (internationalSealQuestionItemProvider == null) {
			internationalSealQuestionItemProvider = new InternationalSealQuestionItemProvider(this);
		}

		return internationalSealQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.InternacionalSealNameQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternacionalSealNameQuestionItemProvider internacionalSealNameQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.InternacionalSealNameQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternacionalSealNameQuestionAdapter() {
		if (internacionalSealNameQuestionItemProvider == null) {
			internacionalSealNameQuestionItemProvider = new InternacionalSealNameQuestionItemProvider(this);
		}

		return internacionalSealNameQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.HealthInspectionQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HealthInspectionQuestionItemProvider healthInspectionQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.HealthInspectionQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHealthInspectionQuestionAdapter() {
		if (healthInspectionQuestionItemProvider == null) {
			healthInspectionQuestionItemProvider = new HealthInspectionQuestionItemProvider(this);
		}

		return healthInspectionQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.InspectionResultQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InspectionResultQuestionItemProvider inspectionResultQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.InspectionResultQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInspectionResultQuestionAdapter() {
		if (inspectionResultQuestionItemProvider == null) {
			inspectionResultQuestionItemProvider = new InspectionResultQuestionItemProvider(this);
		}

		return inspectionResultQuestionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xtext.smaCQA.StorageConditionsQuestion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StorageConditionsQuestionItemProvider storageConditionsQuestionItemProvider;

	/**
	 * This creates an adapter for a {@link org.xtext.smaCQA.StorageConditionsQuestion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStorageConditionsQuestionAdapter() {
		if (storageConditionsQuestionItemProvider == null) {
			storageConditionsQuestionItemProvider = new StorageConditionsQuestionItemProvider(this);
		}

		return storageConditionsQuestionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (modelItemProvider != null) modelItemProvider.dispose();
		if (valueExchangeItemProvider != null) valueExchangeItemProvider.dispose();
		if (dataQuestionItemProvider != null) dataQuestionItemProvider.dispose();
		if (shipmentQuestionItemProvider != null) shipmentQuestionItemProvider.dispose();
		if (insuranceQuestionItemProvider != null) insuranceQuestionItemProvider.dispose();
		if (alimentaryQuestionItemProvider != null) alimentaryQuestionItemProvider.dispose();
		if (valueObjectQuestionItemProvider != null) valueObjectQuestionItemProvider.dispose();
		if (valueObjectRightQuestionItemProvider != null) valueObjectRightQuestionItemProvider.dispose();
		if (valueObjectTokenQuestionItemProvider != null) valueObjectTokenQuestionItemProvider.dispose();
		if (valueObjectTangibleQuestionItemProvider != null) valueObjectTangibleQuestionItemProvider.dispose();
		if (dataRegisterItemProvider != null) dataRegisterItemProvider.dispose();
		if (tokenItemProvider != null) tokenItemProvider.dispose();
		if (tokenERC20ItemProvider != null) tokenERC20ItemProvider.dispose();
		if (tokenERC223ItemProvider != null) tokenERC223ItemProvider.dispose();
		if (tokenERC721ItemProvider != null) tokenERC721ItemProvider.dispose();
		if (timeValueExchangeDurationQuestionItemProvider != null) timeValueExchangeDurationQuestionItemProvider.dispose();
		if (timeStartValueExchangeQuestionItemProvider != null) timeStartValueExchangeQuestionItemProvider.dispose();
		if (repeatValueExchangeQuestionItemProvider != null) repeatValueExchangeQuestionItemProvider.dispose();
		if (conditionsValueExchangeQuestionItemProvider != null) conditionsValueExchangeQuestionItemProvider.dispose();
		if (legalQuestionItemProvider != null) legalQuestionItemProvider.dispose();
		if (ageQuestionItemProvider != null) ageQuestionItemProvider.dispose();
		if (taxQuestionItemProvider != null) taxQuestionItemProvider.dispose();
		if (additionalLegalDocumentQuestionItemProvider != null) additionalLegalDocumentQuestionItemProvider.dispose();
		if (regulatoryComplianceQuestionItemProvider != null) regulatoryComplianceQuestionItemProvider.dispose();
		if (economyQuestionItemProvider != null) economyQuestionItemProvider.dispose();
		if (minimumAmountQuestionItemProvider != null) minimumAmountQuestionItemProvider.dispose();
		if (shipmentCostResponsibilityQuestionItemProvider != null) shipmentCostResponsibilityQuestionItemProvider.dispose();
		if (shipmentDetailsQuestionItemProvider != null) shipmentDetailsQuestionItemProvider.dispose();
		if (sanitaryControlQuestionItemProvider != null) sanitaryControlQuestionItemProvider.dispose();
		if (customsQuestionItemProvider != null) customsQuestionItemProvider.dispose();
		if (importTaxQuestionItemProvider != null) importTaxQuestionItemProvider.dispose();
		if (taxShipmentDetailsQuestionItemProvider != null) taxShipmentDetailsQuestionItemProvider.dispose();
		if (geographicalQuestionItemProvider != null) geographicalQuestionItemProvider.dispose();
		if (geographicalRestrictionQuestionItemProvider != null) geographicalRestrictionQuestionItemProvider.dispose();
		if (addressPickupQuestionItemProvider != null) addressPickupQuestionItemProvider.dispose();
		if (addressDeliveryQuestionItemProvider != null) addressDeliveryQuestionItemProvider.dispose();
		if (shipmentTrackingNumberQuestionItemProvider != null) shipmentTrackingNumberQuestionItemProvider.dispose();
		if (dangerousLoadQuestionItemProvider != null) dangerousLoadQuestionItemProvider.dispose();
		if (specialMeasuresQuestionItemProvider != null) specialMeasuresQuestionItemProvider.dispose();
		if (perishableQuestionItemProvider != null) perishableQuestionItemProvider.dispose();
		if (expirationDateQuestionItemProvider != null) expirationDateQuestionItemProvider.dispose();
		if (cargoTypeQuestionItemProvider != null) cargoTypeQuestionItemProvider.dispose();
		if (cargoWeightQuestionItemProvider != null) cargoWeightQuestionItemProvider.dispose();
		if (cargoDimensionsQuestionItemProvider != null) cargoDimensionsQuestionItemProvider.dispose();
		if (seaShipmentQuestionItemProvider != null) seaShipmentQuestionItemProvider.dispose();
		if (maritimeQuestionItemProvider != null) maritimeQuestionItemProvider.dispose();
		if (voyageQuestionItemProvider != null) voyageQuestionItemProvider.dispose();
		if (meansTransportQuestionItemProvider != null) meansTransportQuestionItemProvider.dispose();
		if (companyQuestionItemProvider != null) companyQuestionItemProvider.dispose();
		if (deliveryDeadlineQuestionItemProvider != null) deliveryDeadlineQuestionItemProvider.dispose();
		if (updatesAndMonitoringQuestionItemProvider != null) updatesAndMonitoringQuestionItemProvider.dispose();
		if (externalMediatorQuestionItemProvider != null) externalMediatorQuestionItemProvider.dispose();
		if (mediatorNameQuestionItemProvider != null) mediatorNameQuestionItemProvider.dispose();
		if (shipmentInsuranceQuestionItemProvider != null) shipmentInsuranceQuestionItemProvider.dispose();
		if (insuranceDetailsQuestionItemProvider != null) insuranceDetailsQuestionItemProvider.dispose();
		if (returnsOrCancellationsQuestionItemProvider != null) returnsOrCancellationsQuestionItemProvider.dispose();
		if (returnsManagementQuestionItemProvider != null) returnsManagementQuestionItemProvider.dispose();
		if (penaltyForNeglectQuestionItemProvider != null) penaltyForNeglectQuestionItemProvider.dispose();
		if (agreedPriceQuestionItemProvider != null) agreedPriceQuestionItemProvider.dispose();
		if (productQualityQuestionItemProvider != null) productQualityQuestionItemProvider.dispose();
		if (expectedQualityQuestionItemProvider != null) expectedQualityQuestionItemProvider.dispose();
		if (internationalSealQuestionItemProvider != null) internationalSealQuestionItemProvider.dispose();
		if (internacionalSealNameQuestionItemProvider != null) internacionalSealNameQuestionItemProvider.dispose();
		if (healthInspectionQuestionItemProvider != null) healthInspectionQuestionItemProvider.dispose();
		if (inspectionResultQuestionItemProvider != null) inspectionResultQuestionItemProvider.dispose();
		if (storageConditionsQuestionItemProvider != null) storageConditionsQuestionItemProvider.dispose();
	}

}
