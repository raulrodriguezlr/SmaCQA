/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.smaCQA;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Unit Coin</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.smaCQA.SmaCQAPackage#getUnitCoin()
 * @model
 * @generated
 */
public enum UnitCoin implements Enumerator
{
  /**
	 * The '<em><b>Ether</b></em>' literal object.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #ETHER_VALUE
	 * @generated
	 * @ordered
	 */
  ETHER(0, "ether", "ether"),

  /**
	 * The '<em><b>Wei</b></em>' literal object.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #WEI_VALUE
	 * @generated
	 * @ordered
	 */
  WEI(1, "wei", "wei"),

  /**
	 * The '<em><b>Pwei</b></em>' literal object.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #PWEI_VALUE
	 * @generated
	 * @ordered
	 */
  PWEI(2, "pwei", "pwei"),

  /**
	 * The '<em><b>Gwei</b></em>' literal object.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #GWEI_VALUE
	 * @generated
	 * @ordered
	 */
  GWEI(3, "gwei", "gwei"),

  /**
	 * The '<em><b>Szabo</b></em>' literal object.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #SZABO_VALUE
	 * @generated
	 * @ordered
	 */
  SZABO(4, "szabo", "szabo");

  /**
	 * The '<em><b>Ether</b></em>' literal value.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #ETHER
	 * @model name="ether"
	 * @generated
	 * @ordered
	 */
  public static final int ETHER_VALUE = 0;

  /**
	 * The '<em><b>Wei</b></em>' literal value.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #WEI
	 * @model name="wei"
	 * @generated
	 * @ordered
	 */
  public static final int WEI_VALUE = 1;

  /**
	 * The '<em><b>Pwei</b></em>' literal value.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #PWEI
	 * @model name="pwei"
	 * @generated
	 * @ordered
	 */
  public static final int PWEI_VALUE = 2;

  /**
	 * The '<em><b>Gwei</b></em>' literal value.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #GWEI
	 * @model name="gwei"
	 * @generated
	 * @ordered
	 */
  public static final int GWEI_VALUE = 3;

  /**
	 * The '<em><b>Szabo</b></em>' literal value.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #SZABO
	 * @model name="szabo"
	 * @generated
	 * @ordered
	 */
  public static final int SZABO_VALUE = 4;

  /**
	 * An array of all the '<em><b>Unit Coin</b></em>' enumerators.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  private static final UnitCoin[] VALUES_ARRAY =
    new UnitCoin[] {
			ETHER,
			WEI,
			PWEI,
			GWEI,
			SZABO,
		};

  /**
	 * A public read-only list of all the '<em><b>Unit Coin</b></em>' enumerators.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public static final List<UnitCoin> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
	 * Returns the '<em><b>Unit Coin</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param literal the literal.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
  public static UnitCoin get(String literal)
  {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			UnitCoin result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

  /**
	 * Returns the '<em><b>Unit Coin</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param name the name.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
  public static UnitCoin getByName(String name)
  {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			UnitCoin result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

  /**
	 * Returns the '<em><b>Unit Coin</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the integer value.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
  public static UnitCoin get(int value)
  {
		switch (value) {
			case ETHER_VALUE: return ETHER;
			case WEI_VALUE: return WEI;
			case PWEI_VALUE: return PWEI;
			case GWEI_VALUE: return GWEI;
			case SZABO_VALUE: return SZABO;
		}
		return null;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  private final int value;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  private final String name;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  private final String literal;

  /**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  private UnitCoin(int value, String name, String literal)
  {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public int getValue()
  {
	  return value;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getName()
  {
	  return name;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getLiteral()
  {
	  return literal;
	}

  /**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		return literal;
	}
  
} //UnitCoin
