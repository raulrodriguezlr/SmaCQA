/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.smaCQA.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.smaCQA.AddressDeliveryQuestion;
import org.xtext.smaCQA.AddressPickupQuestion;
import org.xtext.smaCQA.CargoDimensionsQuestion;
import org.xtext.smaCQA.CargoTypeQuestion;
import org.xtext.smaCQA.CargoWeightQuestion;
import org.xtext.smaCQA.CompanyQuestion;
import org.xtext.smaCQA.CustomsQuestion;
import org.xtext.smaCQA.DangerousLoadQuestion;
import org.xtext.smaCQA.DeliveryDeadlineQuestion;
import org.xtext.smaCQA.ExternalMediatorQuestion;
import org.xtext.smaCQA.GeographicalQuestion;
import org.xtext.smaCQA.ImportTaxQuestion;
import org.xtext.smaCQA.MeansTransportQuestion;
import org.xtext.smaCQA.PerishableQuestion;
import org.xtext.smaCQA.SanitaryControlQuestion;
import org.xtext.smaCQA.SeaShipmentQuestion;
import org.xtext.smaCQA.ShipmentDetailsQuestion;
import org.xtext.smaCQA.ShipmentQuestion;
import org.xtext.smaCQA.ShipmentTrackingNumberQuestion;
import org.xtext.smaCQA.SmaCQAPackage;
import org.xtext.smaCQA.UpdatesAndMonitoringQuestion;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Shipment Question</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getShipmentDetails <em>Shipment Details</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getSanitaryControl <em>Sanitary Control</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getCustoms <em>Customs</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getImportTax <em>Import Tax</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getGeographicalQuestion <em>Geographical Question</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getAddressPickup <em>Address Pickup</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getAddressDelivery <em>Address Delivery</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getShipmentTrackingNumber <em>Shipment Tracking Number</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getDangerousLoad <em>Dangerous Load</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getPerishable <em>Perishable</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getCargoType <em>Cargo Type</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getCargoWeight <em>Cargo Weight</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getCargoDimensions <em>Cargo Dimensions</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getSeaShipment <em>Sea Shipment</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getMeans <em>Means</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getCompany <em>Company</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getDeliveryDeadline <em>Delivery Deadline</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getUpdatesAndMonitoring <em>Updates And Monitoring</em>}</li>
 *   <li>{@link org.xtext.smaCQA.impl.ShipmentQuestionImpl#getExternalMediator <em>External Mediator</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ShipmentQuestionImpl extends MinimalEObjectImpl.Container implements ShipmentQuestion
{
  /**
	 * The cached value of the '{@link #getShipmentDetails() <em>Shipment Details</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getShipmentDetails()
	 * @generated
	 * @ordered
	 */
  protected ShipmentDetailsQuestion shipmentDetails;

  /**
	 * The cached value of the '{@link #getSanitaryControl() <em>Sanitary Control</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getSanitaryControl()
	 * @generated
	 * @ordered
	 */
  protected SanitaryControlQuestion sanitaryControl;

  /**
	 * The cached value of the '{@link #getCustoms() <em>Customs</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getCustoms()
	 * @generated
	 * @ordered
	 */
  protected CustomsQuestion customs;

  /**
	 * The cached value of the '{@link #getImportTax() <em>Import Tax</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getImportTax()
	 * @generated
	 * @ordered
	 */
  protected ImportTaxQuestion importTax;

  /**
	 * The cached value of the '{@link #getGeographicalQuestion() <em>Geographical Question</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getGeographicalQuestion()
	 * @generated
	 * @ordered
	 */
  protected GeographicalQuestion geographicalQuestion;

  /**
	 * The cached value of the '{@link #getAddressPickup() <em>Address Pickup</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAddressPickup()
	 * @generated
	 * @ordered
	 */
  protected AddressPickupQuestion addressPickup;

  /**
	 * The cached value of the '{@link #getAddressDelivery() <em>Address Delivery</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getAddressDelivery()
	 * @generated
	 * @ordered
	 */
  protected AddressDeliveryQuestion addressDelivery;

  /**
	 * The cached value of the '{@link #getShipmentTrackingNumber() <em>Shipment Tracking Number</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getShipmentTrackingNumber()
	 * @generated
	 * @ordered
	 */
  protected ShipmentTrackingNumberQuestion shipmentTrackingNumber;

  /**
	 * The cached value of the '{@link #getDangerousLoad() <em>Dangerous Load</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getDangerousLoad()
	 * @generated
	 * @ordered
	 */
  protected DangerousLoadQuestion dangerousLoad;

  /**
	 * The cached value of the '{@link #getPerishable() <em>Perishable</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getPerishable()
	 * @generated
	 * @ordered
	 */
  protected PerishableQuestion perishable;

  /**
	 * The cached value of the '{@link #getCargoType() <em>Cargo Type</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getCargoType()
	 * @generated
	 * @ordered
	 */
  protected CargoTypeQuestion cargoType;

  /**
	 * The cached value of the '{@link #getCargoWeight() <em>Cargo Weight</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getCargoWeight()
	 * @generated
	 * @ordered
	 */
  protected CargoWeightQuestion cargoWeight;

  /**
	 * The cached value of the '{@link #getCargoDimensions() <em>Cargo Dimensions</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getCargoDimensions()
	 * @generated
	 * @ordered
	 */
  protected CargoDimensionsQuestion cargoDimensions;

  /**
	 * The cached value of the '{@link #getSeaShipment() <em>Sea Shipment</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getSeaShipment()
	 * @generated
	 * @ordered
	 */
  protected SeaShipmentQuestion seaShipment;

  /**
	 * The cached value of the '{@link #getMeans() <em>Means</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getMeans()
	 * @generated
	 * @ordered
	 */
  protected MeansTransportQuestion means;

  /**
	 * The cached value of the '{@link #getCompany() <em>Company</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getCompany()
	 * @generated
	 * @ordered
	 */
  protected CompanyQuestion company;

  /**
	 * The cached value of the '{@link #getDeliveryDeadline() <em>Delivery Deadline</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getDeliveryDeadline()
	 * @generated
	 * @ordered
	 */
  protected DeliveryDeadlineQuestion deliveryDeadline;

  /**
	 * The cached value of the '{@link #getUpdatesAndMonitoring() <em>Updates And Monitoring</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getUpdatesAndMonitoring()
	 * @generated
	 * @ordered
	 */
  protected UpdatesAndMonitoringQuestion updatesAndMonitoring;

  /**
	 * The cached value of the '{@link #getExternalMediator() <em>External Mediator</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getExternalMediator()
	 * @generated
	 * @ordered
	 */
  protected ExternalMediatorQuestion externalMediator;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ShipmentQuestionImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return SmaCQAPackage.Literals.SHIPMENT_QUESTION;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public ShipmentDetailsQuestion getShipmentDetails()
  {
		return shipmentDetails;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetShipmentDetails(ShipmentDetailsQuestion newShipmentDetails, NotificationChain msgs)
  {
		ShipmentDetailsQuestion oldShipmentDetails = shipmentDetails;
		shipmentDetails = newShipmentDetails;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_DETAILS, oldShipmentDetails, newShipmentDetails);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setShipmentDetails(ShipmentDetailsQuestion newShipmentDetails)
  {
		if (newShipmentDetails != shipmentDetails) {
			NotificationChain msgs = null;
			if (shipmentDetails != null)
				msgs = ((InternalEObject)shipmentDetails).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_DETAILS, null, msgs);
			if (newShipmentDetails != null)
				msgs = ((InternalEObject)newShipmentDetails).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_DETAILS, null, msgs);
			msgs = basicSetShipmentDetails(newShipmentDetails, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_DETAILS, newShipmentDetails, newShipmentDetails));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public SanitaryControlQuestion getSanitaryControl()
  {
		return sanitaryControl;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetSanitaryControl(SanitaryControlQuestion newSanitaryControl, NotificationChain msgs)
  {
		SanitaryControlQuestion oldSanitaryControl = sanitaryControl;
		sanitaryControl = newSanitaryControl;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__SANITARY_CONTROL, oldSanitaryControl, newSanitaryControl);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setSanitaryControl(SanitaryControlQuestion newSanitaryControl)
  {
		if (newSanitaryControl != sanitaryControl) {
			NotificationChain msgs = null;
			if (sanitaryControl != null)
				msgs = ((InternalEObject)sanitaryControl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__SANITARY_CONTROL, null, msgs);
			if (newSanitaryControl != null)
				msgs = ((InternalEObject)newSanitaryControl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__SANITARY_CONTROL, null, msgs);
			msgs = basicSetSanitaryControl(newSanitaryControl, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__SANITARY_CONTROL, newSanitaryControl, newSanitaryControl));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public CustomsQuestion getCustoms()
  {
		return customs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetCustoms(CustomsQuestion newCustoms, NotificationChain msgs)
  {
		CustomsQuestion oldCustoms = customs;
		customs = newCustoms;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__CUSTOMS, oldCustoms, newCustoms);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setCustoms(CustomsQuestion newCustoms)
  {
		if (newCustoms != customs) {
			NotificationChain msgs = null;
			if (customs != null)
				msgs = ((InternalEObject)customs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__CUSTOMS, null, msgs);
			if (newCustoms != null)
				msgs = ((InternalEObject)newCustoms).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__CUSTOMS, null, msgs);
			msgs = basicSetCustoms(newCustoms, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__CUSTOMS, newCustoms, newCustoms));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public ImportTaxQuestion getImportTax()
  {
		return importTax;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetImportTax(ImportTaxQuestion newImportTax, NotificationChain msgs)
  {
		ImportTaxQuestion oldImportTax = importTax;
		importTax = newImportTax;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__IMPORT_TAX, oldImportTax, newImportTax);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setImportTax(ImportTaxQuestion newImportTax)
  {
		if (newImportTax != importTax) {
			NotificationChain msgs = null;
			if (importTax != null)
				msgs = ((InternalEObject)importTax).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__IMPORT_TAX, null, msgs);
			if (newImportTax != null)
				msgs = ((InternalEObject)newImportTax).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__IMPORT_TAX, null, msgs);
			msgs = basicSetImportTax(newImportTax, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__IMPORT_TAX, newImportTax, newImportTax));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public GeographicalQuestion getGeographicalQuestion()
  {
		return geographicalQuestion;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetGeographicalQuestion(GeographicalQuestion newGeographicalQuestion, NotificationChain msgs)
  {
		GeographicalQuestion oldGeographicalQuestion = geographicalQuestion;
		geographicalQuestion = newGeographicalQuestion;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__GEOGRAPHICAL_QUESTION, oldGeographicalQuestion, newGeographicalQuestion);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setGeographicalQuestion(GeographicalQuestion newGeographicalQuestion)
  {
		if (newGeographicalQuestion != geographicalQuestion) {
			NotificationChain msgs = null;
			if (geographicalQuestion != null)
				msgs = ((InternalEObject)geographicalQuestion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__GEOGRAPHICAL_QUESTION, null, msgs);
			if (newGeographicalQuestion != null)
				msgs = ((InternalEObject)newGeographicalQuestion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__GEOGRAPHICAL_QUESTION, null, msgs);
			msgs = basicSetGeographicalQuestion(newGeographicalQuestion, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__GEOGRAPHICAL_QUESTION, newGeographicalQuestion, newGeographicalQuestion));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public AddressPickupQuestion getAddressPickup()
  {
		return addressPickup;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetAddressPickup(AddressPickupQuestion newAddressPickup, NotificationChain msgs)
  {
		AddressPickupQuestion oldAddressPickup = addressPickup;
		addressPickup = newAddressPickup;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_PICKUP, oldAddressPickup, newAddressPickup);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setAddressPickup(AddressPickupQuestion newAddressPickup)
  {
		if (newAddressPickup != addressPickup) {
			NotificationChain msgs = null;
			if (addressPickup != null)
				msgs = ((InternalEObject)addressPickup).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_PICKUP, null, msgs);
			if (newAddressPickup != null)
				msgs = ((InternalEObject)newAddressPickup).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_PICKUP, null, msgs);
			msgs = basicSetAddressPickup(newAddressPickup, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_PICKUP, newAddressPickup, newAddressPickup));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public AddressDeliveryQuestion getAddressDelivery()
  {
		return addressDelivery;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetAddressDelivery(AddressDeliveryQuestion newAddressDelivery, NotificationChain msgs)
  {
		AddressDeliveryQuestion oldAddressDelivery = addressDelivery;
		addressDelivery = newAddressDelivery;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_DELIVERY, oldAddressDelivery, newAddressDelivery);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setAddressDelivery(AddressDeliveryQuestion newAddressDelivery)
  {
		if (newAddressDelivery != addressDelivery) {
			NotificationChain msgs = null;
			if (addressDelivery != null)
				msgs = ((InternalEObject)addressDelivery).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_DELIVERY, null, msgs);
			if (newAddressDelivery != null)
				msgs = ((InternalEObject)newAddressDelivery).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_DELIVERY, null, msgs);
			msgs = basicSetAddressDelivery(newAddressDelivery, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_DELIVERY, newAddressDelivery, newAddressDelivery));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public ShipmentTrackingNumberQuestion getShipmentTrackingNumber()
  {
		return shipmentTrackingNumber;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetShipmentTrackingNumber(ShipmentTrackingNumberQuestion newShipmentTrackingNumber, NotificationChain msgs)
  {
		ShipmentTrackingNumberQuestion oldShipmentTrackingNumber = shipmentTrackingNumber;
		shipmentTrackingNumber = newShipmentTrackingNumber;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_TRACKING_NUMBER, oldShipmentTrackingNumber, newShipmentTrackingNumber);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setShipmentTrackingNumber(ShipmentTrackingNumberQuestion newShipmentTrackingNumber)
  {
		if (newShipmentTrackingNumber != shipmentTrackingNumber) {
			NotificationChain msgs = null;
			if (shipmentTrackingNumber != null)
				msgs = ((InternalEObject)shipmentTrackingNumber).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_TRACKING_NUMBER, null, msgs);
			if (newShipmentTrackingNumber != null)
				msgs = ((InternalEObject)newShipmentTrackingNumber).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_TRACKING_NUMBER, null, msgs);
			msgs = basicSetShipmentTrackingNumber(newShipmentTrackingNumber, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_TRACKING_NUMBER, newShipmentTrackingNumber, newShipmentTrackingNumber));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public DangerousLoadQuestion getDangerousLoad()
  {
		return dangerousLoad;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetDangerousLoad(DangerousLoadQuestion newDangerousLoad, NotificationChain msgs)
  {
		DangerousLoadQuestion oldDangerousLoad = dangerousLoad;
		dangerousLoad = newDangerousLoad;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__DANGEROUS_LOAD, oldDangerousLoad, newDangerousLoad);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setDangerousLoad(DangerousLoadQuestion newDangerousLoad)
  {
		if (newDangerousLoad != dangerousLoad) {
			NotificationChain msgs = null;
			if (dangerousLoad != null)
				msgs = ((InternalEObject)dangerousLoad).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__DANGEROUS_LOAD, null, msgs);
			if (newDangerousLoad != null)
				msgs = ((InternalEObject)newDangerousLoad).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__DANGEROUS_LOAD, null, msgs);
			msgs = basicSetDangerousLoad(newDangerousLoad, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__DANGEROUS_LOAD, newDangerousLoad, newDangerousLoad));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public PerishableQuestion getPerishable()
  {
		return perishable;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetPerishable(PerishableQuestion newPerishable, NotificationChain msgs)
  {
		PerishableQuestion oldPerishable = perishable;
		perishable = newPerishable;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__PERISHABLE, oldPerishable, newPerishable);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setPerishable(PerishableQuestion newPerishable)
  {
		if (newPerishable != perishable) {
			NotificationChain msgs = null;
			if (perishable != null)
				msgs = ((InternalEObject)perishable).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__PERISHABLE, null, msgs);
			if (newPerishable != null)
				msgs = ((InternalEObject)newPerishable).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__PERISHABLE, null, msgs);
			msgs = basicSetPerishable(newPerishable, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__PERISHABLE, newPerishable, newPerishable));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public CargoTypeQuestion getCargoType()
  {
		return cargoType;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetCargoType(CargoTypeQuestion newCargoType, NotificationChain msgs)
  {
		CargoTypeQuestion oldCargoType = cargoType;
		cargoType = newCargoType;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__CARGO_TYPE, oldCargoType, newCargoType);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setCargoType(CargoTypeQuestion newCargoType)
  {
		if (newCargoType != cargoType) {
			NotificationChain msgs = null;
			if (cargoType != null)
				msgs = ((InternalEObject)cargoType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__CARGO_TYPE, null, msgs);
			if (newCargoType != null)
				msgs = ((InternalEObject)newCargoType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__CARGO_TYPE, null, msgs);
			msgs = basicSetCargoType(newCargoType, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__CARGO_TYPE, newCargoType, newCargoType));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public CargoWeightQuestion getCargoWeight()
  {
		return cargoWeight;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetCargoWeight(CargoWeightQuestion newCargoWeight, NotificationChain msgs)
  {
		CargoWeightQuestion oldCargoWeight = cargoWeight;
		cargoWeight = newCargoWeight;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__CARGO_WEIGHT, oldCargoWeight, newCargoWeight);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setCargoWeight(CargoWeightQuestion newCargoWeight)
  {
		if (newCargoWeight != cargoWeight) {
			NotificationChain msgs = null;
			if (cargoWeight != null)
				msgs = ((InternalEObject)cargoWeight).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__CARGO_WEIGHT, null, msgs);
			if (newCargoWeight != null)
				msgs = ((InternalEObject)newCargoWeight).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__CARGO_WEIGHT, null, msgs);
			msgs = basicSetCargoWeight(newCargoWeight, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__CARGO_WEIGHT, newCargoWeight, newCargoWeight));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public CargoDimensionsQuestion getCargoDimensions()
  {
		return cargoDimensions;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetCargoDimensions(CargoDimensionsQuestion newCargoDimensions, NotificationChain msgs)
  {
		CargoDimensionsQuestion oldCargoDimensions = cargoDimensions;
		cargoDimensions = newCargoDimensions;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__CARGO_DIMENSIONS, oldCargoDimensions, newCargoDimensions);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setCargoDimensions(CargoDimensionsQuestion newCargoDimensions)
  {
		if (newCargoDimensions != cargoDimensions) {
			NotificationChain msgs = null;
			if (cargoDimensions != null)
				msgs = ((InternalEObject)cargoDimensions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__CARGO_DIMENSIONS, null, msgs);
			if (newCargoDimensions != null)
				msgs = ((InternalEObject)newCargoDimensions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__CARGO_DIMENSIONS, null, msgs);
			msgs = basicSetCargoDimensions(newCargoDimensions, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__CARGO_DIMENSIONS, newCargoDimensions, newCargoDimensions));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public SeaShipmentQuestion getSeaShipment()
  {
		return seaShipment;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetSeaShipment(SeaShipmentQuestion newSeaShipment, NotificationChain msgs)
  {
		SeaShipmentQuestion oldSeaShipment = seaShipment;
		seaShipment = newSeaShipment;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__SEA_SHIPMENT, oldSeaShipment, newSeaShipment);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setSeaShipment(SeaShipmentQuestion newSeaShipment)
  {
		if (newSeaShipment != seaShipment) {
			NotificationChain msgs = null;
			if (seaShipment != null)
				msgs = ((InternalEObject)seaShipment).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__SEA_SHIPMENT, null, msgs);
			if (newSeaShipment != null)
				msgs = ((InternalEObject)newSeaShipment).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__SEA_SHIPMENT, null, msgs);
			msgs = basicSetSeaShipment(newSeaShipment, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__SEA_SHIPMENT, newSeaShipment, newSeaShipment));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public MeansTransportQuestion getMeans()
  {
		return means;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetMeans(MeansTransportQuestion newMeans, NotificationChain msgs)
  {
		MeansTransportQuestion oldMeans = means;
		means = newMeans;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__MEANS, oldMeans, newMeans);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setMeans(MeansTransportQuestion newMeans)
  {
		if (newMeans != means) {
			NotificationChain msgs = null;
			if (means != null)
				msgs = ((InternalEObject)means).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__MEANS, null, msgs);
			if (newMeans != null)
				msgs = ((InternalEObject)newMeans).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__MEANS, null, msgs);
			msgs = basicSetMeans(newMeans, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__MEANS, newMeans, newMeans));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public CompanyQuestion getCompany()
  {
		return company;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetCompany(CompanyQuestion newCompany, NotificationChain msgs)
  {
		CompanyQuestion oldCompany = company;
		company = newCompany;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__COMPANY, oldCompany, newCompany);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setCompany(CompanyQuestion newCompany)
  {
		if (newCompany != company) {
			NotificationChain msgs = null;
			if (company != null)
				msgs = ((InternalEObject)company).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__COMPANY, null, msgs);
			if (newCompany != null)
				msgs = ((InternalEObject)newCompany).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__COMPANY, null, msgs);
			msgs = basicSetCompany(newCompany, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__COMPANY, newCompany, newCompany));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public DeliveryDeadlineQuestion getDeliveryDeadline()
  {
		return deliveryDeadline;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetDeliveryDeadline(DeliveryDeadlineQuestion newDeliveryDeadline, NotificationChain msgs)
  {
		DeliveryDeadlineQuestion oldDeliveryDeadline = deliveryDeadline;
		deliveryDeadline = newDeliveryDeadline;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__DELIVERY_DEADLINE, oldDeliveryDeadline, newDeliveryDeadline);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setDeliveryDeadline(DeliveryDeadlineQuestion newDeliveryDeadline)
  {
		if (newDeliveryDeadline != deliveryDeadline) {
			NotificationChain msgs = null;
			if (deliveryDeadline != null)
				msgs = ((InternalEObject)deliveryDeadline).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__DELIVERY_DEADLINE, null, msgs);
			if (newDeliveryDeadline != null)
				msgs = ((InternalEObject)newDeliveryDeadline).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__DELIVERY_DEADLINE, null, msgs);
			msgs = basicSetDeliveryDeadline(newDeliveryDeadline, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__DELIVERY_DEADLINE, newDeliveryDeadline, newDeliveryDeadline));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public UpdatesAndMonitoringQuestion getUpdatesAndMonitoring()
  {
		return updatesAndMonitoring;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetUpdatesAndMonitoring(UpdatesAndMonitoringQuestion newUpdatesAndMonitoring, NotificationChain msgs)
  {
		UpdatesAndMonitoringQuestion oldUpdatesAndMonitoring = updatesAndMonitoring;
		updatesAndMonitoring = newUpdatesAndMonitoring;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__UPDATES_AND_MONITORING, oldUpdatesAndMonitoring, newUpdatesAndMonitoring);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setUpdatesAndMonitoring(UpdatesAndMonitoringQuestion newUpdatesAndMonitoring)
  {
		if (newUpdatesAndMonitoring != updatesAndMonitoring) {
			NotificationChain msgs = null;
			if (updatesAndMonitoring != null)
				msgs = ((InternalEObject)updatesAndMonitoring).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__UPDATES_AND_MONITORING, null, msgs);
			if (newUpdatesAndMonitoring != null)
				msgs = ((InternalEObject)newUpdatesAndMonitoring).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__UPDATES_AND_MONITORING, null, msgs);
			msgs = basicSetUpdatesAndMonitoring(newUpdatesAndMonitoring, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__UPDATES_AND_MONITORING, newUpdatesAndMonitoring, newUpdatesAndMonitoring));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public ExternalMediatorQuestion getExternalMediator()
  {
		return externalMediator;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetExternalMediator(ExternalMediatorQuestion newExternalMediator, NotificationChain msgs)
  {
		ExternalMediatorQuestion oldExternalMediator = externalMediator;
		externalMediator = newExternalMediator;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__EXTERNAL_MEDIATOR, oldExternalMediator, newExternalMediator);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setExternalMediator(ExternalMediatorQuestion newExternalMediator)
  {
		if (newExternalMediator != externalMediator) {
			NotificationChain msgs = null;
			if (externalMediator != null)
				msgs = ((InternalEObject)externalMediator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__EXTERNAL_MEDIATOR, null, msgs);
			if (newExternalMediator != null)
				msgs = ((InternalEObject)newExternalMediator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmaCQAPackage.SHIPMENT_QUESTION__EXTERNAL_MEDIATOR, null, msgs);
			msgs = basicSetExternalMediator(newExternalMediator, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmaCQAPackage.SHIPMENT_QUESTION__EXTERNAL_MEDIATOR, newExternalMediator, newExternalMediator));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_DETAILS:
				return basicSetShipmentDetails(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__SANITARY_CONTROL:
				return basicSetSanitaryControl(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__CUSTOMS:
				return basicSetCustoms(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__IMPORT_TAX:
				return basicSetImportTax(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__GEOGRAPHICAL_QUESTION:
				return basicSetGeographicalQuestion(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_PICKUP:
				return basicSetAddressPickup(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_DELIVERY:
				return basicSetAddressDelivery(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_TRACKING_NUMBER:
				return basicSetShipmentTrackingNumber(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__DANGEROUS_LOAD:
				return basicSetDangerousLoad(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__PERISHABLE:
				return basicSetPerishable(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_TYPE:
				return basicSetCargoType(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_WEIGHT:
				return basicSetCargoWeight(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_DIMENSIONS:
				return basicSetCargoDimensions(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__SEA_SHIPMENT:
				return basicSetSeaShipment(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__MEANS:
				return basicSetMeans(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__COMPANY:
				return basicSetCompany(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__DELIVERY_DEADLINE:
				return basicSetDeliveryDeadline(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__UPDATES_AND_MONITORING:
				return basicSetUpdatesAndMonitoring(null, msgs);
			case SmaCQAPackage.SHIPMENT_QUESTION__EXTERNAL_MEDIATOR:
				return basicSetExternalMediator(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_DETAILS:
				return getShipmentDetails();
			case SmaCQAPackage.SHIPMENT_QUESTION__SANITARY_CONTROL:
				return getSanitaryControl();
			case SmaCQAPackage.SHIPMENT_QUESTION__CUSTOMS:
				return getCustoms();
			case SmaCQAPackage.SHIPMENT_QUESTION__IMPORT_TAX:
				return getImportTax();
			case SmaCQAPackage.SHIPMENT_QUESTION__GEOGRAPHICAL_QUESTION:
				return getGeographicalQuestion();
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_PICKUP:
				return getAddressPickup();
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_DELIVERY:
				return getAddressDelivery();
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_TRACKING_NUMBER:
				return getShipmentTrackingNumber();
			case SmaCQAPackage.SHIPMENT_QUESTION__DANGEROUS_LOAD:
				return getDangerousLoad();
			case SmaCQAPackage.SHIPMENT_QUESTION__PERISHABLE:
				return getPerishable();
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_TYPE:
				return getCargoType();
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_WEIGHT:
				return getCargoWeight();
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_DIMENSIONS:
				return getCargoDimensions();
			case SmaCQAPackage.SHIPMENT_QUESTION__SEA_SHIPMENT:
				return getSeaShipment();
			case SmaCQAPackage.SHIPMENT_QUESTION__MEANS:
				return getMeans();
			case SmaCQAPackage.SHIPMENT_QUESTION__COMPANY:
				return getCompany();
			case SmaCQAPackage.SHIPMENT_QUESTION__DELIVERY_DEADLINE:
				return getDeliveryDeadline();
			case SmaCQAPackage.SHIPMENT_QUESTION__UPDATES_AND_MONITORING:
				return getUpdatesAndMonitoring();
			case SmaCQAPackage.SHIPMENT_QUESTION__EXTERNAL_MEDIATOR:
				return getExternalMediator();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_DETAILS:
				setShipmentDetails((ShipmentDetailsQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__SANITARY_CONTROL:
				setSanitaryControl((SanitaryControlQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__CUSTOMS:
				setCustoms((CustomsQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__IMPORT_TAX:
				setImportTax((ImportTaxQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__GEOGRAPHICAL_QUESTION:
				setGeographicalQuestion((GeographicalQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_PICKUP:
				setAddressPickup((AddressPickupQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_DELIVERY:
				setAddressDelivery((AddressDeliveryQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_TRACKING_NUMBER:
				setShipmentTrackingNumber((ShipmentTrackingNumberQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__DANGEROUS_LOAD:
				setDangerousLoad((DangerousLoadQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__PERISHABLE:
				setPerishable((PerishableQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_TYPE:
				setCargoType((CargoTypeQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_WEIGHT:
				setCargoWeight((CargoWeightQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_DIMENSIONS:
				setCargoDimensions((CargoDimensionsQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__SEA_SHIPMENT:
				setSeaShipment((SeaShipmentQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__MEANS:
				setMeans((MeansTransportQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__COMPANY:
				setCompany((CompanyQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__DELIVERY_DEADLINE:
				setDeliveryDeadline((DeliveryDeadlineQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__UPDATES_AND_MONITORING:
				setUpdatesAndMonitoring((UpdatesAndMonitoringQuestion)newValue);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__EXTERNAL_MEDIATOR:
				setExternalMediator((ExternalMediatorQuestion)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_DETAILS:
				setShipmentDetails((ShipmentDetailsQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__SANITARY_CONTROL:
				setSanitaryControl((SanitaryControlQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__CUSTOMS:
				setCustoms((CustomsQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__IMPORT_TAX:
				setImportTax((ImportTaxQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__GEOGRAPHICAL_QUESTION:
				setGeographicalQuestion((GeographicalQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_PICKUP:
				setAddressPickup((AddressPickupQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_DELIVERY:
				setAddressDelivery((AddressDeliveryQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_TRACKING_NUMBER:
				setShipmentTrackingNumber((ShipmentTrackingNumberQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__DANGEROUS_LOAD:
				setDangerousLoad((DangerousLoadQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__PERISHABLE:
				setPerishable((PerishableQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_TYPE:
				setCargoType((CargoTypeQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_WEIGHT:
				setCargoWeight((CargoWeightQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_DIMENSIONS:
				setCargoDimensions((CargoDimensionsQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__SEA_SHIPMENT:
				setSeaShipment((SeaShipmentQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__MEANS:
				setMeans((MeansTransportQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__COMPANY:
				setCompany((CompanyQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__DELIVERY_DEADLINE:
				setDeliveryDeadline((DeliveryDeadlineQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__UPDATES_AND_MONITORING:
				setUpdatesAndMonitoring((UpdatesAndMonitoringQuestion)null);
				return;
			case SmaCQAPackage.SHIPMENT_QUESTION__EXTERNAL_MEDIATOR:
				setExternalMediator((ExternalMediatorQuestion)null);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_DETAILS:
				return shipmentDetails != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__SANITARY_CONTROL:
				return sanitaryControl != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__CUSTOMS:
				return customs != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__IMPORT_TAX:
				return importTax != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__GEOGRAPHICAL_QUESTION:
				return geographicalQuestion != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_PICKUP:
				return addressPickup != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__ADDRESS_DELIVERY:
				return addressDelivery != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__SHIPMENT_TRACKING_NUMBER:
				return shipmentTrackingNumber != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__DANGEROUS_LOAD:
				return dangerousLoad != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__PERISHABLE:
				return perishable != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_TYPE:
				return cargoType != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_WEIGHT:
				return cargoWeight != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__CARGO_DIMENSIONS:
				return cargoDimensions != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__SEA_SHIPMENT:
				return seaShipment != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__MEANS:
				return means != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__COMPANY:
				return company != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__DELIVERY_DEADLINE:
				return deliveryDeadline != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__UPDATES_AND_MONITORING:
				return updatesAndMonitoring != null;
			case SmaCQAPackage.SHIPMENT_QUESTION__EXTERNAL_MEDIATOR:
				return externalMediator != null;
		}
		return super.eIsSet(featureID);
	}

} //ShipmentQuestionImpl
